/**************************************************************************

    PublicHeader:   Render
    Filename    :   X360_ShaderBinary.cpp
    Content     :   X360 Shader descriptors
    Created     :   12/11/2012
    Authors     :   Automatically generated.

    Copyright   :   Copyright 2012 Autodesk, Inc. All Rights reserved.

    Use of this software is subject to the terms of the Autodesk license
    agreement provided at the time of installation or download, or which
    otherwise accompanies this software in either electronic or hard copy form.

**************************************************************************/


#include <xtl.h> // DWORD


namespace Scaleform { namespace Render { namespace X360 {


#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTG.hlsl.h /Vn
//    pBinary_X360_VTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTG.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy

// PDB hint 4e4a0000-9057f44b-15d143aa

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTG[] =
{
    0x102a1101, 0x00000138, 0x0000006c, 0x00000024, 0x00000088, 0x00000000, 
    0x00000100, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54472e68, 0x6c736c2e, 0x75706462, 0x00000074, 0x0000001c, 
    0x00000066, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000005f, 
    0x00000044, 0x00020000, 0x00020000, 0x00000048, 0x00000000, 0x00000058, 
    0x00020002, 0x00020000, 0x00000048, 0x00000000, 0x6d767000, 0x00010003, 
    0x00010004, 0x00020000, 0x00000000, 0x74657867, 0x656e0076, 0x735f335f, 
    0x3000322e, 0x302e3231, 0x3131392e, 0x3000abab, 0x00000000, 0x0000006c, 
    0x00010000, 0x00000000, 0x00000000, 0x00000821, 0x00000001, 0x00000001, 
    0x00000002, 0x00000290, 0x00000003, 0x00003050, 0x00000006, 0x00001007, 
    0x10011003, 0x00001200, 0xc2000000, 0x00002004, 0x00001200, 0xc4000000, 
    0x00002006, 0x00002200, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc889c03e, 0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 
    0xc8018000, 0x00a7a700, 0xaf000200, 0xc8028000, 0x00a7a700, 0xaf000300, 
    0x4e4a0000, 0x9057f44b, 0x15d143aa
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTG.hlsl.h /Vn
//    pBinary_X360_FTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTG.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    mov oC0, r0

// PDB hint 4e4a0000-1a9f46ea-80435dbc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTG[] =
{
    0x102a1100, 0x00000108, 0x0000003c, 0x00000024, 0x00000088, 0x00000000, 
    0x000000e4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54472e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 0x10000000, 
    0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 0x00003050, 
    0x00011002, 0x00001200, 0xc4000000, 0x00001003, 0x00002200, 0x00000000, 
    0x10080001, 0x1f1ff688, 0x00004000, 0xc80f8000, 0x00000000, 0xe2000000, 
    0x4e4a0000, 0x1a9f46ea, 0x80435dbc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGMul.hlsl.h /Vn
//    pBinary_X360_FTexTGMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    mul oC0.xyz, r0.xyz, r0.w
  + movs oC0.w, r0.w

// PDB hint 4e4a0000-6c81f6b4-71d68c77

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGMul[] =
{
    0x102a1100, 0x0000010c, 0x0000003c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474d75, 0x6c2e686c, 0x736c2e75, 0x70646200, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 
    0x10000000, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 
    0x00003050, 0x00011002, 0x00001200, 0xc4000000, 0x00001003, 0x00002200, 
    0x00000000, 0x10080001, 0x1f1ff688, 0x00004000, 0x14878000, 0x00c01b1b, 
    0xe1000000, 0x4e4a0000, 0x6c81f6b4, 0x71d68c77
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGInv.hlsl.h /Vn
//    pBinary_X360_FTexTGInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    mov oC0, r0.x

// PDB hint 4e4a0000-a361babf-76686633

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGInv[] =
{
    0x102a1100, 0x0000010c, 0x0000003c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x5447496e, 0x762e686c, 0x736c2e75, 0x70646200, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 
    0x10000000, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 
    0x00003050, 0x00011002, 0x00001200, 0xc4000000, 0x00001003, 0x00002200, 
    0x00000000, 0x10080001, 0x1f1ffffb, 0x00004000, 0xc80f8000, 0x006c6c00, 
    0xe2000000, 0x4e4a0000, 0xa361babf, 0x76686633
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGEAlpha.hlsl.h /Vn
//    pBinary_X360_VTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o1, r1
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy

// PDB hint 4e4a0000-a8619577-83e2ad08

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGEAlpha[] =
{
    0x102a1101, 0x0000014c, 0x00000084, 0x00000024, 0x00000090, 0x00000000, 
    0x00000108, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54474541, 0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000074, 0x0000001c, 0x00000066, 0xfffe0300, 0x00000002, 0x0000001c, 
    0x00000000, 0x0000005f, 0x00000044, 0x00020000, 0x00020000, 0x00000048, 
    0x00000000, 0x00000058, 0x00020002, 0x00020000, 0x00000048, 0x00000000, 
    0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x74657867, 
    0x656e0076, 0x735f335f, 0x3000322e, 0x302e3231, 0x3131392e, 0x3000abab, 
    0x00000000, 0x00000084, 0x00110001, 0x00000000, 0x00000000, 0x00001842, 
    0x00000001, 0x00000002, 0x00000003, 0x00000290, 0x0010a003, 0x00300004, 
    0x00003050, 0x0002f1a0, 0x00000008, 0x00001009, 0x00001007, 0x30052003, 
    0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 0x00003007, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 0xc802803e, 
    0x00a7a700, 0xaf000100, 0xc80f8001, 0x00000000, 0xe2010100, 0xc8018000, 
    0x00a7a700, 0xaf000200, 0xc8028000, 0x00a7a700, 0xaf000300, 0x4e4a0000, 
    0xa8619577, 0x83e2ad08
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    mul oC0.w, r0.w, r1.w
    mov oC0.xyz, r0.xyz

// PDB hint 4e4a0000-bf068590-850504cf

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGEAlpha[] =
{
    0x102a1100, 0x00000114, 0x00000048, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474541, 0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000048, 0x10000100, 0x00000008, 0x00000000, 0x00001842, 0x00010003, 
    0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 
    0x00002003, 0x00002200, 0x00000000, 0x10080001, 0x1f1ff688, 0x00004000, 
    0xc8088000, 0x001b1b00, 0xe1000100, 0xc8078000, 0x00c0c000, 0xe2000000, 
    0x4e4a0000, 0xbf068590, 0x850504cf
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FTexTGEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    mul r1.w, r0.w, r1.w
    mul r1.xyz, r1.w, r0.xyz
    mov oC0, r1

// PDB hint 4e4a0000-9e445829-16ca15f2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGEAlphaMul[] =
{
    0x102a1100, 0x00000118, 0x00000054, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474541, 0x6c706861, 0x4d756c2e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000054, 0x10000100, 0x00000008, 0x00000000, 0x00001842, 
    0x00010003, 0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 
    0xc4000000, 0x00003003, 0x00002200, 0x00000000, 0x10080001, 0x1f1ff688, 
    0x00004000, 0xc8080101, 0x001b1b00, 0xe1000100, 0xc8070101, 0x001bc000, 
    0xe1010000, 0xc80f8000, 0x00000000, 0xe2010100, 0x4e4a0000, 0x9e445829, 
    0x16ca15f2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FTexTGEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    mul oC0, r0.x, r1.w

// PDB hint 4e4a0000-9cde9d51-2b0add64

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGEAlphaInv[] =
{
    0x102a1100, 0x00000118, 0x0000003c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474541, 0x6c706861, 0x496e762e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000003c, 0x10000100, 0x00000008, 0x00000000, 0x00001842, 
    0x00010003, 0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 
    0xc4000000, 0x00001003, 0x00002200, 0x00000000, 0x10080001, 0x1f1ffffb, 
    0x00004000, 0xc80f8000, 0x006c1b00, 0xe1000100, 0x4e4a0000, 0x9cde9d51, 
    0x2b0add64
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGCxform.hlsl.h /Vn
//    pBinary_X360_VTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    dp4 o2.x, r0.wzxy, c4.wzxy
    dp4 o2.y, r0.wzxy, c5.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-3619a1ac-d0cd6733

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGCxform[] =
{
    0x102a1101, 0x00000198, 0x00000084, 0x00000024, 0x00000090, 0x00000000, 
    0x00000150, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54474378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x000000bc, 0x0000001c, 0x000000ae, 0xfffe0300, 0x00000004, 0x0000001c, 
    0x00000000, 0x000000a7, 0x0000006c, 0x00020000, 0x00010000, 0x00000074, 
    0x00000000, 0x00000084, 0x00020001, 0x00010000, 0x00000074, 0x00000000, 
    0x0000008a, 0x00020002, 0x00020000, 0x00000090, 0x00000000, 0x000000a0, 
    0x00020004, 0x00020000, 0x00000090, 0x00000000, 0x63786164, 0x6400abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 
    0x7000abab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x74657867, 
    0x656e0076, 0x735f335f, 0x3000322e, 0x302e3231, 0x3131392e, 0x3000abab, 
    0x00000000, 0x00000084, 0x00210000, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000001, 0x00000004, 0x00000290, 0x00000003, 0x0000f050, 
    0x0001f151, 0x00023252, 0x00001008, 0x00001009, 0x00000006, 0x00001007, 
    0x10011003, 0x00001200, 0xc2000000, 0x00002004, 0x00001200, 0xc4000000, 
    0x00004006, 0x00002200, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc889c03e, 0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 
    0xc8018002, 0x00a7a700, 0xaf000400, 0xc8028002, 0x00a7a700, 0xaf000500, 
    0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 
    0x4e4a0000, 0x3619a1ac, 0xd0cd6733
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxform.hlsl.h /Vn
//    pBinary_X360_FTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxform.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mad oC0, r2, r1, r0

// PDB hint 4e4a0000-8985779b-9ae89701

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxform[] =
{
    0x102a1100, 0x00000118, 0x0000003c, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x0000003c, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 0x00001200, 
    0xc4000000, 0x00001003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ff688, 
    0x00004000, 0xc80f8000, 0x00000000, 0xeb020100, 0x4e4a0000, 0x8985779b, 
    0x9ae89701
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformMul.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mad r2.xyz, r2.xyz, r1.xyz, r0.xyz
    mad r0.w, r2.w, r1.w, r0.w
    mul r0.xyz, r2.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-7c14df7e-1217d7c8

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformMul[] =
{
    0x102a1100, 0x0000011c, 0x00000060, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x4d756c2e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000060, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 
    0x00001200, 0xc4000000, 0x00004003, 0x00002200, 0x00000000, 0x10082041, 
    0x1f1ff688, 0x00004000, 0xc8070002, 0x00c0c0c0, 0xeb020100, 0xc8080000, 
    0x001b1b1b, 0xeb020100, 0xc8070000, 0x00c01b00, 0xe1020000, 0xc80f8000, 
    0x00000000, 0xe2000000, 0x4e4a0000, 0x7c14df7e, 0x1217d7c8
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformInv.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mad oC0, r2.x, r1.w, r0.w

// PDB hint 4e4a0000-4508658b-e687e631

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformInv[] =
{
    0x102a1100, 0x0000011c, 0x0000003c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x496e762e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000003c, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 
    0x00001200, 0xc4000000, 0x00001003, 0x00002200, 0x00000000, 0x10082041, 
    0x1f1ffffb, 0x00004000, 0xc80f8000, 0x006c1b1b, 0xeb020100, 0x4e4a0000, 
    0x4508658b, 0xe687e631
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGCxformEAlpha.hlsl.h /Vn
//    pBinary_X360_VTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o3, r1
    dp4 o2.x, r0.wzxy, c4.wzxy
    dp4 o2.y, r0.wzxy, c5.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-bc885cfe-86cb7843

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGCxformEAlpha[] =
{
    0x102a1101, 0x000001a8, 0x0000009c, 0x00000024, 0x00000094, 0x00000000, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54474378, 0x666f726d, 0x45416c70, 0x68612e68, 0x6c736c2e, 
    0x75706462, 0x000000bc, 0x0000001c, 0x000000ae, 0xfffe0300, 0x00000004, 
    0x0000001c, 0x00000000, 0x000000a7, 0x0000006c, 0x00020000, 0x00010000, 
    0x00000074, 0x00000000, 0x00000084, 0x00020001, 0x00010000, 0x00000074, 
    0x00000000, 0x0000008a, 0x00020002, 0x00020000, 0x00000090, 0x00000000, 
    0x000000a0, 0x00020004, 0x00020000, 0x00000090, 0x00000000, 0x63786164, 
    0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x63786d75, 
    0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x74657867, 0x656e0076, 0x735f335f, 0x3000322e, 0x302e3231, 0x3131392e, 
    0x3000abab, 0x00000000, 0x0000009c, 0x00310001, 0x00000000, 0x00000000, 
    0x00003884, 0x00000001, 0x00000002, 0x00000005, 0x00000290, 0x0010a003, 
    0x00300004, 0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 0x0000100a, 
    0x0000100b, 0x00000008, 0x00001009, 0x00001007, 0x30052003, 0x00001200, 
    0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 0x00005007, 0x00002200, 
    0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 
    0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 
    0xaf000300, 0xc80f8003, 0x00000000, 0xe2010100, 0xc8018002, 0x00a7a700, 
    0xaf000400, 0xc8028002, 0x00a7a700, 0xaf000500, 0xc80f8000, 0x00000000, 
    0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 0x4e4a0000, 0xbc885cfe, 
    0x86cb7843
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mad oC0.xyz, r2.xyz, r1.xyz, r0.xyz
    mad r0.x, r2.w, r1.w, r0.w
    mul oC0.w, r0.x, r3.w

// PDB hint 4e4a0000-d02e790e-8dde6c5c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformEAlpha[] =
{
    0x102a1100, 0x00000120, 0x00000054, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x45416c70, 0x68612e68, 0x6c736c2e, 
    0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000054, 0x10000300, 0x00000008, 0x00000000, 0x00003884, 
    0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 
    0x00011002, 0x00001200, 0xc4000000, 0x00003003, 0x00002200, 0x00000000, 
    0x10082041, 0x1f1ff688, 0x00004000, 0xc8078000, 0x00c0c0c0, 0xeb020100, 
    0xc8010300, 0x001b1b1b, 0xeb020100, 0xc8088000, 0x006c1b00, 0xe1000300, 
    0x4e4a0000, 0xd02e790e, 0x8dde6c5c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mad r0, r2.wxyz, r1.wxyz, r0.wxyz
    mul r3.w, r0.x, r3.w
    mul r3.xyz, r3.w, r0.yzw
    mov oC0, r3

// PDB hint 4e4a0000-a6d7cf4d-8fd5da21

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformEAlphaMul[] =
{
    0x102a1100, 0x00000124, 0x00000060, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x45416c70, 0x68614d75, 0x6c2e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000060, 0x10000300, 0x00000008, 0x00000000, 
    0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00004003, 0x00002200, 
    0x00000000, 0x10082041, 0x1f1ff688, 0x00004000, 0xc80f0300, 0x00ffffff, 
    0xeb020100, 0xc8080303, 0x006c1b00, 0xe1000300, 0xc8070303, 0x001b1500, 
    0xe1030000, 0xc80f8000, 0x00000000, 0xe2030300, 0x4e4a0000, 0xa6d7cf4d, 
    0x8fd5da21
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mad r0.x, r2.x, r1.w, r0.w
    mul oC0, r0.x, r3.w

// PDB hint 4e4a0000-91440af8-fd0b8ef5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformEAlphaInv[] =
{
    0x102a1100, 0x00000124, 0x00000048, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x45416c70, 0x6861496e, 0x762e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000048, 0x10000300, 0x00000008, 0x00000000, 
    0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00002003, 0x00002200, 
    0x00000000, 0x10082041, 0x1f1ffffb, 0x00004000, 0xc8010300, 0x006c1b1b, 
    0xeb020100, 0xc80f8000, 0x006c1b00, 0xe1000300, 0x4e4a0000, 0x91440af8, 
    0xfd0b8ef5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAc.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAc.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mul r2.xyz, r2.xyz, r1.xyz
  + movs r0._, r2.w
    mul r2.xyz, r2.xyz, r1.w
  + muls_prev r2.w, r1.w
    mad oC0, r2.w, r0, r2

// PDB hint 4e4a0000-6e8026b6-79e9a389

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAc[] =
{
    0x102a1100, 0x00000118, 0x00000054, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x41632e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000054, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 0x00001200, 
    0xc4000000, 0x00003003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ff688, 
    0x00004000, 0x14070002, 0x00c0c01b, 0xe1020102, 0x0c870202, 0x00c01b1b, 
    0xe1020101, 0xc80f8000, 0x001b0000, 0xeb020002, 0x4e4a0000, 0x6e8026b6, 
    0x79e9a389
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcMul.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mul r2, r2, r1
    mul r0, r2.w, r0
    add r0.w, r2.w, r0.w
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-5f0029f1-e01ed961

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAcMul[] =
{
    0x102a1100, 0x0000011c, 0x00000078, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x41634d75, 0x6c2e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000078, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 
    0x00001200, 0xc4000000, 0x00006003, 0x00002200, 0x00000000, 0x10082041, 
    0x1f1ff688, 0x00004000, 0xc80f0002, 0x00000000, 0xe1020100, 0xc80f0000, 
    0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 0xe0020000, 0xc8070000, 
    0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 
    0x00000000, 0xe2000000, 0x4e4a0000, 0x5f0029f1, 0xe01ed961
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcInv.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformAcInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    mul r0.x, r0.x, r2.x
    mad oC0, r2.x, r1.w, r0.x

// PDB hint 4e4a0000-9a069066-86c04234

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAcInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAcInv[] =
{
    0x102a1100, 0x0000011c, 0x00000054, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x4163496e, 0x762e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000054, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 
    0x00001200, 0xc4000000, 0x00003003, 0x00002200, 0x00000000, 0x10082041, 
    0x1f1ffffb, 0x00004000, 0xc8010000, 0x001b1b00, 0xe1000100, 0xc8010000, 
    0x006c6c00, 0xe1000200, 0xc80f8000, 0x006c1b6c, 0xeb020100, 0x4e4a0000, 
    0x9a069066, 0x86c04234
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGCxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    mul r2, r2, r1
    mul r0, r2.w, r0
    mad oC0.xyz, r2.xyz, r1.w, r0.xyz
    add r0.x, r2.w, r0.w
    mul oC0.w, r0.x, r3.w

// PDB hint 4e4a0000-b0d710e9-6a1b7074

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAcEAlpha[] =
{
    0x102a1100, 0x00000124, 0x0000006c, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x41634541, 0x6c706861, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000006c, 0x10000300, 0x00000008, 0x00000000, 
    0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00005003, 0x00002200, 
    0x00000000, 0x10082041, 0x1f1ff688, 0x00004000, 0xc80f0302, 0x00000000, 
    0xe1020100, 0xc80f0300, 0x001b0000, 0xe1020000, 0xc8078000, 0x00c01bc0, 
    0xeb020100, 0xc8010300, 0x001b1b00, 0xe0020000, 0xc8088000, 0x006c1b00, 
    0xe1000300, 0x4e4a0000, 0xb0d710e9, 0x6a1b7074
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGCxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exec
    mul r4, r2.wxyz, r1.wxyz
    mad r2.x, r4.x, r0.w, r4.x
    mul r1.xyz, r4.yzw, r1.w
    mad r0.xyz, r4.x, r0.xyz, r1.xyz
    mul r3.w, r2.x, r3.w
    mul r3.xyz, r3.w, r0.xyz
    exece
    mov oC0, r3

// PDB hint 4e4a0000-f8667612-a4e3b55d

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAcEAlphaMul[] =
{
    0x102a1100, 0x00000128, 0x00000084, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x41634541, 0x6c706861, 0x4d756c2e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000084, 0x10000400, 0x00000008, 
    0x00000000, 0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00006003, 
    0x10091200, 0x22000000, 0x10082041, 0x1f1ff688, 0x00004000, 0xc80f0304, 
    0x00ffff00, 0xe1020100, 0xc8010302, 0x006c1b6c, 0xeb040004, 0xc8070301, 
    0x00151b00, 0xe1040100, 0xc8070300, 0x006cc0c0, 0xeb040001, 0xc8080303, 
    0x006c1b00, 0xe1020300, 0xc8070303, 0x001bc000, 0xe1030000, 0xc80f8000, 
    0x00000000, 0xe2030300, 0x4e4a0000, 0xf8667612, 0xa4e3b55d
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FTexTGCxformAcEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCxformAcEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    mul r0.x, r0.x, r2.x
    mad r0.x, r2.x, r1.w, r0.x
    mul oC0, r0.x, r3.w

// PDB hint 4e4a0000-f6244ae9-3afd35c5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCxformAcEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCxformAcEAlphaInv[] =
{
    0x102a1100, 0x00000128, 0x00000060, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54474378, 0x666f726d, 0x41634541, 0x6c706861, 0x496e762e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000060, 0x10000300, 0x00000008, 
    0x00000000, 0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00004003, 
    0x00002200, 0x00000000, 0x10082041, 0x1f1ffffb, 0x00004000, 0xc8010300, 
    0x001b1b00, 0xe1000100, 0xc8010300, 0x006c6c00, 0xe1000200, 0xc8010300, 
    0x006c1b6c, 0xeb020100, 0xc80f8000, 0x006c1b00, 0xe1000300, 0x4e4a0000, 
    0xf6244ae9, 0x3afd35c5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertex.hlsl.h /Vn
//    pBinary_X360_VVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertex.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x
dcl_color o0


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o0, r1

// PDB hint 4e4a0000-2128cb09-ae02e125

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VVertex[] =
{
    0x102a1101, 0x00000120, 0x0000006c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56566572, 0x7465782e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00020000, 0x00020000, 0x00000034, 0x00000000, 
    0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 
    0x00010001, 0x00000000, 0x00000000, 0x00001021, 0x00000001, 0x00000002, 
    0x00000001, 0x00000290, 0x0010a003, 0x00300004, 0x0000f0a0, 0x00001007, 
    0x30052003, 0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 
    0x00001007, 0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 
    0xc802803e, 0x00a7a700, 0xaf000100, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0x2128cb09, 0xae02e125
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertex.hlsl.h /Vn
//    pBinary_X360_FVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertex.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1

dcl_color_centroid r0


    alloc colors
    exece
    mov oC0, r0

// PDB hint 4e4a0000-8910132f-6b67be92

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertex[] =
{
    0x102a1100, 0x000000e4, 0x00000024, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000c0, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x7465782e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000030, 
    0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 0x00000000, 0x00000000, 
    0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000024, 0x10000000, 0x00000000, 0x00000000, 0x00001021, 
    0x00000001, 0x00000001, 0x0000f0a0, 0x00000000, 0x1001c400, 0x22000000, 
    0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x8910132f, 0x6b67be92
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexMul.hlsl.h /Vn
//    pBinary_X360_FVertexMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1

dcl_color_centroid r0


    alloc colors
    exece
    mul oC0.xyz, r0.xyz, r0.w
  + movs oC0.w, r0.w

// PDB hint 4e4a0000-f0a45558-4f864067

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexMul[] =
{
    0x102a1100, 0x000000e4, 0x00000024, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000c0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x7465784d, 0x756c2e68, 0x6c736c2e, 0x75706462, 0x00000030, 
    0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 0x00000000, 0x00000000, 
    0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000024, 0x10000000, 0x00000000, 0x00000000, 0x00001021, 
    0x00000001, 0x00000001, 0x0000f0a0, 0x00000000, 0x1001c400, 0x22000000, 
    0x14878000, 0x00c01b1b, 0xe1000000, 0x4e4a0000, 0xf0a45558, 0x4f864067
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexInv.hlsl.h /Vn
//    pBinary_X360_FVertexInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1

dcl_color_centroid r0


    alloc colors
    exece
    mov oC0, r0.w

// PDB hint 4e4a0000-c280f47b-de13435c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexInv[] =
{
    0x102a1100, 0x000000e4, 0x00000024, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000c0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657849, 0x6e762e68, 0x6c736c2e, 0x75706462, 0x00000030, 
    0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 0x00000000, 0x00000000, 
    0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000024, 0x10000000, 0x00000000, 0x00000000, 0x00001021, 
    0x00000001, 0x00000001, 0x0000f0a0, 0x00000000, 0x1001c400, 0x22000000, 
    0xc80f8000, 0x001b1b00, 0xe2000000, 0x4e4a0000, 0xc280f47b, 0xde13435c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexEAlpha.hlsl.h /Vn
//    pBinary_X360_VVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o0, r2
    mov o1, r1

// PDB hint 4e4a0000-f0160b02-237799cc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VVertexEAlpha[] =
{
    0x102a1101, 0x00000130, 0x00000084, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56566572, 0x74657845, 0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 
    0x00000058, 0x0000001c, 0x0000004b, 0xfffe0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00020000, 0x00020000, 0x00000034, 
    0x00000000, 0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000084, 0x00110002, 0x00000000, 0x00000000, 0x00002042, 0x00000001, 
    0x00000003, 0x00000002, 0x00000290, 0x0010a003, 0x0001a004, 0x00300005, 
    0x0000f0a0, 0x0001f1a1, 0x00001008, 0x00001009, 0x70153003, 0x00001200, 
    0xc2000000, 0x00002006, 0x00001200, 0xc4000000, 0x00002008, 0x00002200, 
    0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 
    0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 
    0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 0xc80f8000, 0x00000000, 
    0xe2020200, 0xc80f8001, 0x00000000, 0xe2010100, 0x4e4a0000, 0xf0160b02, 
    0x237799cc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlpha.hlsl.h /Vn
//    pBinary_X360_FVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlpha.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1

dcl_color_centroid r0
dcl_color1_centroid r1


    alloc colors
    exece
    mul oC0.w, r0.w, r1.w
    mov oC0.xyz, r0.xyz

// PDB hint 4e4a0000-3b18b31a-dc0032a4

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexEAlpha[] =
{
    0x102a1100, 0x000000ec, 0x00000030, 0x00000024, 0x00000090, 0x00000000, 
    0x000000c4, 0x00000000, 0x00000000, 0x50c76f38, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657845, 0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 
    0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 0x00000000, 
    0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000030, 0x10000100, 0x00000000, 0x00000000, 
    0x00002042, 0x00000003, 0x00000001, 0x0000f0a0, 0x0000f1a1, 0x00000000, 
    0x2001c400, 0x22000000, 0xc8088000, 0x001b1b00, 0xe1000100, 0xc8078000, 
    0x00c0c000, 0xe2000000, 0x4e4a0000, 0x3b18b31a, 0xdc0032a4
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FVertexEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlphaMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1

dcl_color_centroid r0
dcl_color1_centroid r1


    alloc colors
    exece
    mul r1.w, r0.w, r1.w
    mul r1.xyz, r1.w, r0.xyz
    mov oC0, r1

// PDB hint 4e4a0000-581abfb6-b1abd5bc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexEAlphaMul[] =
{
    0x102a1100, 0x000000f0, 0x0000003c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657845, 0x416c7068, 0x614d756c, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 0x10000100, 0x00000000, 
    0x00000000, 0x00002042, 0x00000003, 0x00000001, 0x0000f0a0, 0x0000f1a1, 
    0x00000000, 0x3001c400, 0x22000000, 0xc8080001, 0x001b1b00, 0xe1000100, 
    0xc8070001, 0x001bc000, 0xe1010000, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0x581abfb6, 0xb1abd5bc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FVertexEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexEAlphaInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1

dcl_color_centroid r0
dcl_color1_centroid r1


    alloc colors
    exece
    mul oC0, r0.w, r1.w

// PDB hint 4e4a0000-d3c602fd-ec27b580

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexEAlphaInv[] =
{
    0x102a1100, 0x000000f0, 0x00000024, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657845, 0x416c7068, 0x61496e76, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000024, 0x10000100, 0x00000000, 
    0x00000000, 0x00002042, 0x00000003, 0x00000001, 0x0000f0a0, 0x0000f1a1, 
    0x00000000, 0x1001c400, 0x22000000, 0xc80f8000, 0x001b1b00, 0xe1000100, 
    0x4e4a0000, 0xd3c602fd, 0xec27b580
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexCxform.hlsl.h /Vn
//    pBinary_X360_VVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o2, r1
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-09f73987-8152a0eb

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VVertexCxform[] =
{
    0x102a1101, 0x0000017c, 0x00000084, 0x00000024, 0x00000090, 0x00000000, 
    0x00000134, 0x00000000, 0x00000000, 0x50c76f38, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56566572, 0x74657843, 0x78666f72, 0x6d2e686c, 0x736c2e75, 0x70646200, 
    0x000000a0, 0x0000001c, 0x00000093, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x0000008c, 0x00000058, 0x00020000, 0x00010000, 0x00000060, 
    0x00000000, 0x00000070, 0x00020001, 0x00010000, 0x00000060, 0x00000000, 
    0x00000076, 0x00020002, 0x00020000, 0x0000007c, 0x00000000, 0x63786164, 
    0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x63786d75, 
    0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000084, 0x00210001, 0x00000000, 0x00000000, 0x00003063, 0x00000001, 
    0x00000002, 0x00000003, 0x00000290, 0x0010a003, 0x00300004, 0x0000f050, 
    0x0001f151, 0x0002f2a0, 0x00001008, 0x00001009, 0x00001007, 0x30052003, 
    0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 0x00003007, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000200, 0xc802803e, 
    0x00a7a700, 0xaf000300, 0xc80f8002, 0x00000000, 0xe2010100, 0xc80f8000, 
    0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 0x4e4a0000, 
    0x09f73987, 0x8152a0eb
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxform.hlsl.h /Vn
//    pBinary_X360_FVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxform.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mad oC0, r2, r1, r0

// PDB hint 4e4a0000-65ee453a-12e86dcc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxform[] =
{
    0x102a1100, 0x000000f0, 0x00000024, 0x00000024, 0x00000090, 0x00000000, 
    0x000000c4, 0x00000000, 0x00000000, 0x50c76f38, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d2e686c, 0x736c2e75, 0x70646200, 
    0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 0x00000000, 
    0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000024, 0x10000200, 0x00000008, 0x00000000, 
    0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 0x0000f2a0, 
    0x00000000, 0x1001c400, 0x22000000, 0xc80f8000, 0x00000000, 0xeb020100, 
    0x4e4a0000, 0x65ee453a, 0x12e86dcc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformMul.hlsl.h /Vn
//    pBinary_X360_FVertexCxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mad r3.xyz, r2.xyz, r1.xyz, r0.xyz
    mad r2.w, r2.w, r1.w, r0.w
    mul r2.xyz, r3.xyz, r2.w
    mov oC0, r2

// PDB hint 4e4a0000-459677e6-d7db20dd

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformMul[] =
{
    0x102a1100, 0x000000f4, 0x00000048, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d4d756c, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000048, 0x10000300, 0x00000008, 
    0x00000000, 0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x0000f2a0, 0x00000000, 0x4001c400, 0x22000000, 0xc8070203, 0x00c0c0c0, 
    0xeb020100, 0xc8080202, 0x001b1b1b, 0xeb020100, 0xc8070202, 0x00c01b00, 
    0xe1030200, 0xc80f8000, 0x00000000, 0xe2020200, 0x4e4a0000, 0x459677e6, 
    0xd7db20dd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformInv.hlsl.h /Vn
//    pBinary_X360_FVertexCxformInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mad oC0, r2.w, r1.w, r0.w

// PDB hint 4e4a0000-44e067d3-ded87a87

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformInv[] =
{
    0x102a1100, 0x000000f4, 0x00000024, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d496e76, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000024, 0x10000200, 0x00000008, 
    0x00000000, 0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x0000f2a0, 0x00000000, 0x1001c400, 0x22000000, 0xc80f8000, 0x001b1b1b, 
    0xeb020100, 0x4e4a0000, 0x44e067d3, 0xded87a87
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexCxformEAlpha.hlsl.h /Vn
//    pBinary_X360_VVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o2, r2
    mov o3, r1
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-dcac62c6-5175f75b

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VVertexCxformEAlpha[] =
{
    0x102a1101, 0x00000190, 0x0000009c, 0x00000024, 0x00000098, 0x00000000, 
    0x0000013c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56566572, 0x74657843, 0x78666f72, 0x6d45416c, 0x7068612e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x000000a0, 0x0000001c, 0x00000093, 0xfffe0300, 
    0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 0x00020000, 
    0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00010000, 
    0x00000060, 0x00000000, 0x00000076, 0x00020002, 0x00020000, 0x0000007c, 
    0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 
    0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 
    0x00020000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000009c, 0x00310002, 0x00000000, 0x00000000, 
    0x00004084, 0x00000001, 0x00000003, 0x00000004, 0x00000290, 0x0010a003, 
    0x0001a004, 0x00300005, 0x0000f050, 0x0001f151, 0x0002f2a0, 0x0003f3a1, 
    0x0000100a, 0x0000100b, 0x00001008, 0x00001009, 0x70153003, 0x00001200, 
    0xc2000000, 0x00002006, 0x00001200, 0xc4000000, 0x00004008, 0x00002200, 
    0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 
    0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 
    0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 0xc80f8002, 0x00000000, 
    0xe2020200, 0xc80f8003, 0x00000000, 0xe2010100, 0xc80f8000, 0x00000000, 
    0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 0x4e4a0000, 0xdcac62c6, 
    0x5175f75b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlpha.hlsl.h /Vn
//    pBinary_X360_FVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlpha.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exece
    mad r4.x, r2.w, r1.w, r0.w
    mul oC0.w, r4.x, r3.w
    mad oC0.xyz, r2.xyz, r1.xyz, r0.xyz

// PDB hint 4e4a0000-22483bb7-2b57b9b3

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformEAlpha[] =
{
    0x102a1100, 0x000000fc, 0x0000003c, 0x00000024, 0x00000098, 0x00000000, 
    0x000000cc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d45416c, 0x7068612e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 0x10000400, 
    0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x3001c400, 0x22000000, 
    0xc8010204, 0x001b1b1b, 0xeb020100, 0xc8088000, 0x006c1b00, 0xe1040300, 
    0xc8078000, 0x00c0c0c0, 0xeb020100, 0x4e4a0000, 0x22483bb7, 0x2b57b9b3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FVertexCxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlphaMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exece
    mad r2, r2, r1, r0
    mul r2.w, r2.w, r3.w
    mul r2.xyz, r2.w, r2.xyz
    mov oC0, r2

// PDB hint 4e4a0000-f74bc4d1-9367adb2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformEAlphaMul[] =
{
    0x102a1100, 0x000000fc, 0x00000048, 0x00000024, 0x00000098, 0x00000000, 
    0x000000cc, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d45416c, 0x7068614d, 0x756c2e68, 
    0x6c736c2e, 0x75706462, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000048, 0x10000300, 
    0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x4001c400, 0x22000000, 
    0xc80f0202, 0x00000000, 0xeb020100, 0xc8080202, 0x001b1b00, 0xe1020300, 
    0xc8070202, 0x001bc000, 0xe1020200, 0xc80f8000, 0x00000000, 0xe2020200, 
    0x4e4a0000, 0xf74bc4d1, 0x9367adb2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FVertexCxformEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformEAlphaInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exece
    mad r2.x, r2.w, r1.w, r0.w
    mul oC0, r2.x, r3.w

// PDB hint 4e4a0000-08fb01da-3ab4a3c0

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformEAlphaInv[] =
{
    0x102a1100, 0x000000fc, 0x00000030, 0x00000024, 0x00000098, 0x00000000, 
    0x000000cc, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d45416c, 0x70686149, 0x6e762e68, 
    0x6c736c2e, 0x75706462, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000030, 0x10000300, 
    0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x2001c400, 0x22000000, 
    0xc8010202, 0x001b1b1b, 0xeb020100, 0xc80f8000, 0x006c1b00, 0xe1020300, 
    0x4e4a0000, 0x08fb01da, 0x3ab4a3c0
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAc.hlsl.h /Vn
//    pBinary_X360_FVertexCxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAc.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mul r3.xyz, r2.xyz, r1.xyz
  + movs r2._, r2.w
    mul r2.xyz, r3.xyz, r1.w
  + muls_prev r2.w, r1.w
    mad oC0, r2.w, r0, r2

// PDB hint 4e4a0000-3dbc0546-be5dd0ae

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAc[] =
{
    0x102a1100, 0x000000f4, 0x0000003c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d41632e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 0x10000300, 0x00000008, 
    0x00000000, 0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x0000f2a0, 0x00000000, 0x3001c400, 0x22000000, 0x14070203, 0x00c0c01b, 
    0xe1020102, 0x0c870202, 0x00c01b1b, 0xe1030101, 0xc80f8000, 0x001b0000, 
    0xeb020002, 0x4e4a0000, 0x3dbc0546, 0xbe5dd0ae
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcMul.hlsl.h /Vn
//    pBinary_X360_FVertexCxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mul r3, r2, r1
    mul r2, r3.w, r0
    add r2.w, r3.w, r2.w
    mad r2.xyz, r3.xyz, r1.w, r2.xyz
    mul r2.xyz, r2.xyz, r2.w
    mov oC0, r2

// PDB hint 4e4a0000-d6959367-8fa20260

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAcMul[] =
{
    0x102a1100, 0x000000f4, 0x00000060, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d41634d, 0x756c2e68, 0x6c736c2e, 
    0x75706462, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000060, 0x10000300, 0x00000008, 
    0x00000000, 0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x0000f2a0, 0x00000000, 0x6001c400, 0x22000000, 0xc80f0203, 0x00000000, 
    0xe1020100, 0xc80f0202, 0x001b0000, 0xe1030000, 0xc8080202, 0x001b1b00, 
    0xe0030200, 0xc8070202, 0x00c01bc0, 0xeb030102, 0xc8070202, 0x00c01b00, 
    0xe1020200, 0xc80f8000, 0x00000000, 0xe2020200, 0x4e4a0000, 0xd6959367, 
    0x8fa20260
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcInv.hlsl.h /Vn
//    pBinary_X360_FVertexCxformAcInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2


    alloc colors
    exece
    mul r2.x, r2.w, r1.w
    mad oC0, r2.x, r0.w, r2.x

// PDB hint 4e4a0000-11cde1fe-8f6b196a

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAcInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAcInv[] =
{
    0x102a1100, 0x000000f4, 0x00000030, 0x00000024, 0x00000094, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d416349, 0x6e762e68, 0x6c736c2e, 
    0x75706462, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 0x00000000, 
    0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000030, 0x10000200, 0x00000008, 
    0x00000000, 0x00003063, 0x00030007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x0000f2a0, 0x00000000, 0x2001c400, 0x22000000, 0xc8010202, 0x001b1b00, 
    0xe1020100, 0xc80f8000, 0x006c1b6c, 0xeb020002, 0x4e4a0000, 0x11cde1fe, 
    0x8f6b196a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlpha.hlsl.h /Vn
//    pBinary_X360_FVertexCxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlpha.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exece
    mul r4, r2, r1
    mul r2, r4.w, r0
    mad oC0.xyz, r4.xyz, r1.w, r2.xyz
    add r2.x, r4.w, r2.w
    mul oC0.w, r2.x, r3.w

// PDB hint 4e4a0000-2c6c306d-efe2b9a6

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAcEAlpha[] =
{
    0x102a1100, 0x000000fc, 0x00000054, 0x00000024, 0x00000098, 0x00000000, 
    0x000000cc, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d416345, 0x416c7068, 0x612e686c, 
    0x736c2e75, 0x70646200, 0x00000030, 0x0000001c, 0x00000023, 0xffff0300, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000054, 0x10000400, 
    0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x5001c400, 0x22000000, 
    0xc80f0204, 0x00000000, 0xe1020100, 0xc80f0202, 0x001b0000, 0xe1040000, 
    0xc8078000, 0x00c01bc0, 0xeb040102, 0xc8010202, 0x001b1b00, 0xe0040200, 
    0xc8088000, 0x006c1b00, 0xe1020300, 0x4e4a0000, 0x2c6c306d, 0xefe2b9a6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FVertexCxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlphaMul.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exec
    mul r4, r2.wxyz, r1.wxyz
    mad r2.w, r4.x, r0.w, r4.x
    mul r2.xyz, r4.yzw, r1.w
    mad r2.xyz, r4.x, r0.xyz, r2.xyz
    mul r2.w, r2.w, r3.w
    mul r2.xyz, r2.w, r2.xyz
    exece
    mov oC0, r2

// PDB hint 4e4a0000-50c78c8f-e9dbe067

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAcEAlphaMul[] =
{
    0x102a1100, 0x00000100, 0x00000078, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000d0, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d416345, 0x416c7068, 0x614d756c, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000030, 0x0000001c, 0x00000023, 
    0xffff0300, 0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000078, 
    0x10000400, 0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 
    0x0000f050, 0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x6002c400, 
    0x12000000, 0x00001008, 0x00002200, 0x00000000, 0xc80f0204, 0x00ffff00, 
    0xe1020100, 0xc8080202, 0x006c1b6c, 0xeb040004, 0xc8070202, 0x00151b00, 
    0xe1040100, 0xc8070202, 0x006cc0c0, 0xeb040002, 0xc8080202, 0x001b1b00, 
    0xe1020300, 0xc8070202, 0x001bc000, 0xe1020200, 0xc80f8000, 0x00000000, 
    0xe2020200, 0x4e4a0000, 0x50c78c8f, 0xe9dbe067
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FVertexCxformAcEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FVertexCxformAcEAlphaInv.hlsl
//
// Shader type: pixel 

xps_3_0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2
dcl_color1_centroid r3


    alloc colors
    exece
    mul r2.x, r2.w, r1.w
    mad r2.x, r2.x, r0.w, r2.x
    mul oC0, r2.x, r3.w

// PDB hint 4e4a0000-56431061-2bf2a014

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FVertexCxformAcEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FVertexCxformAcEAlphaInv[] =
{
    0x102a1100, 0x00000100, 0x0000003c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000d0, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46566572, 0x74657843, 0x78666f72, 0x6d416345, 0x416c7068, 0x61496e76, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000030, 0x0000001c, 0x00000023, 
    0xffff0300, 0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 
    0x10000300, 0x00000008, 0x00000000, 0x00004084, 0x0003000f, 0x00000001, 
    0x0000f050, 0x0000f151, 0x0000f2a0, 0x0000f3a1, 0x00000000, 0x3001c400, 
    0x22000000, 0xc8010202, 0x001b1b00, 0xe1020100, 0xc8010202, 0x006c1b6c, 
    0xeb020002, 0xc80f8000, 0x006c1b00, 0xe1020300, 0x4e4a0000, 0x56431061, 
    0x2bf2a014
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGTexTG.hlsl.h /Vn
//    pBinary_X360_VTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
defextern const texgen[2], float, vector, [1, 4], c4
defextern const texgen[3], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o2, r1
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy
    dp4 o1.x, r0.wzxy, c4.wzxy
    dp4 o1.y, r0.wzxy, c5.wzxy

// PDB hint 4e4a0000-40c42186-643a2acc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGTexTG[] =
{
    0x102a1101, 0x00000168, 0x0000009c, 0x00000024, 0x00000090, 0x00000000, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f38, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54475465, 0x7854472e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 0x00000002, 0x0000001c, 
    0x00000000, 0x00000070, 0x00000044, 0x00020000, 0x00020000, 0x00000048, 
    0x00000000, 0x00000058, 0x00020002, 0x00040000, 0x00000060, 0x00000000, 
    0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x74657867, 
    0x656e00ab, 0x00010003, 0x00010004, 0x00040000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 
    0x00210001, 0x00000000, 0x00000000, 0x00002063, 0x00000001, 0x00000002, 
    0x00000005, 0x00000290, 0x0010a003, 0x00300004, 0x00003050, 0x00023151, 
    0x0004f2a0, 0x00000008, 0x00001009, 0x0000000a, 0x0000100b, 0x00001007, 
    0x30052003, 0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 
    0x00005007, 0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 
    0xc802803e, 0x00a7a700, 0xaf000100, 0xc80f8002, 0x00000000, 0xe2010100, 
    0xc8018000, 0x00a7a700, 0xaf000200, 0xc8028000, 0x00a7a700, 0xaf000300, 
    0xc8018001, 0x00a7a700, 0xaf000400, 0xc8028001, 0x00a7a700, 0xaf000500, 
    0x4e4a0000, 0x40c42186, 0x643a2acc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTG.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTG.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r3, r0.xy, tf0
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exece
    add r1, r3, -r0
    mad oC0, r1, r2.x, r0

// PDB hint 4e4a0000-fa0e31d2-b368e370

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTG[] =
{
    0x102a1100, 0x00000118, 0x00000054, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x7854472e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000054, 0x10000300, 0x00000008, 0x00000000, 0x00002063, 0x00030007, 
    0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 0x00052002, 0x00001200, 
    0xc4000000, 0x00002004, 0x00002200, 0x00000000, 0x10083001, 0x1f1ff688, 
    0x00004000, 0x10180021, 0x1f1ff688, 0x00004000, 0xc80f0201, 0x02000000, 
    0xe0030000, 0xc80f8000, 0x00006c00, 0xeb010200, 0x4e4a0000, 0xfa0e31d2, 
    0xb368e370
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGMul.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r3, r0.xy, tf0
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exece
    add r1, r3, -r0
    mad r0.xyz, r1.xyz, r2.x, r0.xyz
    mad r2.w, r1.w, r2.x, r0.w
    mul r2.xyz, r0.xyz, r2.w
    mov oC0, r2

// PDB hint 4e4a0000-e8d235d0-13e302b7

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGMul[] =
{
    0x102a1100, 0x00000118, 0x00000078, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x7854474d, 0x756c2e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000078, 0x10000300, 0x00000008, 0x00000000, 0x00002063, 0x00030007, 
    0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 0x00052002, 0x00001200, 
    0xc4000000, 0x00005004, 0x00002200, 0x00000000, 0x10083001, 0x1f1ff688, 
    0x00004000, 0x10180021, 0x1f1ff688, 0x00004000, 0xc80f0201, 0x02000000, 
    0xe0030000, 0xc8070200, 0x00c06cc0, 0xeb010200, 0xc8080202, 0x001b6c1b, 
    0xeb010200, 0xc8070202, 0x00c01b00, 0xe1000200, 0xc80f8000, 0x00000000, 
    0xe2020200, 0x4e4a0000, 0xe8d235d0, 0x13e302b7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGInv.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r0._w__, r0.xy, tf0
    tfetch2D r0.w___, r1.xy, tf1
    alloc colors
    exece
    add r0.y, r0.y, -r0.x
    mad oC0, r0.y, r2.x, r0.x

// PDB hint 4e4a0000-4c53df75-20b12de2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGInv[] =
{
    0x102a1100, 0x00000118, 0x00000054, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544749, 0x6e762e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000054, 0x10000200, 0x00000008, 0x00000000, 0x00002063, 0x00030007, 
    0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 0x00052002, 0x00001200, 
    0xc4000000, 0x00002004, 0x00002200, 0x00000000, 0x10080001, 0x1f1fffdf, 
    0x00004000, 0x10180021, 0x1f1ffffb, 0x00004000, 0xc8020200, 0x02b16c00, 
    0xe0000000, 0xc80f8000, 0x00b16c6c, 0xeb000200, 0x4e4a0000, 0x4c53df75, 
    0x20b12de2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r3, r0.xy, tf0
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exece
    add r1, r3, -r0
    mad oC0.xyz, r1.xyz, r2.x, r0.xyz
    mad r0.x, r1.w, r2.x, r0.w
    mul oC0.w, r0.x, r2.w

// PDB hint 4e4a0000-84bcff6c-f3611ce4

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGEAlpha[] =
{
    0x102a1100, 0x0000011c, 0x0000006c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544745, 0x416c7068, 0x612e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000006c, 0x10000300, 0x00000008, 0x00000000, 0x00002063, 
    0x00030007, 0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 0x00052002, 
    0x00001200, 0xc4000000, 0x00004004, 0x00002200, 0x00000000, 0x10083001, 
    0x1f1ff688, 0x00004000, 0x10180021, 0x1f1ff688, 0x00004000, 0xc80f0201, 
    0x02000000, 0xe0030000, 0xc8078000, 0x00c06cc0, 0xeb010200, 0xc8010200, 
    0x001b6c1b, 0xeb010200, 0xc8088000, 0x006c1b00, 0xe1000200, 0x4e4a0000, 
    0x84bcff6c, 0xf3611ce4
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r3, r0.xy, tf0
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exece
    add r1, r3.wxyz, -r0.wxyz
    mad r0, r1, r2.x, r0.wxyz
    mul r2.w, r0.x, r2.w
    mul r2.xyz, r2.w, r0.yzw
    mov oC0, r2

// PDB hint 4e4a0000-ca88f2da-c02b65f8

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGEAlphaMul[] =
{
    0x102a1100, 0x00000120, 0x00000078, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544745, 0x416c7068, 0x614d756c, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000078, 0x10000300, 0x00000008, 0x00000000, 
    0x00002063, 0x00030007, 0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 
    0x00052002, 0x00001200, 0xc4000000, 0x00005004, 0x00002200, 0x00000000, 
    0x10083001, 0x1f1ff688, 0x00004000, 0x10180021, 0x1f1ff688, 0x00004000, 
    0xc80f0201, 0x02ffff00, 0xe0030000, 0xc80f0200, 0x00006cff, 0xeb010200, 
    0xc8080202, 0x006c1b00, 0xe1000200, 0xc8070202, 0x001b1500, 0xe1020000, 
    0xc80f8000, 0x00000000, 0xe2020200, 0x4e4a0000, 0xca88f2da, 0xc02b65f8
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_color_centroid r2


    exec
    tfetch2D r0._w__, r0.xy, tf0
    tfetch2D r0.w___, r1.xy, tf1
    alloc colors
    exece
    add r0.y, r0.y, -r0.x
    mad r0.x, r0.y, r2.x, r0.x
    mul oC0, r0.x, r2.w

// PDB hint 4e4a0000-90d32004-691c45f2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGEAlphaInv[] =
{
    0x102a1100, 0x00000120, 0x00000060, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544745, 0x416c7068, 0x61496e76, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000060, 0x10000200, 0x00000008, 0x00000000, 
    0x00002063, 0x00030007, 0x00000001, 0x00003050, 0x00003151, 0x0000f2a0, 
    0x00052002, 0x00001200, 0xc4000000, 0x00003004, 0x00002200, 0x00000000, 
    0x10080001, 0x1f1fffdf, 0x00004000, 0x10180021, 0x1f1ffffb, 0x00004000, 
    0xc8020200, 0x02b16c00, 0xe0000000, 0xc8010200, 0x00b16c6c, 0xeb000200, 
    0xc80f8000, 0x006c1b00, 0xe1000200, 0x4e4a0000, 0x90d32004, 0x691c45f2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGTexTGCxform.hlsl.h /Vn
//    pBinary_X360_VTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
defextern const texgen[2], float, vector, [1, 4], c6
defextern const texgen[3], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exec
    mov o4, r1
    dp4 o2.x, r0.wzxy, c4.wzxy
    dp4 o2.y, r0.wzxy, c5.wzxy
    dp4 o3.x, r0.wzxy, c6.wzxy
    dp4 o3.y, r0.wzxy, c7.wzxy
    mov o0, c0
    exece
    mov o1, c1

// PDB hint 4e4a0000-fba2586f-4393b9dc

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGTexTGCxform[] =
{
    0x102a1101, 0x000001c4, 0x000000b4, 0x00000024, 0x00000094, 0x00000000, 
    0x00000164, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d2e686c, 0x736c2e75, 
    0x70646200, 0x000000cc, 0x0000001c, 0x000000bf, 0xfffe0300, 0x00000004, 
    0x0000001c, 0x00000000, 0x000000b8, 0x0000006c, 0x00020000, 0x00010000, 
    0x00000074, 0x00000000, 0x00000084, 0x00020001, 0x00010000, 0x00000074, 
    0x00000000, 0x0000008a, 0x00020002, 0x00020000, 0x00000090, 0x00000000, 
    0x000000a0, 0x00020004, 0x00040000, 0x000000a8, 0x00000000, 0x63786164, 
    0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x63786d75, 
    0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00040000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x000000b4, 0x00410001, 0x00000000, 0x00000000, 0x000040a5, 0x00000001, 
    0x00000002, 0x00000007, 0x00000290, 0x0010a003, 0x00300004, 0x0000f050, 
    0x0001f151, 0x00023252, 0x00043353, 0x0006f4a0, 0x0000100c, 0x0000100d, 
    0x00000008, 0x00001009, 0x0000000a, 0x0000100b, 0x00001007, 0x30052003, 
    0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 0x00006007, 
    0x100d1200, 0x22000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000200, 0xc802803e, 
    0x00a7a700, 0xaf000300, 0xc80f8004, 0x00000000, 0xe2010100, 0xc8018002, 
    0x00a7a700, 0xaf000400, 0xc8028002, 0x00a7a700, 0xaf000500, 0xc8018003, 
    0x00a7a700, 0xaf000600, 0xc8028003, 0x00a7a700, 0xaf000700, 0xc80f8000, 
    0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 0x4e4a0000, 
    0xfba2586f, 0x4393b9dc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxform.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exece
    add r3, r5, -r2
    mad r4, r3, r4.x, r2
    mad oC0, r4, r1, r0

// PDB hint 4e4a0000-6d788f59-55885857

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxform[] =
{
    0x102a1100, 0x00000124, 0x00000060, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d2e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000060, 0x10000500, 0x00000008, 0x00000000, 0x000040a5, 
    0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00003353, 
    0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00003004, 0x00002200, 
    0x00000000, 0x10085041, 0x1f1ff688, 0x00004000, 0x10182061, 0x1f1ff688, 
    0x00004000, 0xc80f0403, 0x02000000, 0xe0050200, 0xc80f0404, 0x00006c00, 
    0xeb030402, 0xc80f8000, 0x00000000, 0xeb040100, 0x4e4a0000, 0x6d788f59, 
    0x55885857
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformMul.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGCxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exece
    add r3, r5, -r2
    mad r4, r3, r4.x, r2
    mad r4.xyz, r4.xyz, r1.xyz, r0.xyz
    mad r4.w, r4.w, r1.w, r0.w
    mul r4.xyz, r4.xyz, r4.w
    mov oC0, r4

// PDB hint 4e4a0000-5c1b28ef-12a0ea7a

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformMul[] =
{
    0x102a1100, 0x00000128, 0x00000084, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d4d756c, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000084, 0x10000500, 0x00000008, 0x00000000, 
    0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00006004, 
    0x00002200, 0x00000000, 0x10085041, 0x1f1ff688, 0x00004000, 0x10182061, 
    0x1f1ff688, 0x00004000, 0xc80f0403, 0x02000000, 0xe0050200, 0xc80f0404, 
    0x00006c00, 0xeb030402, 0xc8070404, 0x00c0c0c0, 0xeb040100, 0xc8080404, 
    0x001b1b1b, 0xeb040100, 0xc8070404, 0x00c01b00, 0xe1040400, 0xc80f8000, 
    0x00000000, 0xe2040400, 0x4e4a0000, 0x5c1b28ef, 0x12a0ea7a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformInv.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGCxformInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r2._w__, r2.xy, tf0
    tfetch2D r2.w___, r3.xy, tf1
    alloc colors
    exece
    add r2.y, r2.y, -r2.x
    mad r4.x, r2.y, r4.x, r2.x
    mad oC0, r4.x, r1.w, r0.w

// PDB hint 4e4a0000-b8330895-da0a8f02

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformInv[] =
{
    0x102a1100, 0x00000128, 0x00000060, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d496e76, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000060, 0x10000400, 0x00000008, 0x00000000, 
    0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00003004, 
    0x00002200, 0x00000000, 0x10082041, 0x1f1fffdf, 0x00004000, 0x10182061, 
    0x1f1ffffb, 0x00004000, 0xc8020402, 0x02b16c00, 0xe0020200, 0xc8010404, 
    0x00b16c6c, 0xeb020402, 0xc80f8000, 0x006c1b1b, 0xeb040100, 0x4e4a0000, 
    0xb8330895, 0xda0a8f02
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exece
    add r3, r5, -r2
    mad r2, r3, r4.x, r2
    mad oC0.xyz, r2.xyz, r1.xyz, r0.xyz
    mad r0.x, r2.w, r1.w, r0.w
    mul oC0.w, r0.x, r4.w

// PDB hint 4e4a0000-1cacd349-c96c8091

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformEAlpha[] =
{
    0x102a1100, 0x0000012c, 0x00000078, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d45416c, 0x7068612e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000078, 0x10000500, 0x00000008, 
    0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 
    0x00005004, 0x00002200, 0x00000000, 0x10085041, 0x1f1ff688, 0x00004000, 
    0x10182061, 0x1f1ff688, 0x00004000, 0xc80f0403, 0x02000000, 0xe0050200, 
    0xc80f0402, 0x00006c00, 0xeb030402, 0xc8078000, 0x00c0c0c0, 0xeb020100, 
    0xc8010400, 0x001b1b1b, 0xeb020100, 0xc8088000, 0x006c1b00, 0xe1000400, 
    0x4e4a0000, 0x1cacd349, 0xc96c8091
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exece
    add r3, r5.wxyz, -r2.wxyz
    mad r2, r3, r4.x, r2.wxyz
    mad r0, r2, r1.wxyz, r0.wxyz
    mul r4.w, r0.x, r4.w
    mul r4.xyz, r4.w, r0.yzw
    mov oC0, r4

// PDB hint 4e4a0000-4cef6c6d-56c1c28e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformEAlphaMul[] =
{
    0x102a1100, 0x0000012c, 0x00000084, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d45416c, 0x7068614d, 
    0x756c2e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000084, 0x10000500, 0x00000008, 
    0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 
    0x00006004, 0x00002200, 0x00000000, 0x10085041, 0x1f1ff688, 0x00004000, 
    0x10182061, 0x1f1ff688, 0x00004000, 0xc80f0403, 0x02ffff00, 0xe0050200, 
    0xc80f0402, 0x00006cff, 0xeb030402, 0xc80f0400, 0x0000ffff, 0xeb020100, 
    0xc8080404, 0x006c1b00, 0xe1000400, 0xc8070404, 0x001b1500, 0xe1040000, 
    0xc80f8000, 0x00000000, 0xe2040400, 0x4e4a0000, 0x4cef6c6d, 0x56c1c28e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r2._w__, r2.xy, tf0
    tfetch2D r2.w___, r3.xy, tf1
    alloc colors
    exece
    add r2.y, r2.y, -r2.x
    mad r2.x, r2.y, r4.x, r2.x
    mad r0.x, r2.x, r1.w, r0.w
    mul oC0, r0.x, r4.w

// PDB hint 4e4a0000-3d9086a4-3c749fcd

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformEAlphaInv[] =
{
    0x102a1100, 0x0000012c, 0x0000006c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d45416c, 0x70686149, 
    0x6e762e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 0x10000400, 0x00000008, 
    0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 
    0x00004004, 0x00002200, 0x00000000, 0x10082041, 0x1f1fffdf, 0x00004000, 
    0x10182061, 0x1f1ffffb, 0x00004000, 0xc8020402, 0x02b16c00, 0xe0020200, 
    0xc8010402, 0x00b16c6c, 0xeb020402, 0xc8010400, 0x006c1b1b, 0xeb020100, 
    0xc80f8000, 0x006c1b00, 0xe1000400, 0x4e4a0000, 0x3d9086a4, 0x3c749fcd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAc.hlsl.h /Vn
//    pBinary_X360_FTexTGTexTGCxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAc.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exec
    mul r3.x, r0.x, r1.w
    add r5, r5, -r2
    mad r2, r5, r4.x, r2
    mul r4.x, r3.x, r2.w
    mul r4.yzw, r1.w, r1.xxyz
  + movs r4._, r2.w
    mul r2.xyz, r4.yzw, r2.xyz
  + muls_prev r2.w, r1.w
    exece
    mul r4.yzw, r2.w, r0.yyzw
    add oC0, r2, r4

// PDB hint 4e4a0000-dcc8b337-c392bd65

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAc[] =
{
    0x102a1100, 0x00000128, 0x0000009c, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d41632e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000009c, 0x10000500, 0x00000008, 0x00000000, 
    0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00006004, 
    0x200a1200, 0x22000000, 0x10085041, 0x1f1ff688, 0x00004000, 0x10182061, 
    0x1f1ff688, 0x00004000, 0xc8010403, 0x006c1b00, 0xe1000100, 0xc80f0405, 
    0x02000000, 0xe0050200, 0xc80f0402, 0x00006c00, 0xeb050402, 0xc8010404, 
    0x006c1b00, 0xe1030200, 0x140e0404, 0x001bfc1b, 0xe1010102, 0x0c870202, 
    0x0015c01b, 0xe1040201, 0xc80e0404, 0x001b0100, 0xe1020000, 0xc80f8000, 
    0x00000000, 0xe0020400, 0x4e4a0000, 0xdcc8b337, 0xc392bd65
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcMul.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exec
    mul r3.xyz, r1.w, r1.xyz
    add r5, r5, -r2
  + movs r4._, r0.x
    mad r2, r5, r4.x, r2
    mul r4.x, r2.w, r1.w
  + muls_prev r4.y, r1.w
    mul r0.yzw, r4.x, r0.yyzw
  + movs r4._, r4.y
    add r4.w, r4.x, r0.w
  + muls_prev r0.x, r2.w
    exece
    mad r4.xyz, r3.xyz, r2.xyz, r0.xyz
    mul r4.xyz, r4.xyz, r4.w
    mov oC0, r4

// PDB hint 4e4a0000-9fb22ab5-9a53b4fe

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAcMul[] =
{
    0x102a1100, 0x00000128, 0x000000a8, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d41634d, 0x756c2e68, 
    0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x000000a8, 0x10000500, 0x00000008, 0x00000000, 
    0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00006004, 
    0x300a1200, 0x22000000, 0x10085041, 0x1f1ff688, 0x00004000, 0x10182061, 
    0x1f1ff688, 0x00004000, 0xc8070403, 0x001bc000, 0xe1010100, 0x140f0405, 
    0x0200006c, 0xe0050200, 0xc80f0402, 0x00006c00, 0xeb050402, 0x0c210404, 
    0x001b1b1b, 0xe1020101, 0x140e0400, 0x006c01b1, 0xe1040004, 0x0c180004, 
    0x006c1b1b, 0xe0040002, 0xc8070404, 0x00c0c0c0, 0xeb030200, 0xc8070404, 
    0x00c01b00, 0xe1040400, 0xc80f8000, 0x00000000, 0xe2040400, 0x4e4a0000, 
    0x9fb22ab5, 0x9a53b4fe
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcInv.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformAcInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r2._w__, r2.xy, tf0
    tfetch2D r2.w___, r3.xy, tf1
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    add r0.y, r2.y, -r2.x
    mad r4.y, r0.y, r4.x, r2.x
    mul r4.x, r0.x, r4.y
    mad oC0, r4.y, r1.w, r4.x

// PDB hint 4e4a0000-8f279786-3733727f

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAcInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAcInv[] =
{
    0x102a1100, 0x00000128, 0x00000078, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d416349, 0x6e762e68, 
    0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000078, 0x10000400, 0x00000008, 0x00000000, 
    0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 0x00005004, 
    0x00002200, 0x00000000, 0x10082041, 0x1f1fffdf, 0x00004000, 0x10182061, 
    0x1f1ffffb, 0x00004000, 0xc8010400, 0x001b1b00, 0xe1000100, 0xc8020400, 
    0x02b16c00, 0xe0020200, 0xc8020404, 0x00b16c6c, 0xeb000402, 0xc8010404, 
    0x006cb100, 0xe1000400, 0xc80f8000, 0x00b11b6c, 0xeb040104, 0x4e4a0000, 
    0x8f279786, 0x3733727f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlpha.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r2, r3.xy, tf1
    alloc colors
    exec
    mul r3.xyz, r1.w, r1.xyz
    add r5, r5, -r2
  + movs r4._, r0.x
    mad r2, r5, r4.x, r2
    mul r3.w, r2.w, r1.w
  + muls_prev r1.x, r1.w
    mul r0.yzw, r3.w, r0.yyzw
  + movs r4._, r1.x
    add r1.x, r3.w, r0.w
  + muls_prev r0.x, r2.w
    exece
    mul oC0.w, r1.x, r4.w
    mad oC0.xyz, r3.xyz, r2.xyz, r0.xyz

// PDB hint 4e4a0000-d536739f-cb27c0b5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAcEAlpha[] =
{
    0x102a1100, 0x0000012c, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d416345, 0x416c7068, 
    0x612e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 0x10000500, 0x00000008, 
    0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 0xc4000000, 
    0x00006004, 0x200a1200, 0x22000000, 0x10085041, 0x1f1ff688, 0x00004000, 
    0x10182061, 0x1f1ff688, 0x00004000, 0xc8070403, 0x001bc000, 0xe1010100, 
    0x140f0405, 0x0200006c, 0xe0050200, 0xc80f0402, 0x00006c00, 0xeb050402, 
    0x0c180103, 0x001b1b1b, 0xe1020101, 0x140e0400, 0x001b016c, 0xe1030001, 
    0x0c110001, 0x001b1b1b, 0xe0030002, 0xc8088000, 0x006c1b00, 0xe1010400, 
    0xc8078000, 0x00c0c0c0, 0xeb030200, 0x4e4a0000, 0xd536739f, 0xcb27c0b5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    tfetch2D r3, r3.xy, tf1
    alloc colors
    exec
    mul r2.x, r0.x, r1.w
    add r5, r5.wxyz, -r3.wxyz
    mad r3, r5, r4.x, r3.wxyz
    mul r2.x, r2.x, r3.x
    mul r2.yzw, r1.w, r1.xxyz
  + movs r4._, r3.x
    mul r3.yzw, r2.yyzw, r3.yyzw
  + muls_prev r3.x, r1.w
    exece
    mul r2.yzw, r3.x, r0.yyzw
    add r0, r3, r2.wxyz
    mul r4.w, r0.x, r4.w
    mul r4.xyz, r4.w, r0.yzw
    mov oC0, r4

// PDB hint 4e4a0000-4b9c9032-ae453833

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAcEAlphaMul[] =
{
    0x102a1100, 0x00000130, 0x000000c0, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d416345, 0x416c7068, 
    0x614d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x000000c0, 0x10000500, 
    0x00000008, 0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 
    0xc4000000, 0x00006004, 0x500a1200, 0x22000000, 0x10085041, 0x1f1ff688, 
    0x00004000, 0x10183061, 0x1f1ff688, 0x00004000, 0xc8010402, 0x006c1b00, 
    0xe1000100, 0xc80f0405, 0x02ffff00, 0xe0050300, 0xc80f0403, 0x00006cff, 
    0xeb050403, 0xc8010402, 0x006c6c00, 0xe1020300, 0x140e0402, 0x001bfc6c, 
    0xe1010103, 0x0c1e0303, 0x0001011b, 0xe1020301, 0xc80e0402, 0x006c0100, 
    0xe1030000, 0xc80f0400, 0x0000ff00, 0xe0030200, 0xc8080404, 0x006c1b00, 
    0xe1000400, 0xc8070404, 0x001b1500, 0xe1040000, 0xc80f8000, 0x00000000, 
    0xe2040400, 0x4e4a0000, 0x4b9c9032, 0xae453833
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FTexTGTexTGCxformAcEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGTexTGCxformAcEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_texcoord3 r3.xy
dcl_color_centroid r4


    exec
    tfetch2D r2._w__, r2.xy, tf0
    tfetch2D r2.w___, r3.xy, tf1
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    add r0.y, r2.y, -r2.x
    mad r0.y, r0.y, r4.x, r2.x
    mul r0.x, r0.x, r0.y
    mad r0.x, r0.y, r1.w, r0.x
    mul oC0, r0.x, r4.w

// PDB hint 4e4a0000-f206e53c-0a000083

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGTexTGCxformAcEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGTexTGCxformAcEAlphaInv[] =
{
    0x102a1100, 0x00000130, 0x00000084, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475465, 0x78544743, 0x78666f72, 0x6d416345, 0x416c7068, 
    0x61496e76, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000084, 0x10000400, 
    0x00000008, 0x00000000, 0x000040a5, 0x000f001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00003353, 0x0000f4a0, 0x00052002, 0x00001200, 
    0xc4000000, 0x00006004, 0x00002200, 0x00000000, 0x10082041, 0x1f1fffdf, 
    0x00004000, 0x10182061, 0x1f1ffffb, 0x00004000, 0xc8010400, 0x001b1b00, 
    0xe1000100, 0xc8020400, 0x02b16c00, 0xe0020200, 0xc8020400, 0x00b16c6c, 
    0xeb000402, 0xc8010400, 0x006cb100, 0xe1000000, 0xc8010400, 0x00b11b6c, 
    0xeb000100, 0xc80f8000, 0x006c1b00, 0xe1000400, 0x4e4a0000, 0xf206e53c, 
    0x0a000083
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGVertex.hlsl.h /Vn
//    pBinary_X360_VTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o1, r2
    mov o2, r1
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy

// PDB hint 4e4a0000-1af5103e-eb97c8ba

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGVertex[] =
{
    0x102a1101, 0x00000158, 0x0000009c, 0x00000024, 0x00000090, 0x00000000, 
    0x00000108, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54475665, 0x72746578, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000074, 0x0000001c, 0x00000066, 0xfffe0300, 0x00000002, 0x0000001c, 
    0x00000000, 0x0000005f, 0x00000044, 0x00020000, 0x00020000, 0x00000048, 
    0x00000000, 0x00000058, 0x00020002, 0x00020000, 0x00000048, 0x00000000, 
    0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x74657867, 
    0x656e0076, 0x735f335f, 0x3000322e, 0x302e3231, 0x3131392e, 0x3000abab, 
    0x00000000, 0x0000009c, 0x00210002, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000003, 0x00000004, 0x00000290, 0x0010a003, 0x0001a004, 
    0x00300005, 0x00003050, 0x0002f1a0, 0x0003f2a1, 0x0000000a, 0x0000100b, 
    0x00001008, 0x00001009, 0x70153003, 0x00001200, 0xc2000000, 0x00002006, 
    0x00001200, 0xc4000000, 0x00004008, 0x00002200, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 0xc802803e, 
    0x00a7a700, 0xaf000100, 0xc80f8001, 0x00000000, 0xe2020200, 0xc80f8002, 
    0x00000000, 0xe2010100, 0xc8018000, 0x00a7a700, 0xaf000200, 0xc8028000, 
    0x00a7a700, 0xaf000300, 0x4e4a0000, 0x1af5103e, 0xeb97c8ba
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertex.hlsl.h /Vn
//    pBinary_X360_FTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertex.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    add r0, r0, -r1
    mad oC0, r0, r2.x, r1

// PDB hint 4e4a0000-fbd72ab9-4b8193bb

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertex[] =
{
    0x102a1100, 0x00000118, 0x00000048, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000048, 0x10000200, 0x00000008, 0x00000000, 0x00002863, 0x00010007, 
    0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 0x00011002, 0x00001200, 
    0xc4000000, 0x00002003, 0x00002200, 0x00000000, 0x10080001, 0x1f1ff688, 
    0x00004000, 0xc80f0100, 0x02000000, 0xe0000100, 0xc80f8000, 0x00006c00, 
    0xeb000201, 0x4e4a0000, 0xfbd72ab9, 0x4b8193bb
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexMul.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    add r0, r0, -r1
    mad r0.xyz, r0.xyz, r2.x, r1.xyz
    mad r1.w, r0.w, r2.x, r1.w
    mul r1.xyz, r0.xyz, r1.w
    mov oC0, r1

// PDB hint 4e4a0000-19cc2ae7-ba844389

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexMul[] =
{
    0x102a1100, 0x0000011c, 0x0000006c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4d756c2e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000006c, 0x10000200, 0x00000008, 0x00000000, 0x00002863, 
    0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 0x00011002, 
    0x00001200, 0xc4000000, 0x00005003, 0x00002200, 0x00000000, 0x10080001, 
    0x1f1ff688, 0x00004000, 0xc80f0100, 0x02000000, 0xe0000100, 0xc8070100, 
    0x00c06cc0, 0xeb000201, 0xc8080101, 0x001b6c1b, 0xeb000201, 0xc8070101, 
    0x00c01b00, 0xe1000100, 0xc80f8000, 0x00000000, 0xe2010100, 0x4e4a0000, 
    0x19cc2ae7, 0xba844389
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexInv.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    add r0.x, r0.x, -r1.w
    mad oC0, r0.x, r2.x, r1.w

// PDB hint 4e4a0000-cda39607-45f245be

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexInv[] =
{
    0x102a1100, 0x0000011c, 0x00000048, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x496e762e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000048, 0x10000200, 0x00000008, 0x00000000, 0x00002863, 
    0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 0x00011002, 
    0x00001200, 0xc4000000, 0x00002003, 0x00002200, 0x00000000, 0x10080001, 
    0x1f1ffffb, 0x00004000, 0xc8010100, 0x026c1b00, 0xe0000100, 0xc80f8000, 
    0x006c6c1b, 0xeb000201, 0x4e4a0000, 0xcda39607, 0x45f245be
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    add r0, r0, -r1
    mad oC0.xyz, r0.xyz, r2.x, r1.xyz
    mad r1.x, r0.w, r2.x, r1.w
    mul oC0.w, r1.x, r2.w

// PDB hint 4e4a0000-a8e31f95-0b7e89c3

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexEAlpha[] =
{
    0x102a1100, 0x0000011c, 0x00000060, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x45416c70, 0x68612e68, 0x6c736c2e, 
    0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000060, 0x10000200, 0x00000008, 0x00000000, 0x00002863, 
    0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 0x00011002, 
    0x00001200, 0xc4000000, 0x00004003, 0x00002200, 0x00000000, 0x10080001, 
    0x1f1ff688, 0x00004000, 0xc80f0100, 0x02000000, 0xe0000100, 0xc8078000, 
    0x00c06cc0, 0xeb000201, 0xc8010101, 0x001b6c1b, 0xeb000201, 0xc8088000, 
    0x006c1b00, 0xe1010200, 0x4e4a0000, 0xa8e31f95, 0x0b7e89c3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    add r0, r0.wxyz, -r1.wxyz
    mad r1, r0.yzwx, r2.x, r1
    mul r1.w, r1.w, r2.w
    mul r1.xyz, r1.w, r1.xyz
    mov oC0, r1

// PDB hint 4e4a0000-c658a09f-8aba30fe

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexEAlphaMul[] =
{
    0x102a1100, 0x00000120, 0x0000006c, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x45416c70, 0x68614d75, 0x6c2e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000006c, 0x10000200, 0x00000008, 0x00000000, 
    0x00002863, 0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 
    0x00011002, 0x00001200, 0xc4000000, 0x00005003, 0x00002200, 0x00000000, 
    0x10080001, 0x1f1ff688, 0x00004000, 0xc80f0100, 0x02ffff00, 0xe0000100, 
    0xc80f0101, 0x00556c00, 0xeb000201, 0xc8080101, 0x001b1b00, 0xe1010200, 
    0xc8070101, 0x001bc000, 0xe1010100, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0xc658a09f, 0x8aba30fe
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    add r0.x, r0.x, -r1.w
    mad r1.x, r0.x, r2.x, r1.w
    mul oC0, r1.x, r2.w

// PDB hint 4e4a0000-11676763-5f05e909

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexEAlphaInv[] =
{
    0x102a1100, 0x00000120, 0x00000054, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x45416c70, 0x6861496e, 0x762e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000054, 0x10000200, 0x00000008, 0x00000000, 
    0x00002863, 0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 0x0000f2a1, 
    0x00011002, 0x00001200, 0xc4000000, 0x00003003, 0x00002200, 0x00000000, 
    0x10080001, 0x1f1ffffb, 0x00004000, 0xc8010100, 0x026c1b00, 0xe0000100, 
    0xc8010101, 0x006c6c1b, 0xeb000201, 0xc80f8000, 0x006c1b00, 0xe1010200, 
    0x4e4a0000, 0x11676763, 0x5f05e909
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGVertexCxform.hlsl.h /Vn
//    pBinary_X360_VTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o3, r2
    mov o4, r1
    dp4 o2.x, r0.wzxy, c4.wzxy
    dp4 o2.y, r0.wzxy, c5.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-98a57ac7-f516ede5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTexTGVertexCxform[] =
{
    0x102a1101, 0x000001b4, 0x000000b4, 0x00000024, 0x00000094, 0x00000000, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d2e68, 0x6c736c2e, 
    0x75706462, 0x000000bc, 0x0000001c, 0x000000ae, 0xfffe0300, 0x00000004, 
    0x0000001c, 0x00000000, 0x000000a7, 0x0000006c, 0x00020000, 0x00010000, 
    0x00000074, 0x00000000, 0x00000084, 0x00020001, 0x00010000, 0x00000074, 
    0x00000000, 0x0000008a, 0x00020002, 0x00020000, 0x00000090, 0x00000000, 
    0x000000a0, 0x00020004, 0x00020000, 0x00000090, 0x00000000, 0x63786164, 
    0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x63786d75, 
    0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x74657867, 0x656e0076, 0x735f335f, 0x3000322e, 0x302e3231, 0x3131392e, 
    0x3000abab, 0x00000000, 0x000000b4, 0x00410002, 0x00000000, 0x00000000, 
    0x000048a5, 0x00000001, 0x00000003, 0x00000006, 0x00000290, 0x0010a003, 
    0x0001a004, 0x00300005, 0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 
    0x0005f4a1, 0x0000100c, 0x0000100d, 0x0000000a, 0x0000100b, 0x00001008, 
    0x00001009, 0x70153003, 0x00001200, 0xc2000000, 0x00002006, 0x00001200, 
    0xc4000000, 0x00006008, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 
    0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 
    0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 
    0xaf000300, 0xc80f8003, 0x00000000, 0xe2020200, 0xc80f8004, 0x00000000, 
    0xe2010100, 0xc8018002, 0x00a7a700, 0xaf000400, 0xc8028002, 0x00a7a700, 
    0xaf000500, 0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 
    0x22010100, 0x4e4a0000, 0x98a57ac7, 0xf516ede5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxform.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    add r2, r2, -r3
    mad r3, r2, r4.x, r3
    mad oC0, r3, r1, r0

// PDB hint 4e4a0000-6cab4354-bc192b01

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxform[] =
{
    0x102a1100, 0x00000124, 0x00000054, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d2e68, 0x6c736c2e, 
    0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00010000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000054, 0x10000400, 0x00000008, 0x00000000, 0x000048a5, 
    0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 
    0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 0x00003003, 0x00002200, 
    0x00000000, 0x10082041, 0x1f1ff688, 0x00004000, 0xc80f0302, 0x02000000, 
    0xe0020300, 0xc80f0303, 0x00006c00, 0xeb020403, 0xc80f8000, 0x00000000, 
    0xeb030100, 0x4e4a0000, 0x6cab4354, 0xbc192b01
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformMul.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexCxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    add r2, r2, -r3
    mad r3, r2, r4.x, r3
    mad r3.xyz, r3.xyz, r1.xyz, r0.xyz
    mad r3.w, r3.w, r1.w, r0.w
    mul r3.xyz, r3.xyz, r3.w
    mov oC0, r3

// PDB hint 4e4a0000-b10ef660-87b2f357

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformMul[] =
{
    0x102a1100, 0x00000128, 0x00000078, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4d75, 0x6c2e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000078, 0x10000400, 0x00000008, 0x00000000, 
    0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 0x00006003, 
    0x00002200, 0x00000000, 0x10082041, 0x1f1ff688, 0x00004000, 0xc80f0302, 
    0x02000000, 0xe0020300, 0xc80f0303, 0x00006c00, 0xeb020403, 0xc8070303, 
    0x00c0c0c0, 0xeb030100, 0xc8080303, 0x001b1b1b, 0xeb030100, 0xc8070303, 
    0x00c01b00, 0xe1030300, 0xc80f8000, 0x00000000, 0xe2030300, 0x4e4a0000, 
    0xb10ef660, 0x87b2f357
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformInv.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexCxformInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    add r2.x, r2.x, -r3.w
    mad r3.x, r2.x, r4.x, r3.w
    mad oC0, r3.x, r1.w, r0.w

// PDB hint 4e4a0000-7cc04f25-ffaee16e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformInv[] =
{
    0x102a1100, 0x00000128, 0x00000054, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d496e, 0x762e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000054, 0x10000400, 0x00000008, 0x00000000, 
    0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 0x00003003, 
    0x00002200, 0x00000000, 0x10082041, 0x1f1ffffb, 0x00004000, 0xc8010302, 
    0x026c1b00, 0xe0020300, 0xc8010303, 0x006c6c1b, 0xeb020403, 0xc80f8000, 
    0x006c1b1b, 0xeb030100, 0x4e4a0000, 0x7cc04f25, 0xffaee16e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    add r2, r2, -r3
    mad r3, r2, r4.x, r3
    mad oC0.xyz, r3.xyz, r1.xyz, r0.xyz
    mad r3.x, r3.w, r1.w, r0.w
    mul oC0.w, r3.x, r4.w

// PDB hint 4e4a0000-a6b765a9-4243e59a

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformEAlpha[] =
{
    0x102a1100, 0x0000012c, 0x0000006c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4541, 0x6c706861, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 0x10000400, 0x00000008, 
    0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 
    0x00005003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ff688, 0x00004000, 
    0xc80f0302, 0x02000000, 0xe0020300, 0xc80f0303, 0x00006c00, 0xeb020403, 
    0xc8078000, 0x00c0c0c0, 0xeb030100, 0xc8010303, 0x001b1b1b, 0xeb030100, 
    0xc8088000, 0x006c1b00, 0xe1030400, 0x4e4a0000, 0xa6b765a9, 0x4243e59a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exece
    add r2, r2.wxyz, -r3.wxyz
    mad r3, r2, r4.x, r3.wxyz
    mad r3, r3.yzwx, r1, r0
    mul r3.w, r3.w, r4.w
    mul r3.xyz, r3.w, r3.xyz
    mov oC0, r3

// PDB hint 4e4a0000-ca531c4b-ecf3bb97

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformEAlphaMul[] =
{
    0x102a1100, 0x00000130, 0x00000078, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4541, 0x6c706861, 
    0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000078, 0x10000400, 
    0x00000008, 0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 
    0xc4000000, 0x00006003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ff688, 
    0x00004000, 0xc80f0302, 0x02ffff00, 0xe0020300, 0xc80f0303, 0x00006cff, 
    0xeb020403, 0xc80f0303, 0x00550000, 0xeb030100, 0xc8080303, 0x001b1b00, 
    0xe1030400, 0xc8070303, 0x001bc000, 0xe1030300, 0xc80f8000, 0x00000000, 
    0xe2030300, 0x4e4a0000, 0xca531c4b, 0xecf3bb97
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    add r2.x, r2.x, -r3.w
    mad r3.x, r2.x, r4.x, r3.w
    mad r3.x, r3.x, r1.w, r0.w
    mul oC0, r3.x, r4.w

// PDB hint 4e4a0000-2a5b66f9-6ed19f63

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformEAlphaInv[] =
{
    0x102a1100, 0x00000130, 0x00000060, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4541, 0x6c706861, 
    0x496e762e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000060, 0x10000400, 
    0x00000008, 0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 
    0xc4000000, 0x00004003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ffffb, 
    0x00004000, 0xc8010302, 0x026c1b00, 0xe0020300, 0xc8010303, 0x006c6c1b, 
    0xeb020403, 0xc8010303, 0x006c1b1b, 0xeb030100, 0xc80f8000, 0x006c1b00, 
    0xe1030400, 0x4e4a0000, 0x2a5b66f9, 0x6ed19f63
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAc.hlsl.h /Vn
//    pBinary_X360_FTexTGVertexCxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAc.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    alloc colors
    exec
    mul r2.xyz, r1.w, r1.xyz
    add r5, r5, -r3
  + movs r3._, r0.w
    mad r4, r5, r4.x, r3
    mul r3.x, r4.w, r1.w
  + muls_prev r2.w, r1.w
    mad oC0.w, r2.w, r4.w, r3.x
    mul r3.xyz, r3.x, r0.xyz
    exece
    mad oC0.xyz, r2.xyz, r4.xyz, r3.xyz

// PDB hint 4e4a0000-84518561-59e38788

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAc[] =
{
    0x102a1100, 0x00000128, 0x00000084, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000084, 0x10000500, 0x00000008, 0x00000000, 
    0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 0x00006003, 
    0x10091200, 0x22000000, 0x10085041, 0x1f1ff688, 0x00004000, 0xc8070302, 
    0x001bc000, 0xe1010100, 0x140f0305, 0x0200001b, 0xe0050300, 0xc80f0304, 
    0x00006c00, 0xeb050403, 0x0c810203, 0x001b1b1b, 0xe1040101, 0xc8088000, 
    0x001b1b6c, 0xeb020403, 0xc8070303, 0x006cc000, 0xe1030000, 0xc8078000, 
    0x00c0c0c0, 0xeb020403, 0x4e4a0000, 0x84518561, 0x59e38788
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcMul.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r5, r2.xy, tf0
    alloc colors
    exec
    mul r2.xyz, r1.w, r1.xyz
    add r5, r5, -r3
  + movs r3._, r0.w
    mad r4, r5, r4.x, r3
    mul r3.x, r4.w, r1.w
  + muls_prev r2.w, r1.w
    mad r3.w, r2.w, r4.w, r3.x
    mul r3.xyz, r3.x, r0.xyz
    exece
    mad r3.xyz, r2.xyz, r4.xyz, r3.xyz
    mul r3.xyz, r3.xyz, r3.w
    mov oC0, r3

// PDB hint 4e4a0000-c356dc30-d906035c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAcMul[] =
{
    0x102a1100, 0x0000012c, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x4d756c2e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 0x10000500, 0x00000008, 
    0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 
    0x00006003, 0x30091200, 0x22000000, 0x10085041, 0x1f1ff688, 0x00004000, 
    0xc8070302, 0x001bc000, 0xe1010100, 0x140f0305, 0x0200001b, 0xe0050300, 
    0xc80f0304, 0x00006c00, 0xeb050403, 0x0c810203, 0x001b1b1b, 0xe1040101, 
    0xc8080303, 0x001b1b6c, 0xeb020403, 0xc8070303, 0x006cc000, 0xe1030000, 
    0xc8070303, 0x00c0c0c0, 0xeb020403, 0xc8070303, 0x00c01b00, 0xe1030300, 
    0xc80f8000, 0x00000000, 0xe2030300, 0x4e4a0000, 0xc356dc30, 0xd906035c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcInv.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformAcInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    add r0.y, r2.x, -r3.w
    mad r3.y, r0.y, r4.x, r3.w
    mul r3.x, r0.x, r3.y
    mad oC0, r3.y, r1.w, r3.x

// PDB hint 4e4a0000-1a61ae2a-f41a31b1

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAcInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAcInv[] =
{
    0x102a1100, 0x0000012c, 0x0000006c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x496e762e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 0x10000400, 0x00000008, 
    0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 
    0x00005003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ffffb, 0x00004000, 
    0xc8010300, 0x001b1b00, 0xe1000100, 0xc8020300, 0x026c1b00, 0xe0020300, 
    0xc8020303, 0x00b16c1b, 0xeb000403, 0xc8010303, 0x006cb100, 0xe1000300, 
    0xc80f8000, 0x00b11b6c, 0xeb030103, 0x4e4a0000, 0x1a61ae2a, 0xf41a31b1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlpha.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exec
    mul r5.w, r0.w, r1.w
    add r2, r2, -r3
  + muls r5.x, r1.wx
    mad r2, r2, r4.x, r3
    mul r3.w, r2.w, r1.w
  + muls r5.y, r1.wy
    mul r3.xyz, r3.w, r0.xyz
  + muls r5.z, r1.wz
    mad r3.w, r5.w, r2.w, r3.w
    exece
    mul oC0.w, r3.w, r4.w
    mad oC0.xyz, r5.xyz, r2.xyz, r3.xyz

// PDB hint 4e4a0000-efea761f-f6cf1750

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAcEAlpha[] =
{
    0x102a1100, 0x0000012c, 0x00000090, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x45416c70, 
    0x68612e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000090, 0x10000500, 0x00000008, 
    0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 0xc4000000, 
    0x00006003, 0x20091200, 0x22000000, 0x10082041, 0x1f1ff688, 0x00004000, 
    0xc8080305, 0x001b1b00, 0xe1000100, 0x081f0502, 0x0200001c, 0xe0020301, 
    0xc80f0302, 0x00006c00, 0xeb020403, 0x08280503, 0x001b1b11, 0xe1020101, 
    0x08470503, 0x001bc016, 0xe1030001, 0xc8080303, 0x001b1b1b, 0xeb050203, 
    0xc8088000, 0x001b1b00, 0xe1030400, 0xc8078000, 0x00c0c0c0, 0xeb050203, 
    0x4e4a0000, 0xefea761f, 0xf6cf1750
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2, r2.xy, tf0
    alloc colors
    exec
    mul r5.yzw, r1.w, r1.xxyz
    add r2, r2.wxyz, -r3.wxyz
  + movs r3._, r0.w
    mad r2, r2, r4.x, r3.wxyz
    mul r3.x, r2.x, r1.w
  + muls_prev r5.x, r1.w
    mad r3.w, r5.x, r2.x, r3.x
    mul r3.xyz, r3.x, r0.xyz
    exece
    mad r3.xyz, r5.yzw, r2.yzw, r3.xyz
    mul r3.w, r3.w, r4.w
    mul r3.xyz, r3.w, r3.xyz
    mov oC0, r3

// PDB hint 4e4a0000-776f5ffc-fb0c656e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAcEAlphaMul[] =
{
    0x102a1100, 0x00000130, 0x000000a8, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000073, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x45416c70, 
    0x68614d75, 0x6c2e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x000000a8, 0x10000500, 
    0x00000008, 0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 
    0xc4000000, 0x00006003, 0x40091200, 0x22000000, 0x10082041, 0x1f1ff688, 
    0x00004000, 0xc80e0305, 0x001bfc00, 0xe1010100, 0x140f0302, 0x02ffff1b, 
    0xe0020300, 0xc80f0302, 0x00006cff, 0xeb020403, 0x0c110503, 0x006c1b1b, 
    0xe1020101, 0xc8080303, 0x006c6c6c, 0xeb050203, 0xc8070303, 0x006cc000, 
    0xe1030000, 0xc8070303, 0x001515c0, 0xeb050203, 0xc8080303, 0x001b1b00, 
    0xe1030400, 0xc8070303, 0x001bc000, 0xe1030300, 0xc80f8000, 0x00000000, 
    0xe2030300, 0x4e4a0000, 0x776f5ffc, 0xfb0c656e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FTexTGVertexCxformAcEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGVertexCxformAcEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3
dcl_color1_centroid r4


    exec
    tfetch2D r2.w___, r2.xy, tf0
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    add r0.y, r2.x, -r3.w
    mad r3.y, r0.y, r4.x, r3.w
    mul r3.x, r0.x, r3.y
    mad r3.x, r3.y, r1.w, r3.x
    mul oC0, r3.x, r4.w

// PDB hint 4e4a0000-e1b16e4b-fbebb129

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGVertexCxformAcEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGVertexCxformAcEAlphaInv[] =
{
    0x102a1100, 0x00000130, 0x00000078, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f38, 0x00000073, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x54475665, 0x72746578, 0x4378666f, 0x726d4163, 0x45416c70, 
    0x6861496e, 0x762e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000078, 0x10000400, 
    0x00000008, 0x00000000, 0x000048a5, 0x0007001f, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x0000f3a0, 0x0000f4a1, 0x00011002, 0x00001200, 
    0xc4000000, 0x00006003, 0x00002200, 0x00000000, 0x10082041, 0x1f1ffffb, 
    0x00004000, 0xc8010300, 0x001b1b00, 0xe1000100, 0xc8020300, 0x026c1b00, 
    0xe0020300, 0xc8020303, 0x00b16c1b, 0xeb000403, 0xc8010303, 0x006cb100, 
    0xe1000300, 0xc8010303, 0x00b11b6c, 0xeb030103, 0xc80f8000, 0x006c1b00, 
    0xe1030400, 0x4e4a0000, 0xe1b16e4b, 0xfbebb129
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTG.hlsl.h /Vn
//    pBinary_X360_VPosition3dTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTG.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    dp4 o0.x, r0.wzxy, c4.wzxy
    dp4 o0.y, r0.wzxy, c5.wzxy

// PDB hint 4e4a0000-8764cfea-32b64886

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTG[] =
{
    0x102a1101, 0x00000154, 0x00000084, 0x00000024, 0x00000094, 0x00000000, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 0x00000002, 
    0x0000001c, 0x00000000, 0x00000070, 0x00000044, 0x00020000, 0x00040000, 
    0x00000048, 0x00000000, 0x00000058, 0x00020004, 0x00020000, 0x00000060, 
    0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 
    0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000084, 0x00010000, 0x00000000, 0x00000000, 0x00000821, 0x00000001, 
    0x00000001, 0x00000002, 0x00000290, 0x00000003, 0x00003050, 0x00000008, 
    0x00001009, 0x10011003, 0x00001200, 0xc2000000, 0x00004004, 0x00001200, 
    0xc4000000, 0x00002008, 0x00002200, 0x00000000, 0x05f80000, 0x00000688, 
    0x00000000, 0xc801803e, 0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 
    0xaf000100, 0xc804803e, 0x00a7a700, 0xaf000200, 0xc808803e, 0x00a7a700, 
    0xaf000300, 0xc8018000, 0x00a7a700, 0xaf000400, 0xc8028000, 0x00a7a700, 
    0xaf000500, 0x4e4a0000, 0x8764cfea, 0x32b64886
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGEAlpha.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o1, r1
    dp4 o0.x, r0.wzxy, c4.wzxy
    dp4 o0.y, r0.wzxy, c5.wzxy

// PDB hint 4e4a0000-edf55d0d-679e2e50

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGEAlpha[] =
{
    0x102a1101, 0x00000164, 0x0000009c, 0x00000024, 0x00000098, 0x00000000, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x45416c70, 0x68612e68, 
    0x6c736c2e, 0x75706462, 0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x00000070, 0x00000044, 0x00020000, 
    0x00040000, 0x00000048, 0x00000000, 0x00000058, 0x00020004, 0x00020000, 
    0x00000060, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00020000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000009c, 0x00110001, 0x00000000, 0x00000000, 0x00001842, 
    0x00000001, 0x00000002, 0x00000003, 0x00000290, 0x0010a003, 0x00300004, 
    0x00003050, 0x0002f1a0, 0x0000000a, 0x0000100b, 0x00001009, 0x30052003, 
    0x00001200, 0xc2000000, 0x00004005, 0x00001200, 0xc4000000, 0x00003009, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc801803e, 0x00a7a700, 0xaf000000, 0xc802803e, 
    0x00a7a700, 0xaf000100, 0xc804803e, 0x00a7a700, 0xaf000200, 0xc808803e, 
    0x00a7a700, 0xaf000300, 0xc80f8001, 0x00000000, 0xe2010100, 0xc8018000, 
    0x00a7a700, 0xaf000400, 0xc8028000, 0x00a7a700, 0xaf000500, 0x4e4a0000, 
    0xedf55d0d, 0x679e2e50
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
defextern const texgen[0], float, vector, [1, 4], c6
defextern const texgen[1], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exece
    dp4 o2.x, r0.wzxy, c6.wzxy
    dp4 o2.y, r0.wzxy, c7.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-9a885ed0-c019b7c5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGCxform[] =
{
    0x102a1101, 0x000001b0, 0x0000009c, 0x00000024, 0x00000098, 0x00000000, 
    0x00000168, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x4378666f, 0x726d2e68, 
    0x6c736c2e, 0x75706462, 0x000000cc, 0x0000001c, 0x000000bf, 0xfffe0300, 
    0x00000004, 0x0000001c, 0x00000000, 0x000000b8, 0x0000006c, 0x00020000, 
    0x00010000, 0x00000074, 0x00000000, 0x00000084, 0x00020001, 0x00010000, 
    0x00000074, 0x00000000, 0x0000008a, 0x00020002, 0x00040000, 0x00000090, 
    0x00000000, 0x000000a0, 0x00020006, 0x00020000, 0x000000a8, 0x00000000, 
    0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00020000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000009c, 0x00210000, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000001, 0x00000004, 0x00000290, 0x00000003, 0x0000f050, 
    0x0001f151, 0x00023252, 0x0000100a, 0x0000100b, 0x00000008, 0x00001009, 
    0x10011003, 0x00001200, 0xc2000000, 0x00004004, 0x00001200, 0xc4000000, 
    0x00004008, 0x00002200, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc801803e, 0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 
    0xc804803e, 0x00a7a700, 0xaf000400, 0xc808803e, 0x00a7a700, 0xaf000500, 
    0xc8018002, 0x00a7a700, 0xaf000600, 0xc8028002, 0x00a7a700, 0xaf000700, 
    0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 
    0x4e4a0000, 0x9a885ed0, 0xc019b7c5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
defextern const texgen[0], float, vector, [1, 4], c6
defextern const texgen[1], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o3, r1
    dp4 o2.x, r0.wzxy, c6.wzxy
    dp4 o2.y, r0.wzxy, c7.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-2d7da207-93a32423

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGCxformEAlpha[] =
{
    0x102a1101, 0x000001c4, 0x000000b4, 0x00000024, 0x000000a0, 0x00000000, 
    0x00000170, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x4378666f, 0x726d4541, 
    0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000cc, 0x0000001c, 
    0x000000bf, 0xfffe0300, 0x00000004, 0x0000001c, 0x00000000, 0x000000b8, 
    0x0000006c, 0x00020000, 0x00010000, 0x00000074, 0x00000000, 0x00000084, 
    0x00020001, 0x00010000, 0x00000074, 0x00000000, 0x0000008a, 0x00020002, 
    0x00040000, 0x00000090, 0x00000000, 0x000000a0, 0x00020006, 0x00020000, 
    0x000000a8, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 
    0x00010004, 0x00020000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x000000b4, 0x00310001, 0x00000000, 
    0x00000000, 0x00003884, 0x00000001, 0x00000002, 0x00000005, 0x00000290, 
    0x0010a003, 0x00300004, 0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 
    0x0000100c, 0x0000100d, 0x0000000a, 0x0000100b, 0x00001009, 0x30052003, 
    0x00001200, 0xc2000000, 0x00004005, 0x00001200, 0xc4000000, 0x00005009, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc801803e, 0x00a7a700, 0xaf000200, 0xc802803e, 
    0x00a7a700, 0xaf000300, 0xc804803e, 0x00a7a700, 0xaf000400, 0xc808803e, 
    0x00a7a700, 0xaf000500, 0xc80f8003, 0x00000000, 0xe2010100, 0xc8018002, 
    0x00a7a700, 0xaf000600, 0xc8028002, 0x00a7a700, 0xaf000700, 0xc80f8000, 
    0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 0x4e4a0000, 
    0x2d7da207, 0x93a32423
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertex.hlsl.h /Vn
//    pBinary_X360_VPosition3dVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertex.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x
dcl_color o0


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o0, r1

// PDB hint 4e4a0000-7b288d71-3a8f5f62

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dVertex[] =
{
    0x102a1101, 0x00000128, 0x00000084, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336456, 0x65727465, 0x782e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00020000, 0x00040000, 
    0x00000034, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000084, 0x00010001, 0x00000000, 0x00000000, 0x00001021, 
    0x00000001, 0x00000002, 0x00000001, 0x00000290, 0x0010a003, 0x00300004, 
    0x0000f0a0, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 0x00004005, 
    0x00001200, 0xc4000000, 0x00001009, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 0xc804803e, 
    0x00a7a700, 0xaf000200, 0xc808803e, 0x00a7a700, 0xaf000300, 0xc80f8000, 
    0x00000000, 0xe2010100, 0x4e4a0000, 0x7b288d71, 0x3a8f5f62
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexEAlpha.hlsl.h
//    /Vn pBinary_X360_VPosition3dVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o0, r2
    mov o1, r1

// PDB hint 4e4a0000-095aa69d-92f5260e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dVertexEAlpha[] =
{
    0x102a1101, 0x0000013c, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336456, 0x65727465, 0x7845416c, 0x7068612e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00020000, 0x00040000, 0x00000034, 0x00000000, 0x6d767000, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 0x00110002, 0x00000000, 
    0x00000000, 0x00002042, 0x00000001, 0x00000003, 0x00000002, 0x00000290, 
    0x0010a003, 0x0001a004, 0x00300005, 0x0000f0a0, 0x0001f1a1, 0x0000100a, 
    0x0000100b, 0x70153003, 0x00001200, 0xc2000000, 0x00004006, 0x00001200, 
    0xc4000000, 0x0000200a, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 
    0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 
    0x00000000, 0xc801803e, 0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 
    0xaf000100, 0xc804803e, 0x00a7a700, 0xaf000200, 0xc808803e, 0x00a7a700, 
    0xaf000300, 0xc80f8000, 0x00000000, 0xe2020200, 0xc80f8001, 0x00000000, 
    0xe2010100, 0x4e4a0000, 0x095aa69d, 0x92f5260e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexCxform.hlsl.h
//    /Vn pBinary_X360_VPosition3dVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o2, r1
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-c9e95a21-1dbb0c0a

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dVertexCxform[] =
{
    0x102a1101, 0x00000188, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x00000140, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336456, 0x65727465, 0x78437866, 0x6f726d2e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x000000a0, 0x0000001c, 0x00000093, 
    0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 
    0x00020000, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020001, 
    0x00010000, 0x00000060, 0x00000000, 0x00000076, 0x00020002, 0x00040000, 
    0x0000007c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 0x00210001, 0x00000000, 
    0x00000000, 0x00003063, 0x00000001, 0x00000002, 0x00000003, 0x00000290, 
    0x0010a003, 0x00300004, 0x0000f050, 0x0001f151, 0x0002f2a0, 0x0000100a, 
    0x0000100b, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 0x00004005, 
    0x00001200, 0xc4000000, 0x00003009, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 0xc804803e, 
    0x00a7a700, 0xaf000400, 0xc808803e, 0x00a7a700, 0xaf000500, 0xc80f8002, 
    0x00000000, 0xe2010100, 0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 
    0x00000000, 0x22010100, 0x4e4a0000, 0xc9e95a21, 0x1dbb0c0a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VPosition3dVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o2, r2
    mov o3, r1
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-e250dd95-f93108a6

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dVertexCxformEAlpha[] =
{
    0x102a1101, 0x00000198, 0x000000b4, 0x00000024, 0x000000a0, 0x00000000, 
    0x00000144, 0x00000000, 0x00000000, 0x50c76f38, 0x00000073, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336456, 0x65727465, 0x78437866, 0x6f726d45, 
    0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 0x000000a0, 0x0000001c, 
    0x00000093, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 
    0x00000058, 0x00020000, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 
    0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x00000076, 0x00020002, 
    0x00040000, 0x0000007c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 
    0x00030003, 0x00040004, 0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x000000b4, 0x00310002, 
    0x00000000, 0x00000000, 0x00004084, 0x00000001, 0x00000003, 0x00000004, 
    0x00000290, 0x0010a003, 0x0001a004, 0x00300005, 0x0000f050, 0x0001f151, 
    0x0002f2a0, 0x0003f3a1, 0x0000100c, 0x0000100d, 0x0000100a, 0x0000100b, 
    0x70153003, 0x00001200, 0xc2000000, 0x00004006, 0x00001200, 0xc4000000, 
    0x0000400a, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc801803e, 0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 
    0xc804803e, 0x00a7a700, 0xaf000400, 0xc808803e, 0x00a7a700, 0xaf000500, 
    0xc80f8002, 0x00000000, 0xe2020200, 0xc80f8003, 0x00000000, 0xe2010100, 
    0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 
    0x4e4a0000, 0xe250dd95, 0xf93108a6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGTexTG.hlsl.h /Vn
//    pBinary_X360_VPosition3dTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
defextern const texgen[2], float, vector, [1, 4], c6
defextern const texgen[3], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o2, r1
    dp4 o0.x, r0.wzxy, c4.wzxy
    dp4 o0.y, r0.wzxy, c5.wzxy
    dp4 o1.x, r0.wzxy, c6.wzxy
    dp4 o1.y, r0.wzxy, c7.wzxy

// PDB hint 4e4a0000-c0a0fcff-1d5a2d04

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGTexTG[] =
{
    0x102a1101, 0x00000170, 0x000000b4, 0x00000024, 0x00000098, 0x00000000, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x54657854, 0x472e686c, 
    0x736c2e75, 0x70646200, 0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x00000070, 0x00000044, 0x00020000, 
    0x00040000, 0x00000048, 0x00000000, 0x00000058, 0x00020004, 0x00040000, 
    0x00000060, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00040000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x000000b4, 0x00210001, 0x00000000, 0x00000000, 0x00002063, 
    0x00000001, 0x00000002, 0x00000005, 0x00000290, 0x0010a003, 0x00300004, 
    0x00003050, 0x00023151, 0x0004f2a0, 0x0000000a, 0x0000100b, 0x0000000c, 
    0x0000100d, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 0x00004005, 
    0x00001200, 0xc4000000, 0x00005009, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 0xc804803e, 
    0x00a7a700, 0xaf000200, 0xc808803e, 0x00a7a700, 0xaf000300, 0xc80f8002, 
    0x00000000, 0xe2010100, 0xc8018000, 0x00a7a700, 0xaf000400, 0xc8028000, 
    0x00a7a700, 0xaf000500, 0xc8018001, 0x00a7a700, 0xaf000600, 0xc8028001, 
    0x00a7a700, 0xaf000700, 0x4e4a0000, 0xc0a0fcff, 0x1d5a2d04
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
defextern const texgen[0], float, vector, [1, 4], c6
defextern const texgen[1], float, vector, [1, 4], c7
defextern const texgen[2], float, vector, [1, 4], c8
defextern const texgen[3], float, vector, [1, 4], c9
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exec
    mov o4, r1
    dp4 o2.x, r0.wzxy, c6.wzxy
    dp4 o2.y, r0.wzxy, c7.wzxy
    dp4 o3.x, r0.wzxy, c8.wzxy
    dp4 o3.y, r0.wzxy, c9.wzxy
    mov o0, c0
    exece
    mov o1, c1

// PDB hint 4e4a0000-918c1e65-4992cf65

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGTexTGCxform[] =
{
    0x102a1101, 0x000001d0, 0x000000cc, 0x00000024, 0x000000a0, 0x00000000, 
    0x00000170, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x54657854, 0x47437866, 
    0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 0x000000cc, 0x0000001c, 
    0x000000bf, 0xfffe0300, 0x00000004, 0x0000001c, 0x00000000, 0x000000b8, 
    0x0000006c, 0x00020000, 0x00010000, 0x00000074, 0x00000000, 0x00000084, 
    0x00020001, 0x00010000, 0x00000074, 0x00000000, 0x0000008a, 0x00020002, 
    0x00040000, 0x00000090, 0x00000000, 0x000000a0, 0x00020006, 0x00040000, 
    0x000000a8, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 
    0x00010004, 0x00040000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x000000cc, 0x00410001, 0x00000000, 
    0x00000000, 0x000040a5, 0x00000001, 0x00000002, 0x00000007, 0x00000290, 
    0x0010a003, 0x00300004, 0x0000f050, 0x0001f151, 0x00023252, 0x00043353, 
    0x0006f4a0, 0x0000100e, 0x0000100f, 0x0000000a, 0x0000100b, 0x0000000c, 
    0x0000100d, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 0x00004005, 
    0x00001200, 0xc4000000, 0x00006009, 0x100f1200, 0x22000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf000200, 0xc802803e, 0x00a7a700, 0xaf000300, 0xc804803e, 
    0x00a7a700, 0xaf000400, 0xc808803e, 0x00a7a700, 0xaf000500, 0xc80f8004, 
    0x00000000, 0xe2010100, 0xc8018002, 0x00a7a700, 0xaf000600, 0xc8028002, 
    0x00a7a700, 0xaf000700, 0xc8018003, 0x00a7a700, 0xaf000800, 0xc8028003, 
    0x00a7a700, 0xaf000900, 0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 
    0x00000000, 0x22010100, 0x4e4a0000, 0x918c1e65, 0x4992cf65
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGVertex.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
defextern const texgen[0], float, vector, [1, 4], c4
defextern const texgen[1], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o1, r2
    mov o2, r1
    dp4 o0.x, r0.wzxy, c4.wzxy
    dp4 o0.y, r0.wzxy, c5.wzxy

// PDB hint 4e4a0000-e30c7746-d3b05305

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGVertex[] =
{
    0x102a1101, 0x00000170, 0x000000b4, 0x00000024, 0x00000098, 0x00000000, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x56657274, 0x65782e68, 
    0x6c736c2e, 0x75706462, 0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x00000070, 0x00000044, 0x00020000, 
    0x00040000, 0x00000048, 0x00000000, 0x00000058, 0x00020004, 0x00020000, 
    0x00000060, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00020000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x000000b4, 0x00210002, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000003, 0x00000004, 0x00000290, 0x0010a003, 0x0001a004, 
    0x00300005, 0x00003050, 0x0002f1a0, 0x0003f2a1, 0x0000000c, 0x0000100d, 
    0x0000100a, 0x0000100b, 0x70153003, 0x00001200, 0xc2000000, 0x00004006, 
    0x00001200, 0xc4000000, 0x0000400a, 0x00002200, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc801803e, 0x00a7a700, 0xaf000000, 0xc802803e, 
    0x00a7a700, 0xaf000100, 0xc804803e, 0x00a7a700, 0xaf000200, 0xc808803e, 
    0x00a7a700, 0xaf000300, 0xc80f8001, 0x00000000, 0xe2020200, 0xc80f8002, 
    0x00000000, 0xe2010100, 0xc8018000, 0x00a7a700, 0xaf000400, 0xc8028000, 
    0x00a7a700, 0xaf000500, 0x4e4a0000, 0xe30c7746, 0xd3b05305
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGVertexCxform.hlsl.h
//    /Vn pBinary_X360_VPosition3dTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
defextern const texgen[0], float, vector, [1, 4], c6
defextern const texgen[1], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c2.wzxy
    dp4 oPos.y, r0.wzxy, c3.wzxy
    dp4 oPos.z, r0.wzxy, c4.wzxy
    dp4 oPos.w, r0.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o3, r2
    mov o4, r1
    dp4 o2.x, r0.wzxy, c6.wzxy
    dp4 o2.y, r0.wzxy, c7.wzxy
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-f4b5c288-0c0b22ac

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTexTGVertexCxform[] =
{
    0x102a1101, 0x000001d0, 0x000000cc, 0x00000024, 0x000000a0, 0x00000000, 
    0x00000170, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65785447, 0x56657274, 0x65784378, 
    0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000cc, 0x0000001c, 
    0x000000bf, 0xfffe0300, 0x00000004, 0x0000001c, 0x00000000, 0x000000b8, 
    0x0000006c, 0x00020000, 0x00010000, 0x00000074, 0x00000000, 0x00000084, 
    0x00020001, 0x00010000, 0x00000074, 0x00000000, 0x0000008a, 0x00020002, 
    0x00040000, 0x00000090, 0x00000000, 0x000000a0, 0x00020006, 0x00020000, 
    0x000000a8, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 
    0x00010004, 0x00020000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x000000cc, 0x00410002, 0x00000000, 
    0x00000000, 0x000048a5, 0x00000001, 0x00000003, 0x00000006, 0x00000290, 
    0x0010a003, 0x0001a004, 0x00300005, 0x0000f050, 0x0001f151, 0x00023252, 
    0x0004f3a0, 0x0005f4a1, 0x0000100e, 0x0000100f, 0x0000000c, 0x0000100d, 
    0x0000100a, 0x0000100b, 0x70153003, 0x00001200, 0xc2000000, 0x00004006, 
    0x00001200, 0xc4000000, 0x0000600a, 0x00002200, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc801803e, 0x00a7a700, 0xaf000200, 0xc802803e, 
    0x00a7a700, 0xaf000300, 0xc804803e, 0x00a7a700, 0xaf000400, 0xc808803e, 
    0x00a7a700, 0xaf000500, 0xc80f8003, 0x00000000, 0xe2020200, 0xc80f8004, 
    0x00000000, 0xe2010100, 0xc8018002, 0x00a7a700, 0xaf000600, 0xc8028002, 
    0x00a7a700, 0xaf000700, 0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 
    0x00000000, 0x22010100, 0x4e4a0000, 0xf4b5c288, 0x0c0b22ac
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTG.hlsl.h /Vn
//    pBinary_X360_VBatchTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTG.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 0.100000001, 3.0999999, 1.10000002, 2.0999999


    exec
    vfetch r1, r0.x, position
    vfetch r0._x__, r0.x, color1
    alloc position
    exec
    mulsc r0.x, c254.x, r0.y
    add r2, r0.x, c255.xzwy
    sgt r4, -r2.xzyw, c254.y
    frc r2, r2
    sgt r3, r2.xzyw, c254.y
    mul r3.xy, r3.xy, r4.xy
    exec
    mul r3.zw, r4.zzzw, r3.zzzw
    add r2, r3.xzyw, -r2
    add r0, r2, r0.x
    add r0, r0.xwyz, c255
    movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r0.z
    dp4 oPos.y, r1.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.w
    dp4 o0.x, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 o0.y, r1.wzxy, c[0+a0].wzxy

// PDB hint 4e4a0000-10ea6e96-6a2eebe4

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTG[] =
{
    0x102a1101, 0x00000158, 0x0000016c, 0x00000024, 0x00000090, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x7854472e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00600000, 0x0000003c, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x0000012c, 0x00010004, 0x00000000, 0x00000000, 0x00000821, 0x00000001, 
    0x00000002, 0x00000002, 0x00000290, 0x00100004, 0x0021a005, 0x00003050, 
    0x00000015, 0x00001017, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 
    0x00000000, 0x00000000, 0x3dcccccd, 0x40466666, 0x3f8ccccd, 0x40066666, 
    0x30052004, 0x00001200, 0xc2000000, 0x00006006, 0x600c1200, 0x12000000, 
    0x00002012, 0x00001200, 0xc4000000, 0x00004014, 0x00002200, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000fc7, 0x00000000, 
    0xa8100000, 0x00000041, 0xc20000fe, 0xc80f0002, 0x006c9400, 0xa000ff00, 
    0xc80f0004, 0x0434b100, 0xa502fe00, 0xc80f0002, 0x00000000, 0xe8020000, 
    0xc80f0003, 0x0034b100, 0xa502fe00, 0xc8030003, 0x00b0b000, 0xe1030400, 
    0xc80c0003, 0x00060600, 0xe1040300, 0xc80f0002, 0x02340000, 0xe0030200, 
    0xc80f0000, 0x00006c00, 0xe0020000, 0xc80f0000, 0x00f80000, 0xa000ff00, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc889c03e, 0xa0a7a700, 0xaf010000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc802803e, 0xa0a7a700, 0xaf010000, 
    0x5c000000, 0x0000001b, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf010000, 
    0x5c000000, 0x000000b1, 0xe2000000, 0xc8028000, 0xa0a7a700, 0xaf010000, 
    0x4e4a0000, 0x10ea6e96, 0x6a2eebe4
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGEAlpha.hlsl.h /Vn
//    pBinary_X360_VBatchTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 1020.03998, 0, 0, 0
def c255, 0.100000001, 3.0999999, 1.10000002, 2.0999999


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    mulsc r2.x, c254.x, r1.z
    add r3, r2.x, c255.xzwy
    sgt r5, -r3.xzyw, c254.y
    frc r3, r3
    sgt r4, r3.xzyw, c254.y
    mul r4.xy, r4.xy, r5.xy
    exec
    mul r4.zw, r5.zzzw, r4.zzzw
    add r3, r4.xzyw, -r3
    add r2, r3, r2.x
    add r2, r2.xwyz, c255
    movas r0._, r2.x
    dp4 oPos.x001, r0.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r2.z
    dp4 oPos.y, r0.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r2.w
    dp4 o0.x, r0.wzxy, c[0+a0].wzxy
    movas r0._, r2.y
    mov o1, r1
    dp4 o0.y, r0.wzxy, c[0+a0].wzxy

// PDB hint 4e4a0000-44c9d55b-ccec6456

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGEAlpha[] =
{
    0x102a1101, 0x00000164, 0x00000178, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544745, 0x416c7068, 0x612e686c, 0x736c2e75, 
    0x70646200, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00600000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000138, 0x00110005, 0x00000000, 0x00000000, 0x00001842, 
    0x00000001, 0x00000002, 0x00000003, 0x00000290, 0x0010a004, 0x00300005, 
    0x00003050, 0x0002f1a0, 0x00000015, 0x00001018, 0x00001017, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x447f028f, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 
    0x40466666, 0x3f8ccccd, 0x40066666, 0x30052004, 0x00001200, 0xc2000000, 
    0x00006006, 0x600c1200, 0x12000000, 0x00002012, 0x00001200, 0xc4000000, 
    0x00005014, 0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000688, 0x00000000, 0xac100200, 0x00000042, 0xc20000fe, 
    0xc80f0003, 0x006c9400, 0xa002ff00, 0xc80f0005, 0x0434b100, 0xa503fe00, 
    0xc80f0003, 0x00000000, 0xe8030000, 0xc80f0004, 0x0034b100, 0xa503fe00, 
    0xc8030004, 0x00b0b000, 0xe1040500, 0xc80c0004, 0x00060600, 0xe1050400, 
    0xc80f0003, 0x02340000, 0xe0040300, 0xc80f0002, 0x00006c00, 0xe0030200, 
    0xc80f0002, 0x00f80000, 0xa002ff00, 0x5c000000, 0x0000006c, 0xe2000002, 
    0xc889c03e, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x000000c6, 0xe2000002, 
    0xc802803e, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x0000001b, 0xe2000002, 
    0xc8018000, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x000000b1, 0xe2000002, 
    0xc80f8001, 0x00000000, 0xe2010100, 0xc8028000, 0xa0a7a700, 0xaf000000, 
    0x4e4a0000, 0x44c9d55b, 0xccec6456
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGCxform.hlsl.h /Vn
//    pBinary_X360_VBatchTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
defextern const vfuniforms[96], float, vector, [1, 4], c96
defextern const vfuniforms[97], float, vector, [1, 4], c97
defextern const vfuniforms[98], float, vector, [1, 4], c98
defextern const vfuniforms[99], float, vector, [1, 4], c99
defextern const vfuniforms[100], float, vector, [1, 4], c100
defextern const vfuniforms[101], float, vector, [1, 4], c101
defextern const vfuniforms[102], float, vector, [1, 4], c102
defextern const vfuniforms[103], float, vector, [1, 4], c103
defextern const vfuniforms[104], float, vector, [1, 4], c104
defextern const vfuniforms[105], float, vector, [1, 4], c105
defextern const vfuniforms[106], float, vector, [1, 4], c106
defextern const vfuniforms[107], float, vector, [1, 4], c107
defextern const vfuniforms[108], float, vector, [1, 4], c108
defextern const vfuniforms[109], float, vector, [1, 4], c109
defextern const vfuniforms[110], float, vector, [1, 4], c110
defextern const vfuniforms[111], float, vector, [1, 4], c111
defextern const vfuniforms[112], float, vector, [1, 4], c112
defextern const vfuniforms[113], float, vector, [1, 4], c113
defextern const vfuniforms[114], float, vector, [1, 4], c114
defextern const vfuniforms[115], float, vector, [1, 4], c115
defextern const vfuniforms[116], float, vector, [1, 4], c116
defextern const vfuniforms[117], float, vector, [1, 4], c117
defextern const vfuniforms[118], float, vector, [1, 4], c118
defextern const vfuniforms[119], float, vector, [1, 4], c119
defextern const vfuniforms[120], float, vector, [1, 4], c120
defextern const vfuniforms[121], float, vector, [1, 4], c121
defextern const vfuniforms[122], float, vector, [1, 4], c122
defextern const vfuniforms[123], float, vector, [1, 4], c123
defextern const vfuniforms[124], float, vector, [1, 4], c124
defextern const vfuniforms[125], float, vector, [1, 4], c125
defextern const vfuniforms[126], float, vector, [1, 4], c126
defextern const vfuniforms[127], float, vector, [1, 4], c127
defextern const vfuniforms[128], float, vector, [1, 4], c128
defextern const vfuniforms[129], float, vector, [1, 4], c129
defextern const vfuniforms[130], float, vector, [1, 4], c130
defextern const vfuniforms[131], float, vector, [1, 4], c131
defextern const vfuniforms[132], float, vector, [1, 4], c132
defextern const vfuniforms[133], float, vector, [1, 4], c133
defextern const vfuniforms[134], float, vector, [1, 4], c134
defextern const vfuniforms[135], float, vector, [1, 4], c135
defextern const vfuniforms[136], float, vector, [1, 4], c136
defextern const vfuniforms[137], float, vector, [1, 4], c137
defextern const vfuniforms[138], float, vector, [1, 4], c138
defextern const vfuniforms[139], float, vector, [1, 4], c139
defextern const vfuniforms[140], float, vector, [1, 4], c140
defextern const vfuniforms[141], float, vector, [1, 4], c141
defextern const vfuniforms[142], float, vector, [1, 4], c142
defextern const vfuniforms[143], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 2.0999999, 4.0999999, 0, 6
def c255, 3.0999999, 5.0999999, 0.100000001, 1.10000002


    exec
    vfetch r1, r0.x, position
    vfetch r0.x___, r0.x, color1
    alloc position
    exec
    mulsc r0.x, c254.w, r0.x
    add r0.yz, r0.x, c254.xxy
    sgt r2.xy, -r0.yz, c254.z
    add r3, r0.x, c255.xywz
  + frcs r0.y, r0.y
    sgt r5, -r3, c254.z
  + frcs r0.z, r0.z
    frc r3, r3.wzxy
  + sgts r2.z, r0.y
    exec
    sgt r4, r3.zwyx, c254.z
  + sgts r2.w, r0.z
    mad r3, r5.xzyw, r4.xzyw, -r3.zywx
    mad r0.yz, r2.zzw, r2.xxy, -r0.yyz
    add r2.xy, r0.yz, r0.x
    add r0, r3.xwyz, r0.x
    add r2.xy, r2.xy, c254.xy
    exec
    add r0, r0.xwyz, c255
  + movas r0._, r2.x
    dp4 oPos.x001, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.x
    dp4 oPos.y, r1.wzxy, c[0+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r2.y
    dp4 o2.x, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 o2.y, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.z
    mov o0, c[0+a0]
    exece
    movas r0._, r0.w
    mov o1, c[0+a0]

// PDB hint 4e4a0000-82504055-789fdddd

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGCxform[] =
{
    0x102a1101, 0x0000016c, 0x000001b4, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544743, 0x78666f72, 0x6d2e686c, 0x736c2e75, 
    0x70646200, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00900000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00900000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000174, 0x00210005, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000002, 0x00000004, 0x00000290, 0x00100004, 0x0031a005, 
    0x0000f050, 0x0001f151, 0x00023252, 0x0000101b, 0x0000101d, 0x00000017, 
    0x00001019, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x40066666, 0x40833333, 0x00000000, 
    0x40c00000, 0x40466666, 0x40a33333, 0x3dcccccd, 0x3f8ccccd, 0x30052004, 
    0x00001200, 0xc2000000, 0x00006006, 0x600c1200, 0x12000000, 0x00004012, 
    0x00001200, 0xc4000000, 0x00006016, 0x201c1200, 0x22000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 0xa8100000, 
    0x00000000, 0xc20000fe, 0xc8060000, 0x006cbc00, 0xa000fe00, 0xc8030002, 
    0x04c5c600, 0xa500fe00, 0x2c2f0003, 0x006cd0b1, 0xa000ff00, 0x2c4f0005, 
    0x0400c6c6, 0xa503fe00, 0x204f0203, 0x00a700b1, 0xe8030000, 0x208f0204, 
    0x007ac6c6, 0xa503fe00, 0xc80f0003, 0x01343452, 0xeb050403, 0xc8060000, 
    0x0116bcc1, 0xeb020200, 0xc8030002, 0x00c56c00, 0xe0000000, 0xc80f0000, 
    0x00f86c00, 0xe0030000, 0xc8030002, 0x00b0b000, 0xa002fe00, 0x5c0f0000, 
    0x00f8006c, 0xa000ff02, 0xc889c03e, 0xa0a7a700, 0xaf010000, 0x5c000000, 
    0x0000006c, 0xe2000000, 0xc802803e, 0xa0a7a700, 0xaf010000, 0x5c000000, 
    0x000000b1, 0xe2000002, 0xc8018002, 0xa0a7a700, 0xaf010000, 0x5c000000, 
    0x000000b1, 0xe2000000, 0xc8028002, 0xa0a7a700, 0xaf010000, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc80f8000, 0xe0000000, 0x22000000, 0x5c000000, 
    0x0000001b, 0xe2000000, 0xc80f8001, 0xe0000000, 0x22000000, 0x4e4a0000, 
    0x82504055, 0x789fdddd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
defextern const vfuniforms[96], float, vector, [1, 4], c96
defextern const vfuniforms[97], float, vector, [1, 4], c97
defextern const vfuniforms[98], float, vector, [1, 4], c98
defextern const vfuniforms[99], float, vector, [1, 4], c99
defextern const vfuniforms[100], float, vector, [1, 4], c100
defextern const vfuniforms[101], float, vector, [1, 4], c101
defextern const vfuniforms[102], float, vector, [1, 4], c102
defextern const vfuniforms[103], float, vector, [1, 4], c103
defextern const vfuniforms[104], float, vector, [1, 4], c104
defextern const vfuniforms[105], float, vector, [1, 4], c105
defextern const vfuniforms[106], float, vector, [1, 4], c106
defextern const vfuniforms[107], float, vector, [1, 4], c107
defextern const vfuniforms[108], float, vector, [1, 4], c108
defextern const vfuniforms[109], float, vector, [1, 4], c109
defextern const vfuniforms[110], float, vector, [1, 4], c110
defextern const vfuniforms[111], float, vector, [1, 4], c111
defextern const vfuniforms[112], float, vector, [1, 4], c112
defextern const vfuniforms[113], float, vector, [1, 4], c113
defextern const vfuniforms[114], float, vector, [1, 4], c114
defextern const vfuniforms[115], float, vector, [1, 4], c115
defextern const vfuniforms[116], float, vector, [1, 4], c116
defextern const vfuniforms[117], float, vector, [1, 4], c117
defextern const vfuniforms[118], float, vector, [1, 4], c118
defextern const vfuniforms[119], float, vector, [1, 4], c119
defextern const vfuniforms[120], float, vector, [1, 4], c120
defextern const vfuniforms[121], float, vector, [1, 4], c121
defextern const vfuniforms[122], float, vector, [1, 4], c122
defextern const vfuniforms[123], float, vector, [1, 4], c123
defextern const vfuniforms[124], float, vector, [1, 4], c124
defextern const vfuniforms[125], float, vector, [1, 4], c125
defextern const vfuniforms[126], float, vector, [1, 4], c126
defextern const vfuniforms[127], float, vector, [1, 4], c127
defextern const vfuniforms[128], float, vector, [1, 4], c128
defextern const vfuniforms[129], float, vector, [1, 4], c129
defextern const vfuniforms[130], float, vector, [1, 4], c130
defextern const vfuniforms[131], float, vector, [1, 4], c131
defextern const vfuniforms[132], float, vector, [1, 4], c132
defextern const vfuniforms[133], float, vector, [1, 4], c133
defextern const vfuniforms[134], float, vector, [1, 4], c134
defextern const vfuniforms[135], float, vector, [1, 4], c135
defextern const vfuniforms[136], float, vector, [1, 4], c136
defextern const vfuniforms[137], float, vector, [1, 4], c137
defextern const vfuniforms[138], float, vector, [1, 4], c138
defextern const vfuniforms[139], float, vector, [1, 4], c139
defextern const vfuniforms[140], float, vector, [1, 4], c140
defextern const vfuniforms[141], float, vector, [1, 4], c141
defextern const vfuniforms[142], float, vector, [1, 4], c142
defextern const vfuniforms[143], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 2.0999999, 4.0999999, 0, 1530.05994
def c255, 3.0999999, 5.0999999, 0.100000001, 1.10000002


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    alloc position
    exec
    mulsc r0.x, c254.w, r1.z
    add r0.yz, r0.x, c254.xxy
    sgt r3.xy, -r0.yz, c254.z
    add r4, r0.x, c255.xywz
  + frcs r0.y, r0.y
    sgt r6, -r4, c254.z
  + frcs r0.z, r0.z
    frc r4, r4.wzxy
  + sgts r3.z, r0.y
    exec
    sgt r5, r4.zwyx, c254.z
  + sgts r3.w, r0.z
    mad r4, r6.xzyw, r5.xzyw, -r4.zywx
    mad r0.yz, r3.zzw, r3.xxy, -r0.yyz
    add r3.xy, r0.yz, r0.x
    add r0, r4.xwyz, r0.x
    add r3.xy, r3.xy, c254.xy
    exec
    add r0, r0.xwyz, c255
  + movas r0._, r3.x
    dp4 oPos.x001, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.x
    dp4 oPos.y, r2.wzxy, c[0+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r3.y
    dp4 o2.x, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 o2.y, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.z
    mov o0, c[0+a0]
    exece
    movas r0._, r0.w
    mov o3, r1
    mov o1, c[0+a0]

// PDB hint 4e4a0000-4a2de707-09904fe8

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGCxformEAlpha[] =
{
    0x102a1101, 0x0000017c, 0x000001c0, 0x00000024, 0x0000009c, 0x00000100, 
    0x00000128, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544743, 0x78666f72, 0x6d45416c, 0x7068612e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020000, 0x00900000, 0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00900000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000180, 0x00310006, 0x00000000, 
    0x00000000, 0x00003884, 0x00000001, 0x00000002, 0x00000005, 0x00000290, 
    0x0010a004, 0x00200005, 0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 
    0x0000101b, 0x0000101e, 0x00000017, 0x00001019, 0x0000101d, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x40066666, 0x40833333, 0x00000000, 0x44bf41eb, 0x40466666, 
    0x40a33333, 0x3dcccccd, 0x3f8ccccd, 0x30052004, 0x00001200, 0xc2000000, 
    0x00006006, 0x600c1200, 0x12000000, 0x00004012, 0x00001200, 0xc4000000, 
    0x00006016, 0x301c1200, 0x22000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0xac100000, 0x00000002, 0xc20000fe, 
    0xc8060000, 0x006cbc00, 0xa000fe00, 0xc8030003, 0x04c5c600, 0xa500fe00, 
    0x2c2f0004, 0x006cd0b1, 0xa000ff00, 0x2c4f0006, 0x0400c6c6, 0xa504fe00, 
    0x204f0304, 0x00a700b1, 0xe8040000, 0x208f0305, 0x007ac6c6, 0xa504fe00, 
    0xc80f0004, 0x01343452, 0xeb060504, 0xc8060000, 0x0116bcc1, 0xeb030300, 
    0xc8030003, 0x00c56c00, 0xe0000000, 0xc80f0000, 0x00f86c00, 0xe0040000, 
    0xc8030003, 0x00b0b000, 0xa003fe00, 0x5c0f0000, 0x00f8006c, 0xa000ff03, 
    0xc889c03e, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc802803e, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000003, 
    0xc8018002, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000000, 
    0xc8028002, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000c6, 0xe2000000, 
    0xc80f8000, 0xe0000000, 0x22000000, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc80f8003, 0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22000000, 
    0x4e4a0000, 0x4a2de707, 0x09904fe8
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertex.hlsl.h /Vn
//    pBinary_X360_VBatchVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertex.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1

dcl_index r0.x
dcl_color o0

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 1.10000002, 0, 0


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    vfetch r0.x___, r0.x, color2
    alloc position
    exec
    adds r0.x, r0.xx
    add r3.xz, r0.x, c255.xy
    frc r0.yz, r3.xxz
  + sgts r3.y, -r3.x
    sgt r3.xw, r0.yz, c255.z
  + sgts r3.z, -r3.z
    mad r0.yz, r3.xxz, r3.yyw, -r0.yyz
    add r0.xy, r0.yz, r0.x
    exec
    add r0.xy, r0.xy, c255.xy
    movas r0._, r0.x
    dp4 oPos.x001, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 oPos.y, r2.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    mov o0, r1

// PDB hint 4e4a0000-fafdec7b-4cb8779f

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchVertex[] =
{
    0x102a1101, 0x00000158, 0x00000124, 0x00000024, 0x00000090, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685665, 0x72746578, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00300000, 0x0000003c, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000e4, 0x00010003, 0x00000000, 0x00000000, 0x00001021, 0x00000001, 
    0x00000003, 0x00000001, 0x00000290, 0x0010a003, 0x00000004, 0x0032a005, 
    0x0000f0a0, 0x00001011, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3dcccccd, 0x3f8ccccd, 0x00000000, 0x00000000, 
    0x70153003, 0x00001200, 0xc2000000, 0x00006006, 0x500c1200, 0x12000000, 
    0x00000000, 0x1011c400, 0x22000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 
    0x00100000, 0x0000006c, 0xe2000000, 0xc8050003, 0x006cb000, 0xa000ff00, 
    0x20260300, 0x01cc006c, 0xe8030003, 0x20490303, 0x01c5c6c6, 0xa500ff03, 
    0xc8060000, 0x01cc11c1, 0xeb030300, 0xc8030000, 0x00c56c00, 0xe0000000, 
    0xc8030000, 0x00b0b000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc889c03e, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000000, 
    0xc802803e, 0xa0a7a700, 0xaf020000, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0xfafdec7b, 0x4cb8779f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexEAlpha.hlsl.h /Vn
//    pBinary_X360_VBatchVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 510.019989, 255.009995, 0.100000001, 1.10000002
def c255, 0, 0, 0, 0


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    mul r4.yz, r1.z, c254.xxy
    add r3.zw, r4.y, c254.zzzw
    frc r3.xy, r3.zw
  + sgts r5.z, -r3.z
    sgt r5.xy, r3.xy, c255.x
  + sgts r5.w, -r3.w
    mad r4.xw, r5.xw, r5.zy, -r3.xy
    add r3.xy, r4.xz, r4.z
    exec
    add r3.x, r3.x, r4.z
    add r3.y, r4.w, r3.y
    add r3.xy, r3.xy, c254.zw
    movas r0._, r3.x
    dp4 oPos.x001, r0.wzxy, c[0+a0].wzxy
    movas r0._, r3.y
    exec
    dp4 oPos.y, r0.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    mov o0, r2
    mov o1, r1

// PDB hint 4e4a0000-fa3a89c4-6cc37b45

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchVertexEAlpha[] =
{
    0x102a1101, 0x00000164, 0x00000154, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685665, 0x72746578, 0x45416c70, 0x68612e68, 0x6c736c2e, 
    0x75706462, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00300000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000114, 0x00110005, 0x00000000, 0x00000000, 0x00002042, 
    0x00000001, 0x00000003, 0x00000002, 0x00000290, 0x0010a004, 0x0001a005, 
    0x00300006, 0x0000f0a0, 0x0001f1a1, 0x00001014, 0x00001015, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x43ff028f, 0x437f028f, 0x3dcccccd, 0x3f8ccccd, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x70153004, 0x00001200, 0xc2000000, 
    0x00006007, 0x600d1200, 0x12000000, 0x00001013, 0x00001200, 0xc4000000, 
    0x00002014, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc8060004, 0x00c6bc00, 0xa101fe00, 0xc80c0003, 0x00b10600, 0xa004fe00, 
    0x20430503, 0x011a00c6, 0xe8030003, 0x20830505, 0x01b06c1b, 0xa503ff03, 
    0xc8090004, 0x0118b2b0, 0xeb050503, 0xc8030003, 0x00c4c600, 0xe0040400, 
    0xc8010003, 0x006cc600, 0xe0030400, 0xc8020003, 0x001bb100, 0xe0040300, 
    0xc8030003, 0x00b01a00, 0xa003fe00, 0x5c000000, 0x0000006c, 0xe2000003, 
    0xc889c03e, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x000000b1, 0xe2000003, 
    0xc802803e, 0xa0a7a700, 0xaf000000, 0xc80f8000, 0x00000000, 0xe2020200, 
    0xc80f8001, 0x00000000, 0xe2010100, 0x4e4a0000, 0xfa3a89c4, 0x6cc37b45
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexCxform.hlsl.h /Vn
//    pBinary_X360_VBatchVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 2.0999999, 3.0999999, 0.100000001, 1.10000002


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    vfetch r0._x__, r0.x, color2
    alloc position
    exec
    mulsc r0.x, c254.x, r0.y
    add r3, r0.x, c255.xywz
    sgt r5, -r3, c254.y
    frc r3, r3
    sgt r4, r3, c254.y
    mul r4.x, r4.x, r5.x
    exec
    mul r4.yzw, r5.yyzw, r4.yyzw
    add r3, r4.xywz, -r3.xywz
    add r0, r3.xywz, r0.x
    add r0, r0.xywz, c255
    movas r0._, r0.x
    dp4 oPos.x001, r2.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r0.y
    dp4 oPos.y, r2.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o0, c[0+a0]
    movas r0._, r0.w
    mov o2, r1
    mov o1, c[0+a0]

// PDB hint 4e4a0000-fa5993e1-98a69180

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchVertexCxform[] =
{
    0x102a1101, 0x0000016c, 0x00000184, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685665, 0x72746578, 0x4378666f, 0x726d2e68, 0x6c736c2e, 
    0x75706462, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00600000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000144, 0x00210005, 0x00000000, 0x00000000, 0x00003063, 
    0x00000001, 0x00000003, 0x00000003, 0x00000290, 0x0010a004, 0x00000005, 
    0x0022a006, 0x0000f050, 0x0001f151, 0x0002f2a0, 0x00001016, 0x00001019, 
    0x00001018, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 0x00000000, 
    0x00000000, 0x40066666, 0x40466666, 0x3dcccccd, 0x3f8ccccd, 0x70153004, 
    0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 0x00002013, 
    0x00001200, 0xc4000000, 0x00005015, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc7, 0x00000000, 0xa8100000, 0x00000041, 0xc20000fe, 0xc80f0003, 
    0x006cd000, 0xa000ff00, 0xc80f0005, 0x0400b100, 0xa503fe00, 0xc80f0003, 
    0x00000000, 0xe8030000, 0xc80f0004, 0x0000b100, 0xa503fe00, 0xc8010004, 
    0x006c6c00, 0xe1040500, 0xc80e0004, 0x00010100, 0xe1050400, 0xc80f0003, 
    0x02d0d000, 0xe0040300, 0xc80f0000, 0x00d06c00, 0xe0030000, 0xc80f0000, 
    0x00d00000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000000, 0xc889c03e, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000000, 0xc802803e, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8000, 
    0xe0000000, 0x22000000, 0x5c000000, 0x0000001b, 0xe2000000, 0xc80f8002, 
    0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22000000, 0x4e4a0000, 
    0xfa5993e1, 0x98a69180
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 1020.03998, 0, 0, 0
def c255, 2.0999999, 3.0999999, 0.100000001, 1.10000002


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r3, r0.x, position
    alloc position
    exec
    mulsc r0.x, c254.x, r1.z
    add r4, r0.x, c255.xywz
    sgt r6, -r4, c254.y
    frc r4, r4
    sgt r5, r4, c254.y
    mul r5.x, r5.x, r6.x
    exec
    mul r5.yzw, r6.yyzw, r5.yyzw
    add r4, r5.xywz, -r4.xywz
    add r0, r4.xywz, r0.x
    add r0, r0.xywz, c255
    movas r0._, r0.x
    dp4 oPos.x001, r3.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r0.y
    dp4 oPos.y, r3.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o0, c[0+a0]
    movas r0._, r0.w
    mov o2, r2
    mov o3, r1
    mov o1, c[0+a0]

// PDB hint 4e4a0000-81483441-929a2042

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchVertexCxformEAlpha[] =
{
    0x102a1101, 0x0000017c, 0x00000190, 0x00000024, 0x0000009c, 0x00000100, 
    0x00000128, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685665, 0x72746578, 0x4378666f, 0x726d4541, 0x6c706861, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020000, 0x00600000, 0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000150, 0x00310006, 0x00000000, 
    0x00000000, 0x00004084, 0x00000001, 0x00000003, 0x00000004, 0x00000290, 
    0x0010a004, 0x0001a005, 0x00200006, 0x0000f050, 0x0001f151, 0x0002f2a0, 
    0x0003f3a1, 0x00001016, 0x0000101a, 0x00001018, 0x00001019, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x447f028f, 0x00000000, 0x00000000, 0x00000000, 0x40066666, 
    0x40466666, 0x3dcccccd, 0x3f8ccccd, 0x70153004, 0x00001200, 0xc2000000, 
    0x00006007, 0x600d1200, 0x12000000, 0x00002013, 0x00001200, 0xc4000000, 
    0x00006015, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f83000, 0x00000688, 0x00000000, 
    0xac100000, 0x00000042, 0xc20000fe, 0xc80f0004, 0x006cd000, 0xa000ff00, 
    0xc80f0006, 0x0400b100, 0xa504fe00, 0xc80f0004, 0x00000000, 0xe8040000, 
    0xc80f0005, 0x0000b100, 0xa504fe00, 0xc8010005, 0x006c6c00, 0xe1050600, 
    0xc80e0005, 0x00010100, 0xe1060500, 0xc80f0004, 0x02d0d000, 0xe0050400, 
    0xc80f0000, 0x00d06c00, 0xe0040000, 0xc80f0000, 0x00d00000, 0xa000ff00, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc889c03e, 0xa0a7a700, 0xaf030000, 
    0x5c000000, 0x000000b1, 0xe2000000, 0xc802803e, 0xa0a7a700, 0xaf030000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8000, 0xe0000000, 0x22000000, 
    0x5c000000, 0x0000001b, 0xe2000000, 0xc80f8002, 0x00000000, 0xe2020200, 
    0xc80f8003, 0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22000000, 
    0x4e4a0000, 0x81483441, 0x929a2042
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGTexTG.hlsl.h /Vn
//    pBinary_X360_VBatchTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
defextern const vfuniforms[96], float, vector, [1, 4], c96
defextern const vfuniforms[97], float, vector, [1, 4], c97
defextern const vfuniforms[98], float, vector, [1, 4], c98
defextern const vfuniforms[99], float, vector, [1, 4], c99
defextern const vfuniforms[100], float, vector, [1, 4], c100
defextern const vfuniforms[101], float, vector, [1, 4], c101
defextern const vfuniforms[102], float, vector, [1, 4], c102
defextern const vfuniforms[103], float, vector, [1, 4], c103
defextern const vfuniforms[104], float, vector, [1, 4], c104
defextern const vfuniforms[105], float, vector, [1, 4], c105
defextern const vfuniforms[106], float, vector, [1, 4], c106
defextern const vfuniforms[107], float, vector, [1, 4], c107
defextern const vfuniforms[108], float, vector, [1, 4], c108
defextern const vfuniforms[109], float, vector, [1, 4], c109
defextern const vfuniforms[110], float, vector, [1, 4], c110
defextern const vfuniforms[111], float, vector, [1, 4], c111
defextern const vfuniforms[112], float, vector, [1, 4], c112
defextern const vfuniforms[113], float, vector, [1, 4], c113
defextern const vfuniforms[114], float, vector, [1, 4], c114
defextern const vfuniforms[115], float, vector, [1, 4], c115
defextern const vfuniforms[116], float, vector, [1, 4], c116
defextern const vfuniforms[117], float, vector, [1, 4], c117
defextern const vfuniforms[118], float, vector, [1, 4], c118
defextern const vfuniforms[119], float, vector, [1, 4], c119
defextern const vfuniforms[120], float, vector, [1, 4], c120
defextern const vfuniforms[121], float, vector, [1, 4], c121
defextern const vfuniforms[122], float, vector, [1, 4], c122
defextern const vfuniforms[123], float, vector, [1, 4], c123
defextern const vfuniforms[124], float, vector, [1, 4], c124
defextern const vfuniforms[125], float, vector, [1, 4], c125
defextern const vfuniforms[126], float, vector, [1, 4], c126
defextern const vfuniforms[127], float, vector, [1, 4], c127
defextern const vfuniforms[128], float, vector, [1, 4], c128
defextern const vfuniforms[129], float, vector, [1, 4], c129
defextern const vfuniforms[130], float, vector, [1, 4], c130
defextern const vfuniforms[131], float, vector, [1, 4], c131
defextern const vfuniforms[132], float, vector, [1, 4], c132
defextern const vfuniforms[133], float, vector, [1, 4], c133
defextern const vfuniforms[134], float, vector, [1, 4], c134
defextern const vfuniforms[135], float, vector, [1, 4], c135
defextern const vfuniforms[136], float, vector, [1, 4], c136
defextern const vfuniforms[137], float, vector, [1, 4], c137
defextern const vfuniforms[138], float, vector, [1, 4], c138
defextern const vfuniforms[139], float, vector, [1, 4], c139
defextern const vfuniforms[140], float, vector, [1, 4], c140
defextern const vfuniforms[141], float, vector, [1, 4], c141
defextern const vfuniforms[142], float, vector, [1, 4], c142
defextern const vfuniforms[143], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.100000001, 2.0999999, 0, 1530.05994
def c255, 1.10000002, 4.0999999, 5.0999999, 3.0999999


    exec
    vfetch r1, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    mulsc r2.x, c254.w, r1.z
    add r2.yz, r2.x, c254.xxy
    sgt r3.xy, -r2.yz, c254.z
    add r4, r2.x, c255
  + frcs r2.y, r2.y
    sgt r6, -r4, c254.z
  + frcs r2.z, r2.z
    frc r4, r4.wzxy
  + sgts r3.z, r2.y
    exec
    sgt r5, r4.zwyx, c254.z
  + sgts r3.w, r2.z
    mad r4, r6.xzyw, r5.xzyw, -r4.zywx
    mad r2.yz, r3.zzw, r3.xxy, -r2.yyz
    add r3.xy, r2.yz, r2.x
    add r2, r4.xwyz, r2.x
    add r3.xy, r3.xy, c254.xy
    exec
    add r2, r2.xwyz, c255.xywz
  + movas r0._, r3.x
    dp4 oPos.x001, r0.wzxy, c[0+a0].wzxy
    movas r0._, r2.x
    dp4 oPos.y, r0.wzxy, c[0+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r3.y
    dp4 o0.x, r0.wzxy, c[0+a0].wzxy
    movas r0._, r2.z
    dp4 o0.y, r0.wzxy, c[0+a0].wzxy
    movas r0._, r2.y
    dp4 o1.x, r0.wzxy, c[0+a0].wzxy
    exece
    movas r0._, r2.w
    mov o2, r1
    dp4 o1.y, r0.wzxy, c[0+a0].wzxy

// PDB hint 4e4a0000-cce36015-8d564242

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGTexTG[] =
{
    0x102a1101, 0x00000170, 0x000001c0, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544754, 0x65785447, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00900000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00900000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000180, 0x00210006, 0x00000000, 0x00000000, 0x00002063, 
    0x00000001, 0x00000002, 0x00000005, 0x00000290, 0x0010a004, 0x00300005, 
    0x00003050, 0x00023151, 0x0004f2a0, 0x00000017, 0x00001019, 0x0000001b, 
    0x0000101e, 0x0000101d, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 0x40066666, 
    0x00000000, 0x44bf41eb, 0x3f8ccccd, 0x40833333, 0x40a33333, 0x40466666, 
    0x30052004, 0x00001200, 0xc2000000, 0x00006006, 0x600c1200, 0x12000000, 
    0x00004012, 0x00001200, 0xc4000000, 0x00006016, 0x301c1200, 0x22000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xac100200, 0x00000002, 0xc20000fe, 0xc8060002, 0x006cbc00, 0xa002fe00, 
    0xc8030003, 0x04c5c600, 0xa502fe00, 0x2c2f0204, 0x006c00b1, 0xa002ff02, 
    0x2c4f0206, 0x0400c6c6, 0xa504fe02, 0x204f0304, 0x00a700b1, 0xe8040002, 
    0x208f0305, 0x007ac6c6, 0xa504fe02, 0xc80f0004, 0x01343452, 0xeb060504, 
    0xc8060002, 0x0116bcc1, 0xeb030302, 0xc8030003, 0x00c56c00, 0xe0020200, 
    0xc80f0002, 0x00f86c00, 0xe0040200, 0xc8030003, 0x00b0b000, 0xa003fe00, 
    0x5c0f0002, 0x00f8d06c, 0xa002ff03, 0xc889c03e, 0xa0a7a700, 0xaf000000, 
    0x5c000000, 0x0000006c, 0xe2000002, 0xc802803e, 0xa0a7a700, 0xaf000000, 
    0x5c000000, 0x000000b1, 0xe2000003, 0xc8018000, 0xa0a7a700, 0xaf000000, 
    0x5c000000, 0x000000c6, 0xe2000002, 0xc8028000, 0xa0a7a700, 0xaf000000, 
    0x5c000000, 0x000000b1, 0xe2000002, 0xc8018001, 0xa0a7a700, 0xaf000000, 
    0x5c000000, 0x0000001b, 0xe2000002, 0xc80f8002, 0x00000000, 0xe2010100, 
    0xc8028001, 0xa0a7a700, 0xaf000000, 0x4e4a0000, 0xcce36015, 0x8d564242
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VBatchTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
defextern const vfuniforms[96], float, vector, [1, 4], c96
defextern const vfuniforms[97], float, vector, [1, 4], c97
defextern const vfuniforms[98], float, vector, [1, 4], c98
defextern const vfuniforms[99], float, vector, [1, 4], c99
defextern const vfuniforms[100], float, vector, [1, 4], c100
defextern const vfuniforms[101], float, vector, [1, 4], c101
defextern const vfuniforms[102], float, vector, [1, 4], c102
defextern const vfuniforms[103], float, vector, [1, 4], c103
defextern const vfuniforms[104], float, vector, [1, 4], c104
defextern const vfuniforms[105], float, vector, [1, 4], c105
defextern const vfuniforms[106], float, vector, [1, 4], c106
defextern const vfuniforms[107], float, vector, [1, 4], c107
defextern const vfuniforms[108], float, vector, [1, 4], c108
defextern const vfuniforms[109], float, vector, [1, 4], c109
defextern const vfuniforms[110], float, vector, [1, 4], c110
defextern const vfuniforms[111], float, vector, [1, 4], c111
defextern const vfuniforms[112], float, vector, [1, 4], c112
defextern const vfuniforms[113], float, vector, [1, 4], c113
defextern const vfuniforms[114], float, vector, [1, 4], c114
defextern const vfuniforms[115], float, vector, [1, 4], c115
defextern const vfuniforms[116], float, vector, [1, 4], c116
defextern const vfuniforms[117], float, vector, [1, 4], c117
defextern const vfuniforms[118], float, vector, [1, 4], c118
defextern const vfuniforms[119], float, vector, [1, 4], c119
defextern const vfuniforms[120], float, vector, [1, 4], c120
defextern const vfuniforms[121], float, vector, [1, 4], c121
defextern const vfuniforms[122], float, vector, [1, 4], c122
defextern const vfuniforms[123], float, vector, [1, 4], c123
defextern const vfuniforms[124], float, vector, [1, 4], c124
defextern const vfuniforms[125], float, vector, [1, 4], c125
defextern const vfuniforms[126], float, vector, [1, 4], c126
defextern const vfuniforms[127], float, vector, [1, 4], c127
defextern const vfuniforms[128], float, vector, [1, 4], c128
defextern const vfuniforms[129], float, vector, [1, 4], c129
defextern const vfuniforms[130], float, vector, [1, 4], c130
defextern const vfuniforms[131], float, vector, [1, 4], c131
defextern const vfuniforms[132], float, vector, [1, 4], c132
defextern const vfuniforms[133], float, vector, [1, 4], c133
defextern const vfuniforms[134], float, vector, [1, 4], c134
defextern const vfuniforms[135], float, vector, [1, 4], c135
defextern const vfuniforms[136], float, vector, [1, 4], c136
defextern const vfuniforms[137], float, vector, [1, 4], c137
defextern const vfuniforms[138], float, vector, [1, 4], c138
defextern const vfuniforms[139], float, vector, [1, 4], c139
defextern const vfuniforms[140], float, vector, [1, 4], c140
defextern const vfuniforms[141], float, vector, [1, 4], c141
defextern const vfuniforms[142], float, vector, [1, 4], c142
defextern const vfuniforms[143], float, vector, [1, 4], c143
defextern const vfuniforms[144], float, vector, [1, 4], c144
defextern const vfuniforms[145], float, vector, [1, 4], c145
defextern const vfuniforms[146], float, vector, [1, 4], c146
defextern const vfuniforms[147], float, vector, [1, 4], c147
defextern const vfuniforms[148], float, vector, [1, 4], c148
defextern const vfuniforms[149], float, vector, [1, 4], c149
defextern const vfuniforms[150], float, vector, [1, 4], c150
defextern const vfuniforms[151], float, vector, [1, 4], c151
defextern const vfuniforms[152], float, vector, [1, 4], c152
defextern const vfuniforms[153], float, vector, [1, 4], c153
defextern const vfuniforms[154], float, vector, [1, 4], c154
defextern const vfuniforms[155], float, vector, [1, 4], c155
defextern const vfuniforms[156], float, vector, [1, 4], c156
defextern const vfuniforms[157], float, vector, [1, 4], c157
defextern const vfuniforms[158], float, vector, [1, 4], c158
defextern const vfuniforms[159], float, vector, [1, 4], c159
defextern const vfuniforms[160], float, vector, [1, 4], c160
defextern const vfuniforms[161], float, vector, [1, 4], c161
defextern const vfuniforms[162], float, vector, [1, 4], c162
defextern const vfuniforms[163], float, vector, [1, 4], c163
defextern const vfuniforms[164], float, vector, [1, 4], c164
defextern const vfuniforms[165], float, vector, [1, 4], c165
defextern const vfuniforms[166], float, vector, [1, 4], c166
defextern const vfuniforms[167], float, vector, [1, 4], c167
defextern const vfuniforms[168], float, vector, [1, 4], c168
defextern const vfuniforms[169], float, vector, [1, 4], c169
defextern const vfuniforms[170], float, vector, [1, 4], c170
defextern const vfuniforms[171], float, vector, [1, 4], c171
defextern const vfuniforms[172], float, vector, [1, 4], c172
defextern const vfuniforms[173], float, vector, [1, 4], c173
defextern const vfuniforms[174], float, vector, [1, 4], c174
defextern const vfuniforms[175], float, vector, [1, 4], c175
defextern const vfuniforms[176], float, vector, [1, 4], c176
defextern const vfuniforms[177], float, vector, [1, 4], c177
defextern const vfuniforms[178], float, vector, [1, 4], c178
defextern const vfuniforms[179], float, vector, [1, 4], c179
defextern const vfuniforms[180], float, vector, [1, 4], c180
defextern const vfuniforms[181], float, vector, [1, 4], c181
defextern const vfuniforms[182], float, vector, [1, 4], c182
defextern const vfuniforms[183], float, vector, [1, 4], c183
defextern const vfuniforms[184], float, vector, [1, 4], c184
defextern const vfuniforms[185], float, vector, [1, 4], c185
defextern const vfuniforms[186], float, vector, [1, 4], c186
defextern const vfuniforms[187], float, vector, [1, 4], c187
defextern const vfuniforms[188], float, vector, [1, 4], c188
defextern const vfuniforms[189], float, vector, [1, 4], c189
defextern const vfuniforms[190], float, vector, [1, 4], c190
defextern const vfuniforms[191], float, vector, [1, 4], c191
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=8
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4

def c252, 0, 0, 0, 0
def c253, 2040.07996, 0, 0, 0
def c254, 3.0999999, 7.0999999, 6.0999999, 5.0999999
def c255, 2.0999999, 4.0999999, 1.10000002, 0.100000001


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    alloc position
    exec
    mulsc r0.x, c253.x, r1.z
    add r4, r0.x, c255
    add r3, r0.x, c254.xwyz
    sgt r8, -r3, c253.y
  + frcs r3.x, r3.x
    sgt r5, -r4.xywz, c253.y
  + frcs r3.y, r3.y
    frc r4, r4.xywz
  + frcs r3.z, r3.z
    exec
    sgt r6, r4.xywz, c253.y
  + frcs r3.w, r3.w
    sgt r7, r3.xwyz, c253.y
  + movs r0._, r6.x
    mul r5.zw, r5.wwwz, r6.zzzw
  + muls_prev r5.x, r5.x
    mad r3, r8, r7.xzwy, -r3
    add r3, r3.xwyz, r0.x
  + movs r0._, r6.y
    add r3, r3.xwyz, c254
  + muls_prev r5.y, r5.y
    exec
    add r4, r5, -r4.xywz
    add r0, r4.xywz, r0.x
    add r0, r0.xywz, c255
  + movas r0._, r3.x
    dp4 oPos.0y01, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.x
    dp4 oPos.x, r2.wzxy, c[0+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.y
    dp4 o2.x, r2.wzxy, c[0+a0].wzxy
    movas r0._, r3.w
    dp4 o2.y, r2.wzxy, c[0+a0].wzxy
    movas r0._, r3.z
    dp4 o3.x, r2.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r3.y
    dp4 o3.y, r2.wzxy, c[0+a0].wzxy
    movas r0._, r0.w
    mov o0, c[0+a0]
    movas r0._, r0.z
    mov o4, r1
    exece
    mov o1, c[0+a0]

// PDB hint 4e4a0000-36b1ddf9-c358ac67

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGTexTGCxform[] =
{
    0x102a1101, 0x00000184, 0x00000214, 0x00000024, 0x00000098, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544754, 0x65785447, 0x4378666f, 0x726d2e68, 
    0x6c736c2e, 0x75706462, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 
    0x00c00000, 0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00c00000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000001d4, 0x00410008, 0x00000000, 0x00000000, 
    0x000040a5, 0x00000001, 0x00000002, 0x00000007, 0x00000290, 0x0010a005, 
    0x00200006, 0x0000f050, 0x0001f151, 0x00023252, 0x00043353, 0x0006f4a0, 
    0x00001022, 0x00001025, 0x0000001a, 0x0000101c, 0x0000001e, 0x00001020, 
    0x00001024, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44ff028f, 
    0x00000000, 0x00000000, 0x00000000, 0x40466666, 0x40e33333, 0x40c33333, 
    0x40a33333, 0x40066666, 0x40833333, 0x3f8ccccd, 0x3dcccccd, 0x30052005, 
    0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 0x00006013, 
    0x00001200, 0xc4000000, 0x00006019, 0x601f1200, 0x12000000, 0x00001025, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0xac100000, 0x00000042, 0xc20000fd, 0xc80f0004, 
    0x006c0000, 0xa000ff00, 0xc80f0003, 0x006cf800, 0xa000fe00, 0x2c1f0308, 
    0x0400b16c, 0xa503fd03, 0x2c2f0305, 0x04d0b1b1, 0xa504fd03, 0x2c4f0304, 
    0x00d000c6, 0xe8040003, 0x2c8f0306, 0x00d0b11b, 0xa504fd03, 0x140f0007, 
    0x00f8b16c, 0xa503fd06, 0x0c1c0505, 0x00db066c, 0xe1050605, 0xc80f0003, 
    0x01009400, 0xeb080703, 0x140f0003, 0x00f86cb1, 0xe0030006, 0x0c2f0503, 
    0x00f800b1, 0xa003fe05, 0xc80f0004, 0x0200d000, 0xe0050400, 0xc80f0000, 
    0x00d06c00, 0xe0040000, 0x5c0f0000, 0x00d0006c, 0xa000ff03, 0xc88ac03e, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x0000006c, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000000, 0xc8018002, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x0000001b, 0xe2000003, 0xc8028002, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000c6, 0xe2000003, 0xc8018003, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000003, 0xc8028003, 
    0xa0a7a700, 0xaf020000, 0x5c000000, 0x0000001b, 0xe2000000, 0xc80f8000, 
    0xe0000000, 0x22000000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8004, 
    0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22000000, 0x4e4a0000, 
    0x36b1ddf9, 0xc358ac67
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGVertex.hlsl.h /Vn
//    pBinary_X360_VBatchTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 1020.03998, 0, 0, 0
def c255, 0.100000001, 3.0999999, 1.10000002, 2.0999999


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r0, r0.x, position
    alloc position
    exec
    mulsc r3.x, c254.x, r1.z
    add r4, r3.x, c255.xzwy
    sgt r6, -r4.xzyw, c254.y
    frc r4, r4
    sgt r5, r4.xzyw, c254.y
    mul r5.xy, r5.xy, r6.xy
    exec
    mul r5.zw, r6.zzzw, r5.zzzw
    add r4, r5.xzyw, -r4
    add r3, r4, r3.x
    add r3, r3.xwyz, c255
    movas r0._, r3.x
    dp4 oPos.x001, r0.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r3.z
    dp4 oPos.y, r0.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r3.w
    dp4 o0.x, r0.wzxy, c[0+a0].wzxy
    movas r0._, r3.y
    mov o1, r2
    mov o2, r1
    dp4 o0.y, r0.wzxy, c[0+a0].wzxy

// PDB hint 4e4a0000-4a15b6b1-d0b8880e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGVertex[] =
{
    0x102a1101, 0x00000170, 0x00000190, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544756, 0x65727465, 0x782e686c, 0x736c2e75, 
    0x70646200, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00600000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000150, 0x00210006, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000003, 0x00000004, 0x00000290, 0x0010a004, 0x0001a005, 
    0x00300006, 0x00003050, 0x0002f1a0, 0x0003f2a1, 0x00000016, 0x0000101a, 
    0x00001018, 0x00001019, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x447f028f, 0x00000000, 
    0x00000000, 0x00000000, 0x3dcccccd, 0x40466666, 0x3f8ccccd, 0x40066666, 
    0x70153004, 0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 
    0x00002013, 0x00001200, 0xc4000000, 0x00006015, 0x00002200, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000688, 0x00000000, 0xac100300, 0x00000042, 0xc20000fe, 
    0xc80f0004, 0x006c9400, 0xa003ff00, 0xc80f0006, 0x0434b100, 0xa504fe00, 
    0xc80f0004, 0x00000000, 0xe8040000, 0xc80f0005, 0x0034b100, 0xa504fe00, 
    0xc8030005, 0x00b0b000, 0xe1050600, 0xc80c0005, 0x00060600, 0xe1060500, 
    0xc80f0004, 0x02340000, 0xe0050400, 0xc80f0003, 0x00006c00, 0xe0040300, 
    0xc80f0003, 0x00f80000, 0xa003ff00, 0x5c000000, 0x0000006c, 0xe2000003, 
    0xc889c03e, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x000000c6, 0xe2000003, 
    0xc802803e, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x0000001b, 0xe2000003, 
    0xc8018000, 0xa0a7a700, 0xaf000000, 0x5c000000, 0x000000b1, 0xe2000003, 
    0xc80f8001, 0x00000000, 0xe2020200, 0xc80f8002, 0x00000000, 0xe2010100, 
    0xc8028000, 0xa0a7a700, 0xaf000000, 0x4e4a0000, 0x4a15b6b1, 0xd0b8880e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGVertexCxform.hlsl.h
//    /Vn pBinary_X360_VBatchTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
defextern const vfuniforms[96], float, vector, [1, 4], c96
defextern const vfuniforms[97], float, vector, [1, 4], c97
defextern const vfuniforms[98], float, vector, [1, 4], c98
defextern const vfuniforms[99], float, vector, [1, 4], c99
defextern const vfuniforms[100], float, vector, [1, 4], c100
defextern const vfuniforms[101], float, vector, [1, 4], c101
defextern const vfuniforms[102], float, vector, [1, 4], c102
defextern const vfuniforms[103], float, vector, [1, 4], c103
defextern const vfuniforms[104], float, vector, [1, 4], c104
defextern const vfuniforms[105], float, vector, [1, 4], c105
defextern const vfuniforms[106], float, vector, [1, 4], c106
defextern const vfuniforms[107], float, vector, [1, 4], c107
defextern const vfuniforms[108], float, vector, [1, 4], c108
defextern const vfuniforms[109], float, vector, [1, 4], c109
defextern const vfuniforms[110], float, vector, [1, 4], c110
defextern const vfuniforms[111], float, vector, [1, 4], c111
defextern const vfuniforms[112], float, vector, [1, 4], c112
defextern const vfuniforms[113], float, vector, [1, 4], c113
defextern const vfuniforms[114], float, vector, [1, 4], c114
defextern const vfuniforms[115], float, vector, [1, 4], c115
defextern const vfuniforms[116], float, vector, [1, 4], c116
defextern const vfuniforms[117], float, vector, [1, 4], c117
defextern const vfuniforms[118], float, vector, [1, 4], c118
defextern const vfuniforms[119], float, vector, [1, 4], c119
defextern const vfuniforms[120], float, vector, [1, 4], c120
defextern const vfuniforms[121], float, vector, [1, 4], c121
defextern const vfuniforms[122], float, vector, [1, 4], c122
defextern const vfuniforms[123], float, vector, [1, 4], c123
defextern const vfuniforms[124], float, vector, [1, 4], c124
defextern const vfuniforms[125], float, vector, [1, 4], c125
defextern const vfuniforms[126], float, vector, [1, 4], c126
defextern const vfuniforms[127], float, vector, [1, 4], c127
defextern const vfuniforms[128], float, vector, [1, 4], c128
defextern const vfuniforms[129], float, vector, [1, 4], c129
defextern const vfuniforms[130], float, vector, [1, 4], c130
defextern const vfuniforms[131], float, vector, [1, 4], c131
defextern const vfuniforms[132], float, vector, [1, 4], c132
defextern const vfuniforms[133], float, vector, [1, 4], c133
defextern const vfuniforms[134], float, vector, [1, 4], c134
defextern const vfuniforms[135], float, vector, [1, 4], c135
defextern const vfuniforms[136], float, vector, [1, 4], c136
defextern const vfuniforms[137], float, vector, [1, 4], c137
defextern const vfuniforms[138], float, vector, [1, 4], c138
defextern const vfuniforms[139], float, vector, [1, 4], c139
defextern const vfuniforms[140], float, vector, [1, 4], c140
defextern const vfuniforms[141], float, vector, [1, 4], c141
defextern const vfuniforms[142], float, vector, [1, 4], c142
defextern const vfuniforms[143], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=7
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 2.0999999, 4.0999999, 0, 1530.05994
def c255, 3.0999999, 5.0999999, 0.100000001, 1.10000002


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r3, r0.x, position
    alloc position
    exec
    mulsc r0.x, c254.w, r1.z
    add r0.yz, r0.x, c254.xxy
    sgt r4.xy, -r0.yz, c254.z
    add r5, r0.x, c255.xywz
  + frcs r0.y, r0.y
    sgt r7, -r5, c254.z
  + frcs r0.z, r0.z
    frc r5, r5.wzxy
  + sgts r4.z, r0.y
    exec
    sgt r6, r5.zwyx, c254.z
  + sgts r4.w, r0.z
    mad r5, r7.xzyw, r6.xzyw, -r5.zywx
    mad r0.yz, r4.zzw, r4.xxy, -r0.yyz
    add r4.xy, r0.yz, r0.x
    add r0, r5.xwyz, r0.x
    add r4.xy, r4.xy, c254.xy
    exec
    add r0, r0.xwyz, c255
  + movas r0._, r4.x
    dp4 oPos.x001, r3.wzxy, c[0+a0].wzxy
    movas r0._, r0.x
    dp4 oPos.y, r3.wzxy, c[0+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r4.y
    dp4 o2.x, r3.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 o2.y, r3.wzxy, c[0+a0].wzxy
    movas r0._, r0.z
    mov o0, c[0+a0]
    exece
    movas r0._, r0.w
    mov o3, r2
    mov o4, r1
    mov o1, c[0+a0]

// PDB hint 4e4a0000-75fc8002-529ef4a6

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTexTGVertexCxform[] =
{
    0x102a1101, 0x00000188, 0x000001d8, 0x00000024, 0x0000009c, 0x00000100, 
    0x00000128, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78544756, 0x65727465, 0x78437866, 0x6f726d2e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020000, 0x00900000, 0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00900000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000198, 0x00410007, 0x00000000, 
    0x00000000, 0x000048a5, 0x00000001, 0x00000003, 0x00000006, 0x00000290, 
    0x0010a004, 0x0001a005, 0x00200006, 0x0000f050, 0x0001f151, 0x00023252, 
    0x0004f3a0, 0x0005f4a1, 0x0000101c, 0x00001020, 0x00000018, 0x0000101a, 
    0x0000101e, 0x0000101f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40066666, 0x40833333, 
    0x00000000, 0x44bf41eb, 0x40466666, 0x40a33333, 0x3dcccccd, 0x3f8ccccd, 
    0x70153004, 0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 
    0x00004013, 0x00001200, 0xc4000000, 0x00006017, 0x401d1200, 0x22000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f83000, 0x00000688, 0x00000000, 0xac100000, 0x00000002, 0xc20000fe, 
    0xc8060000, 0x006cbc00, 0xa000fe00, 0xc8030004, 0x04c5c600, 0xa500fe00, 
    0x2c2f0005, 0x006cd0b1, 0xa000ff00, 0x2c4f0007, 0x0400c6c6, 0xa505fe00, 
    0x204f0405, 0x00a700b1, 0xe8050000, 0x208f0406, 0x007ac6c6, 0xa505fe00, 
    0xc80f0005, 0x01343452, 0xeb070605, 0xc8060000, 0x0116bcc1, 0xeb040400, 
    0xc8030004, 0x00c56c00, 0xe0000000, 0xc80f0000, 0x00f86c00, 0xe0050000, 
    0xc8030004, 0x00b0b000, 0xa004fe00, 0x5c0f0000, 0x00f8006c, 0xa000ff04, 
    0xc889c03e, 0xa0a7a700, 0xaf030000, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc802803e, 0xa0a7a700, 0xaf030000, 0x5c000000, 0x000000b1, 0xe2000004, 
    0xc8018002, 0xa0a7a700, 0xaf030000, 0x5c000000, 0x000000b1, 0xe2000000, 
    0xc8028002, 0xa0a7a700, 0xaf030000, 0x5c000000, 0x000000c6, 0xe2000000, 
    0xc80f8000, 0xe0000000, 0x22000000, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc80f8003, 0x00000000, 0xe2020200, 0xc80f8004, 0x00000000, 0xe2010100, 
    0xc80f8001, 0xe0000000, 0x22000000, 0x4e4a0000, 0x75fc8002, 0x529ef4a6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTG.hlsl.h /Vn
//    pBinary_X360_VBatchPosition3dTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTG.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 1.10000002, 0, 4


    exec
    vfetch r1, r0.x, position
    vfetch r0._x__, r0.x, color1
    alloc position
    exec
    addsc r0.x, c255.x, r0.y
    frc r0.z, r0.x
  + sgts r0.w, -r0.x
    add r0.x, -r0.z, c255.x
  + sgts r0.z, r0.z
    mad r0.x, r0.w, r0.z, r0.x
    add r0.xy, r0.xy, r0.y
    add r2.xw, r0.y, c255.xy
  + mulsc r0.z, c255.w, r0.x
    exec
    movas r0._, r0.z
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    frc r0.zw, r2.xxxw
  + sgts r2.z, -r2.x
    sgt r2.xy, r0.zw, c255.z
  + sgts r2.w, -r2.w
    mad r0.zw, r2.xxxw, r2.zzzy, -r0.zzzw
    add r0.xy, r0.zw, r0.y
    add r0.xy, r0.xy, c255.xy
    movas r0._, r0.x
    exece
    dp4 o0.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.y
    dp4 o0.y, r1.wzxy, c[96+a0].wzxy

// PDB hint 4e4a0000-83053a02-a2804092

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTG[] =
{
    0x102a1101, 0x00000190, 0x00000184, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x472e686c, 
    0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00600000, 0x00000050, 0x00000000, 0x00000060, 0x00020060, 0x00300000, 
    0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 
    0x00040004, 0x00180000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000144, 0x00010002, 0x00000000, 0x00000000, 
    0x00000821, 0x00000001, 0x00000002, 0x00000002, 0x00000290, 0x00100004, 
    0x0021a005, 0x00003050, 0x00000017, 0x00001019, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 0x3f8ccccd, 
    0x00000000, 0x40800000, 0x30052004, 0x00001200, 0xc2000000, 0x00006006, 
    0x500c1200, 0x12000000, 0x00000000, 0x6011c400, 0x12000000, 0x00003017, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc7, 0x00000000, 0xb0100000, 0x00000041, 0xc20000ff, 0x20840000, 
    0x016c006c, 0xe8000000, 0x20410000, 0x04c66cc6, 0xa000ff00, 0xc8010000, 
    0x001bc66c, 0xeb000000, 0xc8030000, 0x00b0b100, 0xe0000000, 0xa8490002, 
    0x00b1b000, 0x8000ffff, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc804803e, 
    0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 0x204c0200, 
    0x012c006c, 0xe8020002, 0x20830202, 0x011ac61b, 0xa500ff02, 0xc80c0000, 
    0x012c8606, 0xeb020200, 0xc8030000, 0x001ab100, 0xe0000000, 0xc8030000, 
    0x00b0b000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000000, 0xc8018000, 
    0xa0a7a700, 0xaf016000, 0x5c000000, 0x000000b1, 0xe2000000, 0xc8028000, 
    0xa0a7a700, 0xaf016000, 0x4e4a0000, 0x83053a02, 0xa2804092
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 255.009995, 510.019989, 0.100000001, 1.10000002


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, position
    alloc position
    exec
    mul r0.xy, r2.z, c255.xy
    add r3.xyz, r0.xy, c255.zzw
    sgt r4.xyz, -r3.xyz, c254.y
    frc r3.xyz, r3.xyz
    sgt r5.xyz, r3.xyz, c254.y
    mul r4.x, r4.x, r5.x
    exec
    mul r4.yz, r5.yyz, r4.yyz
    add r3.xyz, r4.xzy, -r3.xzy
  + adds r0.z, r0.xx
    add r0.xyz, r3.xzy, r0.xz
    add r0.xyz, r0.yxz, c255.zzw
    mulsc r0.w, c254.x, r0.y
    movas r0._, r0.w
    exec
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.x
    dp4 o0.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.z
    mov o1, r2
    dp4 o0.y, r1.wzxy, c[96+a0].wzxy

// PDB hint 4e4a0000-df887fa4-2b333524

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGEAlpha[] =
{
    0x102a1101, 0x000001a0, 0x00000190, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x4745416c, 
    0x7068612e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020060, 0x00300000, 0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000150, 0x00110005, 
    0x00000000, 0x00000000, 0x00001842, 0x00000001, 0x00000002, 0x00000003, 
    0x00000290, 0x0010a004, 0x00200005, 0x00003050, 0x0002f1a0, 0x00000017, 
    0x0000101a, 0x00001019, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 
    0x00000000, 0x00000000, 0x437f028f, 0x43ff028f, 0x3dcccccd, 0x3f8ccccd, 
    0x30052004, 0x00001200, 0xc2000000, 0x00006006, 0x600c1200, 0x12000000, 
    0x00004012, 0x00001200, 0xc4000000, 0x00005016, 0x00002200, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0xc8030000, 0x00c6b000, 0xa102ff00, 0xc8070003, 0x00b01600, 0xa000ff00, 
    0xc8070004, 0x04c0b100, 0xa503fe00, 0xc8070003, 0x00c00000, 0xe8030000, 
    0xc8070005, 0x00c0b100, 0xa503fe00, 0xc8010004, 0x006c6c00, 0xe1040500, 
    0xc8060004, 0x00c1c100, 0xe1050400, 0x00470003, 0x02b4b46c, 0xe0040300, 
    0xc8070000, 0x00b4c400, 0xe0030000, 0xc8070000, 0x00cd1600, 0xa000ff00, 
    0xa8800000, 0x00000041, 0xc20000fe, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc801803e, 0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 
    0xc804803e, 0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf016000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8001, 0x00000000, 0xe2020200, 
    0xc8028000, 0xa0a7a700, 0xaf016000, 0x4e4a0000, 0xdf887fa4, 0x2b333524
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
defextern const vfuniforms[48], float, vector, [1, 4], c144
defextern const vfuniforms[49], float, vector, [1, 4], c145
defextern const vfuniforms[50], float, vector, [1, 4], c146
defextern const vfuniforms[51], float, vector, [1, 4], c147
defextern const vfuniforms[52], float, vector, [1, 4], c148
defextern const vfuniforms[53], float, vector, [1, 4], c149
defextern const vfuniforms[54], float, vector, [1, 4], c150
defextern const vfuniforms[55], float, vector, [1, 4], c151
defextern const vfuniforms[56], float, vector, [1, 4], c152
defextern const vfuniforms[57], float, vector, [1, 4], c153
defextern const vfuniforms[58], float, vector, [1, 4], c154
defextern const vfuniforms[59], float, vector, [1, 4], c155
defextern const vfuniforms[60], float, vector, [1, 4], c156
defextern const vfuniforms[61], float, vector, [1, 4], c157
defextern const vfuniforms[62], float, vector, [1, 4], c158
defextern const vfuniforms[63], float, vector, [1, 4], c159
defextern const vfuniforms[64], float, vector, [1, 4], c160
defextern const vfuniforms[65], float, vector, [1, 4], c161
defextern const vfuniforms[66], float, vector, [1, 4], c162
defextern const vfuniforms[67], float, vector, [1, 4], c163
defextern const vfuniforms[68], float, vector, [1, 4], c164
defextern const vfuniforms[69], float, vector, [1, 4], c165
defextern const vfuniforms[70], float, vector, [1, 4], c166
defextern const vfuniforms[71], float, vector, [1, 4], c167
defextern const vfuniforms[72], float, vector, [1, 4], c168
defextern const vfuniforms[73], float, vector, [1, 4], c169
defextern const vfuniforms[74], float, vector, [1, 4], c170
defextern const vfuniforms[75], float, vector, [1, 4], c171
defextern const vfuniforms[76], float, vector, [1, 4], c172
defextern const vfuniforms[77], float, vector, [1, 4], c173
defextern const vfuniforms[78], float, vector, [1, 4], c174
defextern const vfuniforms[79], float, vector, [1, 4], c175
defextern const vfuniforms[80], float, vector, [1, 4], c176
defextern const vfuniforms[81], float, vector, [1, 4], c177
defextern const vfuniforms[82], float, vector, [1, 4], c178
defextern const vfuniforms[83], float, vector, [1, 4], c179
defextern const vfuniforms[84], float, vector, [1, 4], c180
defextern const vfuniforms[85], float, vector, [1, 4], c181
defextern const vfuniforms[86], float, vector, [1, 4], c182
defextern const vfuniforms[87], float, vector, [1, 4], c183
defextern const vfuniforms[88], float, vector, [1, 4], c184
defextern const vfuniforms[89], float, vector, [1, 4], c185
defextern const vfuniforms[90], float, vector, [1, 4], c186
defextern const vfuniforms[91], float, vector, [1, 4], c187
defextern const vfuniforms[92], float, vector, [1, 4], c188
defextern const vfuniforms[93], float, vector, [1, 4], c189
defextern const vfuniforms[94], float, vector, [1, 4], c190
defextern const vfuniforms[95], float, vector, [1, 4], c191
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 2.0999999, 3.0999999, 1.10000002, 0.100000001


    exec
    vfetch r1, r0.x, position
    vfetch r0.x___, r0.x, color1
    alloc position
    exec
    addsc r0.y, c255.w, r0.x
    frc r0.z, r0.y
  + sgts r0.w, -r0.y
    add r0.y, -r0.z, c255.w
  + sgts r0.z, r0.z
    mad r0.y, r0.w, r0.z, r0.y
    add r0.y, r0.y, r0.x
    mul r0.xy, r0.xy, c254.x
    exec
    add r2, r0.x, c255.xywz
  + movas r0._, r0.y
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    sgt r4, -r2.xwyz, c254.y
    frc r2, r2.xwyz
    sgt r3, r2.xwyz, c254.y
    mul r3.x, r3.x, r4.x
    mul r3.yzw, r4.zzwy, r3.wwyz
    add r2, r3.xywz, -r2.xzyw
    exec
    add r0, r2.xywz, r0.x
    add r0, r0.xywz, c255
    movas r0._, r0.x
    dp4 o2.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.y
    dp4 o2.y, r1.wzxy, c[96+a0].wzxy
    exece
    movas r0._, r0.w
    mov o0, c[96+a0]
    movas r0._, r0.z
    mov o1, c[96+a0]

// PDB hint 4e4a0000-e58cc165-4e9ef9c4

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGCxform[] =
{
    0x102a1101, 0x000001a8, 0x000001d8, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47437866, 
    0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020060, 0x00600000, 0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000198, 0x00210004, 
    0x00000000, 0x00000000, 0x00002863, 0x00000001, 0x00000002, 0x00000004, 
    0x00000290, 0x00100004, 0x0031a005, 0x0000f050, 0x0001f151, 0x00023252, 
    0x0000101e, 0x00001020, 0x0000001a, 0x0000101c, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x40800000, 0x00000000, 0x00000000, 0x00000000, 0x40066666, 0x40466666, 
    0x3f8ccccd, 0x3dcccccd, 0x30052004, 0x00001200, 0xc2000000, 0x00006006, 
    0x500c1200, 0x12000000, 0x00000000, 0x6011c400, 0x12000000, 0x00006017, 
    0x401d1200, 0x22000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000ff8, 0x00000000, 0xb0200000, 0x00000000, 0xc20000ff, 0x20840000, 
    0x01b100b1, 0xe8000000, 0x20420000, 0x04c61bc6, 0xa000ff00, 0xc8020000, 
    0x001bc6b1, 0xeb000000, 0xc8020000, 0x00b16c00, 0xe0000000, 0xc8030000, 
    0x00b06c00, 0xa100fe00, 0x5c0f0002, 0x006cd0b1, 0xa000ff00, 0xc801803e, 
    0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc804803e, 
    0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 0xc80f0004, 
    0x04f8b100, 0xa502fe00, 0xc80f0002, 0x00f80000, 0xe8020000, 0xc80f0003, 
    0x00f8b100, 0xa502fe00, 0xc8010003, 0x006c6c00, 0xe1030400, 0xc80e0003, 
    0x0096fb00, 0xe1040300, 0xc80f0002, 0x02d03400, 0xe0030200, 0xc80f0000, 
    0x00d06c00, 0xe0020000, 0xc80f0000, 0x00d00000, 0xa000ff00, 0x5c000000, 
    0x0000006c, 0xe2000000, 0xc8018002, 0xa0a7a700, 0xaf016000, 0x5c000000, 
    0x000000b1, 0xe2000000, 0xc8028002, 0xa0a7a700, 0xaf016000, 0x5c000000, 
    0x0000001b, 0xe2000000, 0xc80f8000, 0xe0000000, 0x22606000, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc80f8001, 0xe0000000, 0x22606000, 0x4e4a0000, 
    0xe58cc165, 0x4e9ef9c4
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
defextern const vfuniforms[48], float, vector, [1, 4], c144
defextern const vfuniforms[49], float, vector, [1, 4], c145
defextern const vfuniforms[50], float, vector, [1, 4], c146
defextern const vfuniforms[51], float, vector, [1, 4], c147
defextern const vfuniforms[52], float, vector, [1, 4], c148
defextern const vfuniforms[53], float, vector, [1, 4], c149
defextern const vfuniforms[54], float, vector, [1, 4], c150
defextern const vfuniforms[55], float, vector, [1, 4], c151
defextern const vfuniforms[56], float, vector, [1, 4], c152
defextern const vfuniforms[57], float, vector, [1, 4], c153
defextern const vfuniforms[58], float, vector, [1, 4], c154
defextern const vfuniforms[59], float, vector, [1, 4], c155
defextern const vfuniforms[60], float, vector, [1, 4], c156
defextern const vfuniforms[61], float, vector, [1, 4], c157
defextern const vfuniforms[62], float, vector, [1, 4], c158
defextern const vfuniforms[63], float, vector, [1, 4], c159
defextern const vfuniforms[64], float, vector, [1, 4], c160
defextern const vfuniforms[65], float, vector, [1, 4], c161
defextern const vfuniforms[66], float, vector, [1, 4], c162
defextern const vfuniforms[67], float, vector, [1, 4], c163
defextern const vfuniforms[68], float, vector, [1, 4], c164
defextern const vfuniforms[69], float, vector, [1, 4], c165
defextern const vfuniforms[70], float, vector, [1, 4], c166
defextern const vfuniforms[71], float, vector, [1, 4], c167
defextern const vfuniforms[72], float, vector, [1, 4], c168
defextern const vfuniforms[73], float, vector, [1, 4], c169
defextern const vfuniforms[74], float, vector, [1, 4], c170
defextern const vfuniforms[75], float, vector, [1, 4], c171
defextern const vfuniforms[76], float, vector, [1, 4], c172
defextern const vfuniforms[77], float, vector, [1, 4], c173
defextern const vfuniforms[78], float, vector, [1, 4], c174
defextern const vfuniforms[79], float, vector, [1, 4], c175
defextern const vfuniforms[80], float, vector, [1, 4], c176
defextern const vfuniforms[81], float, vector, [1, 4], c177
defextern const vfuniforms[82], float, vector, [1, 4], c178
defextern const vfuniforms[83], float, vector, [1, 4], c179
defextern const vfuniforms[84], float, vector, [1, 4], c180
defextern const vfuniforms[85], float, vector, [1, 4], c181
defextern const vfuniforms[86], float, vector, [1, 4], c182
defextern const vfuniforms[87], float, vector, [1, 4], c183
defextern const vfuniforms[88], float, vector, [1, 4], c184
defextern const vfuniforms[89], float, vector, [1, 4], c185
defextern const vfuniforms[90], float, vector, [1, 4], c186
defextern const vfuniforms[91], float, vector, [1, 4], c187
defextern const vfuniforms[92], float, vector, [1, 4], c188
defextern const vfuniforms[93], float, vector, [1, 4], c189
defextern const vfuniforms[94], float, vector, [1, 4], c190
defextern const vfuniforms[95], float, vector, [1, 4], c191
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 255.009995, 1020.03998, 0, 4
def c255, 0.100000001, 3.0999999, 1.10000002, 2.0999999


    exec
    vfetch r1, r0.x, color
    vfetch r3, r0.x, position
    alloc position
    exec
    mul r2.xy, r1.z, c254.xy
    add r0, r2.xy, c255.xwyz
    sgt r5, -r0, c254.z
    frc r0, r0
    sgt r4, r0, c254.z
    mul r4.w, r4.w, r5.w
    exec
    mul r4.xyz, r5.xyz, r4.xyz
    add r0, r4, -r0
    add r0, r0.xwyz, r2.xy
    add r0, r0.xwyz, c255
    mulsc r2.z, c254.w, r0.x
    movas r0._, r2.z
    exec
    dp4 oPos.x, r3.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    add r2.x, r2.y, c255.x
  + movas r0._, r0.w
    dp4 o2.x, r3.wzxy, c[96+a0].wzxy
    trunc r2.x, r2.x
  + movas r0._, r0.y
    dp4 o2.y, r3.wzxy, c[96+a0].wzxy
    movas r0._, r2.x
    mov o0, c[96+a0]
    exece
    movas r0._, r0.z
    mov o3, r1
    mov o1, c[96+a0]

// PDB hint 4e4a0000-cb195783-709a3f64

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGCxformEAlpha[] =
{
    0x102a1101, 0x000001b4, 0x000001c0, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000077, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47437866, 
    0x6f726d45, 0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020060, 0x00600000, 0x0000006c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000180, 
    0x00310005, 0x00000000, 0x00000000, 0x00003884, 0x00000001, 0x00000002, 
    0x00000005, 0x00000290, 0x0010a004, 0x00200005, 0x0000f050, 0x0001f151, 
    0x00023252, 0x0004f3a0, 0x0000101b, 0x0000101e, 0x00000017, 0x00001019, 
    0x0000101d, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x437f028f, 0x447f028f, 0x00000000, 
    0x40800000, 0x3dcccccd, 0x40466666, 0x3f8ccccd, 0x40066666, 0x30052004, 
    0x00001200, 0xc2000000, 0x00006006, 0x600c1200, 0x12000000, 0x00004012, 
    0x00001200, 0xc4000000, 0x00006016, 0x301c1200, 0x22000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f83000, 0x00000688, 0x00000000, 0xc8030002, 
    0x00c6b000, 0xa101fe00, 0xc80f0000, 0x00b0f800, 0xa002ff00, 0xc80f0005, 
    0x0400c600, 0xa500fe00, 0xc80f0000, 0x00000000, 0xe8000000, 0xc80f0004, 
    0x0000c600, 0xa500fe00, 0xc8080004, 0x001b1b00, 0xe1040500, 0xc8070004, 
    0x00c0c000, 0xe1050400, 0xc80f0000, 0x02000000, 0xe0040000, 0xc80f0000, 
    0x00f8b000, 0xe0000200, 0xc80f0000, 0x00f80000, 0xa000ff00, 0xa8400200, 
    0x00000000, 0xc20000fe, 0x5c000000, 0x000000c6, 0xe2000002, 0xc801803e, 
    0xa0a7a700, 0xaf030000, 0xc802803e, 0xa0a7a700, 0xaf030100, 0xc804803e, 
    0xa0a7a700, 0xaf030200, 0xc808803e, 0xa0a7a700, 0xaf030300, 0x5c010002, 
    0x00b16c1b, 0xa002ff00, 0xc8018002, 0xa0a7a700, 0xaf036000, 0x5c010002, 
    0x006c00b1, 0xe9020000, 0xc8028002, 0xa0a7a700, 0xaf036000, 0x5c000000, 
    0x0000006c, 0xe2000002, 0xc80f8000, 0xe0000000, 0x22606000, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc80f8003, 0x00000000, 0xe2010100, 0xc80f8001, 
    0xe0000000, 0x22606000, 0x4e4a0000, 0xcb195783, 0x709a3f64
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertex.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertex.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1

dcl_index r0.x
dcl_color o0

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 4, 0, 0


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    vfetch r0._x__, r0.x, color2
    alloc position
    exec
    addsc r0.x, c255.x, r0.y
    frc r0.z, r0.x
  + sgts r0.w, -r0.x
    add r0.x, -r0.z, c255.x
  + sgts r0.z, r0.z
    mad r0.x, r0.w, r0.z, r0.x
    add r0.x, r0.x, r0.y
    mulsc r0.x, c255.y, r0.x
    exec
    movas r0._, r0.x
    dp4 oPos.x, r2.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    mov o0, r1

// PDB hint 4e4a0000-57fddf4e-4bf7c424

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dVertex[] =
{
    0x102a1101, 0x00000160, 0x00000124, 0x00000024, 0x00000098, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x56657274, 0x65782e68, 
    0x6c736c2e, 0x75706462, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 
    0x00600000, 0x0000003c, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 
    0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000000e4, 0x00010002, 0x00000000, 0x00000000, 
    0x00001021, 0x00000001, 0x00000003, 0x00000001, 0x00000290, 0x0010a003, 
    0x00000004, 0x0022a005, 0x0000f0a0, 0x00001011, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 0x40800000, 
    0x00000000, 0x00000000, 0x70153003, 0x00001200, 0xc2000000, 0x00006006, 
    0x500c1200, 0x12000000, 0x00000000, 0x1011c400, 0x22000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc7, 0x00000000, 0xb0100000, 0x00000041, 0xc20000ff, 0x20840000, 
    0x016c006c, 0xe8000000, 0x20410000, 0x04c66cc6, 0xa000ff00, 0xc8010000, 
    0x001bc66c, 0xeb000000, 0xc8010000, 0x006cb100, 0xe0000000, 0xa8100000, 
    0x00000080, 0xc20000ff, 0x5c000000, 0x0000006c, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf020000, 0xc802803e, 0xa0a7a700, 0xaf020100, 0xc804803e, 
    0xa0a7a700, 0xaf020200, 0xc808803e, 0xa0a7a700, 0xaf020300, 0xc80f8000, 
    0x00000000, 0xe2010100, 0x4e4a0000, 0x57fddf4e, 0x4bf7c424
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 255.009995, 0, 0.100000001, 4


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r3, r0.x, position
    alloc position
    exec
    mulsc r0.x, c255.x, r1.z
    addsc r0.z, c255.z, r0.x
    frcs r0.y, r0.z
    sgt r0.w, r0.y, c255.y
  + sgts r0.z, -r0.z
    mad r0.y, r0.w, r0.z, -r0.y
    add r0.x, r0.y, r0.x
    exec
    addsc r0.x, c255.z, r0.x
    mulsc r0.x, c255.w, r0.x
    movas r0._, r0.x
    dp4 oPos.x, r3.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[2+a0].wzxy
    exec
    dp4 oPos.w, r3.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    mov o0, r2
    mov o1, r1

// PDB hint 4e4a0000-0d950672-32705530

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dVertexEAlpha[] =
{
    0x102a1101, 0x00000170, 0x00000154, 0x00000024, 0x000000a0, 0x00000104, 
    0x0000012c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x56657274, 0x65784541, 
    0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000060, 0x0000001c, 
    0x00000053, 0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 
    0x00000030, 0x00020000, 0x00600000, 0x0000003c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000114, 0x00110003, 
    0x00000000, 0x00000000, 0x00002042, 0x00000001, 0x00000003, 0x00000002, 
    0x00000290, 0x0010a004, 0x0001a005, 0x00200006, 0x0000f0a0, 0x0001f1a1, 
    0x00001014, 0x00001015, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x437f028f, 0x00000000, 0x3dcccccd, 0x40800000, 
    0x70153004, 0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 
    0x00001013, 0x00001200, 0xc4000000, 0x00002014, 0x00002200, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f83000, 0x00000688, 0x00000000, 0xac100000, 0x00000042, 0xc20000ff, 
    0xb0400000, 0x000000c0, 0xc20000ff, 0x2c200000, 0x000000c6, 0xe2000000, 
    0x20480000, 0x01b1b1c6, 0xa500ff00, 0xc8020000, 0x011bc6b1, 0xeb000000, 
    0xc8010000, 0x00b16c00, 0xe0000000, 0xb0100000, 0x000000c0, 0xc20000ff, 
    0xa8100000, 0x00000000, 0xc20000ff, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc801803e, 0xa0a7a700, 0xaf030000, 0xc802803e, 0xa0a7a700, 0xaf030100, 
    0xc804803e, 0xa0a7a700, 0xaf030200, 0xc808803e, 0xa0a7a700, 0xaf030300, 
    0xc80f8000, 0x00000000, 0xe2020200, 0xc80f8001, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0x0d950672, 0x32705530
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexCxform.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexCxform.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1.10000002, 0.100000001, 0, 4


    exec
    vfetch r1, r0.x, color
    vfetch r3, r0.x, position
    vfetch r0.x___, r0.x, color2
    alloc position
    exec
    addsc r0.y, c255.y, r0.x
    frc r0.z, r0.y
  + sgts r0.w, -r0.y
    add r0.y, -r0.z, c255.y
  + sgts r0.z, r0.z
    mad r0.y, r0.w, r0.z, r0.y
    add r0.xy, r0.yx, r0.x
    add r2.xy, r0.y, c255.yx
  + mulsc r0.z, c255.w, r0.x
    exec
    movas r0._, r0.z
    dp4 oPos.x, r3.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    frc r0.w, r2.y
  + truncs r0.z, r2.x
    sgt r2.x, r0.w, c255.z
  + sgts r2.y, -r2.y
    mad r0.w, r2.y, r2.x, -r0.w
    add r0.y, r0.w, r0.y
  + movas r0._, r0.z
    mov o2, r1
    mov o0, c[96+a0]
    exece
    addsc r0.x, c255.x, r0.y
    movas r0._, r0.x
    mov o1, c[96+a0]

// PDB hint 4e4a0000-f9220f07-45c402c2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dVertexCxform[] =
{
    0x102a1101, 0x000001a8, 0x00000190, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x56657274, 0x65784378, 
    0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020060, 0x00300000, 0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000150, 0x00210003, 
    0x00000000, 0x00000000, 0x00003063, 0x00000001, 0x00000003, 0x00000003, 
    0x00000290, 0x0010a004, 0x00000005, 0x0032a006, 0x0000f050, 0x0001f151, 
    0x0002f2a0, 0x00001017, 0x0000101a, 0x00001016, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f8ccccd, 0x3dcccccd, 
    0x00000000, 0x40800000, 0x70153004, 0x00001200, 0xc2000000, 0x00006007, 
    0x500d1200, 0x12000000, 0x00000000, 0x6012c400, 0x12000000, 0x00003018, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f83000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 0xb0200000, 
    0x00000080, 0xc20000ff, 0x20840000, 0x01b100b1, 0xe8000000, 0x20420000, 
    0x04c6b1c6, 0xa000ff00, 0xc8020000, 0x001bc6b1, 0xeb000000, 0xc8030000, 
    0x006d6c00, 0xe0000000, 0xa8430002, 0x00b16d00, 0x8000ffff, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf030000, 0xc802803e, 
    0xa0a7a700, 0xaf030100, 0xc804803e, 0xa0a7a700, 0xaf030200, 0xc808803e, 
    0xa0a7a700, 0xaf030300, 0x30480000, 0x00b1006c, 0xe8020002, 0x20210202, 
    0x011bc6b1, 0xa500ff02, 0xc8080000, 0x01b16c1b, 0xeb020200, 0x5c020000, 
    0x001bb1c6, 0xe0000000, 0xc80f8002, 0x00000000, 0xe2010100, 0xc80f8000, 
    0xe0000000, 0x22606000, 0xb0100000, 0x00000041, 0xc20000ff, 0x5c000000, 
    0x0000006c, 0xe2000000, 0xc80f8001, 0xe0000000, 0x22606000, 0x4e4a0000, 
    0xf9220f07, 0x45c402c2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 255.009995, 510.019989, 0.100000001, 1.10000002


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r3, r0.x, position
    alloc position
    exec
    mul r5.zw, r1.z, c255.xxxy
    add r0.xyz, r5.zw, c255.zwz
    frc r4.xy, r0.xy
  + sgts r6.x, -r0.x
    sgt r6.yz, r4.xxy, c254.y
  + sgts r6.w, -r0.y
    mad r5.xy, r6.xz, r6.yw, -r4.xy
    add r4.xy, r5.xz, r5.z
    exec
    add r4.z, r5.y, r4.y
    add r0.xy, r4.zx, c255.wz
    trunc r0.z, r0.z
  + mulsc r0.w, c254.x, r0.y
    movas r0._, r0.w
    dp4 oPos.x, r3.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    exec
    dp4 oPos.z, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o0, c[96+a0]
    movas r0._, r0.x
    mov o2, r2
    mov o3, r1
    mov o1, c[96+a0]

// PDB hint 4e4a0000-07fab789-b7a16953

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dVertexCxformEAlpha[] =
{
    0x102a1101, 0x000001b4, 0x00000190, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000078, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x56657274, 0x65784378, 
    0x666f726d, 0x45416c70, 0x68612e68, 0x6c736c2e, 0x75706462, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020060, 0x00300000, 0x0000006c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000150, 
    0x00310006, 0x00000000, 0x00000000, 0x00004084, 0x00000001, 0x00000003, 
    0x00000004, 0x00000290, 0x0010a004, 0x0001a005, 0x00200006, 0x0000f050, 
    0x0001f151, 0x0002f2a0, 0x0003f3a1, 0x00001016, 0x0000101a, 0x00001018, 
    0x00001019, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 0x00000000, 
    0x00000000, 0x437f028f, 0x43ff028f, 0x3dcccccd, 0x3f8ccccd, 0x70153004, 
    0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 0x00002013, 
    0x00001200, 0xc4000000, 0x00006015, 0x00002200, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f83000, 
    0x00000688, 0x00000000, 0xc80c0005, 0x00c6ac00, 0xa101ff00, 0xc8070000, 
    0x001aca00, 0xa005ff00, 0x20130604, 0x01b0006c, 0xe8000000, 0x20860606, 
    0x01bcb1b1, 0xa504fe00, 0xc8030005, 0x01c419b0, 0xeb060604, 0xc8030004, 
    0x00c4c600, 0xe0050500, 0xc8040004, 0x00b1b100, 0xe0050400, 0xc8030000, 
    0x006ec700, 0xa004ff00, 0xa8840000, 0x00c60041, 0xc90000fe, 0x5c000000, 
    0x0000001b, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf030000, 0xc802803e, 
    0xa0a7a700, 0xaf030100, 0xc804803e, 0xa0a7a700, 0xaf030200, 0xc808803e, 
    0xa0a7a700, 0xaf030300, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8000, 
    0xe0000000, 0x22606000, 0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8002, 
    0x00000000, 0xe2020200, 0xc80f8003, 0x00000000, 0xe2010100, 0xc80f8001, 
    0xe0000000, 0x22606000, 0x4e4a0000, 0x07fab789, 0xb7a16953
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGTexTG.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
defextern const vfuniforms[48], float, vector, [1, 4], c144
defextern const vfuniforms[49], float, vector, [1, 4], c145
defextern const vfuniforms[50], float, vector, [1, 4], c146
defextern const vfuniforms[51], float, vector, [1, 4], c147
defextern const vfuniforms[52], float, vector, [1, 4], c148
defextern const vfuniforms[53], float, vector, [1, 4], c149
defextern const vfuniforms[54], float, vector, [1, 4], c150
defextern const vfuniforms[55], float, vector, [1, 4], c151
defextern const vfuniforms[56], float, vector, [1, 4], c152
defextern const vfuniforms[57], float, vector, [1, 4], c153
defextern const vfuniforms[58], float, vector, [1, 4], c154
defextern const vfuniforms[59], float, vector, [1, 4], c155
defextern const vfuniforms[60], float, vector, [1, 4], c156
defextern const vfuniforms[61], float, vector, [1, 4], c157
defextern const vfuniforms[62], float, vector, [1, 4], c158
defextern const vfuniforms[63], float, vector, [1, 4], c159
defextern const vfuniforms[64], float, vector, [1, 4], c160
defextern const vfuniforms[65], float, vector, [1, 4], c161
defextern const vfuniforms[66], float, vector, [1, 4], c162
defextern const vfuniforms[67], float, vector, [1, 4], c163
defextern const vfuniforms[68], float, vector, [1, 4], c164
defextern const vfuniforms[69], float, vector, [1, 4], c165
defextern const vfuniforms[70], float, vector, [1, 4], c166
defextern const vfuniforms[71], float, vector, [1, 4], c167
defextern const vfuniforms[72], float, vector, [1, 4], c168
defextern const vfuniforms[73], float, vector, [1, 4], c169
defextern const vfuniforms[74], float, vector, [1, 4], c170
defextern const vfuniforms[75], float, vector, [1, 4], c171
defextern const vfuniforms[76], float, vector, [1, 4], c172
defextern const vfuniforms[77], float, vector, [1, 4], c173
defextern const vfuniforms[78], float, vector, [1, 4], c174
defextern const vfuniforms[79], float, vector, [1, 4], c175
defextern const vfuniforms[80], float, vector, [1, 4], c176
defextern const vfuniforms[81], float, vector, [1, 4], c177
defextern const vfuniforms[82], float, vector, [1, 4], c178
defextern const vfuniforms[83], float, vector, [1, 4], c179
defextern const vfuniforms[84], float, vector, [1, 4], c180
defextern const vfuniforms[85], float, vector, [1, 4], c181
defextern const vfuniforms[86], float, vector, [1, 4], c182
defextern const vfuniforms[87], float, vector, [1, 4], c183
defextern const vfuniforms[88], float, vector, [1, 4], c184
defextern const vfuniforms[89], float, vector, [1, 4], c185
defextern const vfuniforms[90], float, vector, [1, 4], c186
defextern const vfuniforms[91], float, vector, [1, 4], c187
defextern const vfuniforms[92], float, vector, [1, 4], c188
defextern const vfuniforms[93], float, vector, [1, 4], c189
defextern const vfuniforms[94], float, vector, [1, 4], c190
defextern const vfuniforms[95], float, vector, [1, 4], c191
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 255.009995, 1020.03998, 0, 4
def c255, 2.0999999, 3.0999999, 1.10000002, 0.100000001


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, position
    alloc position
    exec
    mul r0.xy, r2.z, c254.xy
    add r4, r0.y, c255.xywz
  + addsc r5.x, c255.w, r0.x
    frc r3, r4.wzxy
  + frcs r0.z, r5.x
    sgt r0.w, r0.z, c254.z
  + sgts r5.x, -r5.x
    mad r0.z, r5.x, r0.w, -r0.z
    add r0.x, r0.z, r0.x
    exec
    sgt r5, r3.zwyx, c254.z
  + addsc r0.x, c255.w, r0.x
    sgt r4, -r4, c254.z
  + mulsc r0.z, c254.w, r0.x
    movas r0._, r0.z
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    exec
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    mad r3, r5.xzyw, r4.xzyw, -r3.zywx
    add r0, r3.xwyz, r0.y
    add r0, r0.xwyz, c255
    movas r0._, r0.w
    dp4 o0.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.z
    exece
    dp4 o0.y, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.x
    dp4 o1.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.y
    mov o2, r2
    dp4 o1.y, r1.wzxy, c[96+a0].wzxy

// PDB hint 4e4a0000-4bc9f590-0391c45b

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGTexTG[] =
{
    0x102a1101, 0x000001a8, 0x000001c0, 0x00000024, 0x0000009c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47546578, 
    0x54472e68, 0x6c736c2e, 0x75706462, 0x00000090, 0x0000001c, 0x00000083, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 
    0x00020000, 0x00600000, 0x00000050, 0x00000000, 0x00000060, 0x00020060, 
    0x00600000, 0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 
    0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000180, 0x00210005, 0x00000000, 
    0x00000000, 0x00002063, 0x00000001, 0x00000002, 0x00000005, 0x00000290, 
    0x0010a004, 0x00200005, 0x00003050, 0x00023151, 0x0004f2a0, 0x00000017, 
    0x00001019, 0x0000001b, 0x0000101e, 0x0000101d, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x437f028f, 0x447f028f, 0x00000000, 0x40800000, 0x40066666, 0x40466666, 
    0x3f8ccccd, 0x3dcccccd, 0x30052004, 0x00001200, 0xc2000000, 0x00006006, 
    0x600c1200, 0x12000000, 0x00001012, 0x00001200, 0xc4000000, 0x00006013, 
    0x60191200, 0x22000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0xc8030000, 0x00c6b000, 0xa102fe00, 0xb01f0504, 
    0x00b1d000, 0x8000ffff, 0x2c4f0003, 0x00a7006c, 0xe8040005, 0x20180500, 
    0x01c6c66c, 0xa500fe05, 0xc8040000, 0x016c1bc6, 0xeb050000, 0xc8010000, 
    0x00c66c00, 0xe0000000, 0xb01f0005, 0x007ac600, 0x8503feff, 0xa84f0004, 
    0x0400c600, 0x8504fefe, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc804803e, 
    0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 0xc80f0003, 
    0x01343452, 0xeb050403, 0xc80f0000, 0x00f8b100, 0xe0030000, 0xc80f0000, 
    0x00f80000, 0xa000ff00, 0x5c000000, 0x0000001b, 0xe2000000, 0xc8018000, 
    0xa0a7a700, 0xaf016000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc8028000, 
    0xa0a7a700, 0xaf016000, 0x5c000000, 0x0000006c, 0xe2000000, 0xc8018001, 
    0xa0a7a700, 0xaf016000, 0x5c000000, 0x000000b1, 0xe2000000, 0xc80f8002, 
    0x00000000, 0xe2020200, 0xc8028001, 0xa0a7a700, 0xaf016000, 0x4e4a0000, 
    0x4bc9f590, 0x0391c45b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96    144
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
defextern const vfuniforms[48], float, vector, [1, 4], c144
defextern const vfuniforms[49], float, vector, [1, 4], c145
defextern const vfuniforms[50], float, vector, [1, 4], c146
defextern const vfuniforms[51], float, vector, [1, 4], c147
defextern const vfuniforms[52], float, vector, [1, 4], c148
defextern const vfuniforms[53], float, vector, [1, 4], c149
defextern const vfuniforms[54], float, vector, [1, 4], c150
defextern const vfuniforms[55], float, vector, [1, 4], c151
defextern const vfuniforms[56], float, vector, [1, 4], c152
defextern const vfuniforms[57], float, vector, [1, 4], c153
defextern const vfuniforms[58], float, vector, [1, 4], c154
defextern const vfuniforms[59], float, vector, [1, 4], c155
defextern const vfuniforms[60], float, vector, [1, 4], c156
defextern const vfuniforms[61], float, vector, [1, 4], c157
defextern const vfuniforms[62], float, vector, [1, 4], c158
defextern const vfuniforms[63], float, vector, [1, 4], c159
defextern const vfuniforms[64], float, vector, [1, 4], c160
defextern const vfuniforms[65], float, vector, [1, 4], c161
defextern const vfuniforms[66], float, vector, [1, 4], c162
defextern const vfuniforms[67], float, vector, [1, 4], c163
defextern const vfuniforms[68], float, vector, [1, 4], c164
defextern const vfuniforms[69], float, vector, [1, 4], c165
defextern const vfuniforms[70], float, vector, [1, 4], c166
defextern const vfuniforms[71], float, vector, [1, 4], c167
defextern const vfuniforms[72], float, vector, [1, 4], c168
defextern const vfuniforms[73], float, vector, [1, 4], c169
defextern const vfuniforms[74], float, vector, [1, 4], c170
defextern const vfuniforms[75], float, vector, [1, 4], c171
defextern const vfuniforms[76], float, vector, [1, 4], c172
defextern const vfuniforms[77], float, vector, [1, 4], c173
defextern const vfuniforms[78], float, vector, [1, 4], c174
defextern const vfuniforms[79], float, vector, [1, 4], c175
defextern const vfuniforms[80], float, vector, [1, 4], c176
defextern const vfuniforms[81], float, vector, [1, 4], c177
defextern const vfuniforms[82], float, vector, [1, 4], c178
defextern const vfuniforms[83], float, vector, [1, 4], c179
defextern const vfuniforms[84], float, vector, [1, 4], c180
defextern const vfuniforms[85], float, vector, [1, 4], c181
defextern const vfuniforms[86], float, vector, [1, 4], c182
defextern const vfuniforms[87], float, vector, [1, 4], c183
defextern const vfuniforms[88], float, vector, [1, 4], c184
defextern const vfuniforms[89], float, vector, [1, 4], c185
defextern const vfuniforms[90], float, vector, [1, 4], c186
defextern const vfuniforms[91], float, vector, [1, 4], c187
defextern const vfuniforms[92], float, vector, [1, 4], c188
defextern const vfuniforms[93], float, vector, [1, 4], c189
defextern const vfuniforms[94], float, vector, [1, 4], c190
defextern const vfuniforms[95], float, vector, [1, 4], c191
defextern const vfuniforms[96], float, vector, [1, 4], c192
defextern const vfuniforms[97], float, vector, [1, 4], c193
defextern const vfuniforms[98], float, vector, [1, 4], c194
defextern const vfuniforms[99], float, vector, [1, 4], c195
defextern const vfuniforms[100], float, vector, [1, 4], c196
defextern const vfuniforms[101], float, vector, [1, 4], c197
defextern const vfuniforms[102], float, vector, [1, 4], c198
defextern const vfuniforms[103], float, vector, [1, 4], c199
defextern const vfuniforms[104], float, vector, [1, 4], c200
defextern const vfuniforms[105], float, vector, [1, 4], c201
defextern const vfuniforms[106], float, vector, [1, 4], c202
defextern const vfuniforms[107], float, vector, [1, 4], c203
defextern const vfuniforms[108], float, vector, [1, 4], c204
defextern const vfuniforms[109], float, vector, [1, 4], c205
defextern const vfuniforms[110], float, vector, [1, 4], c206
defextern const vfuniforms[111], float, vector, [1, 4], c207
defextern const vfuniforms[112], float, vector, [1, 4], c208
defextern const vfuniforms[113], float, vector, [1, 4], c209
defextern const vfuniforms[114], float, vector, [1, 4], c210
defextern const vfuniforms[115], float, vector, [1, 4], c211
defextern const vfuniforms[116], float, vector, [1, 4], c212
defextern const vfuniforms[117], float, vector, [1, 4], c213
defextern const vfuniforms[118], float, vector, [1, 4], c214
defextern const vfuniforms[119], float, vector, [1, 4], c215
defextern const vfuniforms[120], float, vector, [1, 4], c216
defextern const vfuniforms[121], float, vector, [1, 4], c217
defextern const vfuniforms[122], float, vector, [1, 4], c218
defextern const vfuniforms[123], float, vector, [1, 4], c219
defextern const vfuniforms[124], float, vector, [1, 4], c220
defextern const vfuniforms[125], float, vector, [1, 4], c221
defextern const vfuniforms[126], float, vector, [1, 4], c222
defextern const vfuniforms[127], float, vector, [1, 4], c223
defextern const vfuniforms[128], float, vector, [1, 4], c224
defextern const vfuniforms[129], float, vector, [1, 4], c225
defextern const vfuniforms[130], float, vector, [1, 4], c226
defextern const vfuniforms[131], float, vector, [1, 4], c227
defextern const vfuniforms[132], float, vector, [1, 4], c228
defextern const vfuniforms[133], float, vector, [1, 4], c229
defextern const vfuniforms[134], float, vector, [1, 4], c230
defextern const vfuniforms[135], float, vector, [1, 4], c231
defextern const vfuniforms[136], float, vector, [1, 4], c232
defextern const vfuniforms[137], float, vector, [1, 4], c233
defextern const vfuniforms[138], float, vector, [1, 4], c234
defextern const vfuniforms[139], float, vector, [1, 4], c235
defextern const vfuniforms[140], float, vector, [1, 4], c236
defextern const vfuniforms[141], float, vector, [1, 4], c237
defextern const vfuniforms[142], float, vector, [1, 4], c238
defextern const vfuniforms[143], float, vector, [1, 4], c239
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4

def c252, 0, 0, 0, 0
def c253, 255.009995, 1530.05994, 4, 0
def c254, 5.0999999, 1.10000002, 0.100000001, 0
def c255, 0.100000001, 2.0999999, 3.0999999, 4.0999999


    exec
    vfetch r1, r0.x, color
    vfetch r2, r0.x, position
    alloc position
    exec
    mul r0.xw, r1.z, c253.xy
    add r3, r0.xw, c255
    sgt r5, -r3.xwyz, c254.w
    frc r3, r3.xwyz
    sgt r4, r3.xwyz, c254.w
    mad r3, r5, r4.xzwy, -r3
    exec
    add r3, r3.xwyz, r0.xw
    add r3, r3.xwyz, c255
    mulsc r4.x, c253.z, r3.x
    add r0.xyz, r0.w, c254.xyz
  + movas r0._, r4.x
    dp4 oPos.x, r2.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    exec
    dp4 oPos.z, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    frc r4.xy, r0.xy
  + sgts r5.x, -r0.x
    sgt r5.zw, r4.xxxy, c254.w
  + sgts r5.y, -r0.y
    mad r4.xy, r5.xw, r5.zy, -r4.xy
    movas r0._, r3.y
    dp4 o2.x, r2.wzxy, c[96+a0].wzxy
    add r4.xy, r4.xy, r0.w
  + movas r0._, r3.z
    exec
    dp4 o2.y, r2.wzxy, c[96+a0].wzxy
    add r0.xy, r4.xy, c254.xy
  + movas r0._, r3.w
    dp4 o3.x, r2.wzxy, c[96+a0].wzxy
    trunc r0.z, r0.z
  + movas r0._, r0.x
    dp4 o3.y, r2.wzxy, c[96+a0].wzxy
    movas r0._, r0.z
    exece
    mov o0, c[96+a0]
    movas r0._, r0.y
    mov o4, r1
    mov o1, c[96+a0]

// PDB hint 4e4a0000-ec3dc9c4-7266dfef

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGTexTGCxform[] =
{
    0x102a1101, 0x000001c0, 0x00000208, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000076, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47546578, 
    0x54474378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020060, 0x00900000, 0x0000006c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00900000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001c8, 
    0x00410005, 0x00000000, 0x00000000, 0x000040a5, 0x00000001, 0x00000002, 
    0x00000007, 0x00000290, 0x0010a005, 0x00200006, 0x0000f050, 0x0001f151, 
    0x00023252, 0x00043353, 0x0006f4a0, 0x00001021, 0x00001024, 0x00000019, 
    0x0000101b, 0x0000001d, 0x0000101f, 0x00001023, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x437f028f, 0x44bf41eb, 0x40800000, 0x00000000, 
    0x40a33333, 0x3f8ccccd, 0x3dcccccd, 0x00000000, 0x3dcccccd, 0x40066666, 
    0x40466666, 0x40833333, 0x30052005, 0x00001200, 0xc2000000, 0x00006007, 
    0x600d1200, 0x12000000, 0x00002013, 0x00001200, 0xc4000000, 0x00006015, 
    0x601b1200, 0x12000000, 0x00004021, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0xc8090000, 
    0x00c6b000, 0xa101fd00, 0xc80f0003, 0x00180000, 0xa000ff00, 0xc80f0005, 
    0x04f81b00, 0xa503fe00, 0xc80f0003, 0x00f80000, 0xe8030000, 0xc80f0004, 
    0x00f81b00, 0xa503fe00, 0xc80f0003, 0x01009400, 0xeb050403, 0xc80f0003, 
    0x00f81800, 0xe0030000, 0xc80f0003, 0x00f80000, 0xa003ff00, 0xac100400, 
    0x000000c0, 0xe20000fd, 0x5c070000, 0x001bc06c, 0xa000fe04, 0xc801803e, 
    0xa0a7a700, 0xaf020000, 0xc802803e, 0xa0a7a700, 0xaf020100, 0xc804803e, 
    0xa0a7a700, 0xaf020200, 0xc808803e, 0xa0a7a700, 0xaf020300, 0x20130504, 
    0x01b0006c, 0xe8000000, 0x202c0505, 0x01ac1bb1, 0xa504fe00, 0xc8030004, 
    0x0118b2b0, 0xeb050504, 0x5c000000, 0x000000b1, 0xe2000003, 0xc8018002, 
    0xa0a7a700, 0xaf026000, 0x5c030004, 0x00b01bc6, 0xe0040003, 0xc8028002, 
    0xa0a7a700, 0xaf026000, 0x5c030000, 0x00b0b01b, 0xa004fe03, 0xc8018003, 
    0xa0a7a700, 0xaf026000, 0x5c040000, 0x00c6006c, 0xe9000000, 0xc8028003, 
    0xa0a7a700, 0xaf026000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8000, 
    0xe0000000, 0x22606000, 0x5c000000, 0x000000b1, 0xe2000000, 0xc80f8004, 
    0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22606000, 0x4e4a0000, 
    0xec3dc9c4, 0x7266dfef
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGVertex.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 255.009995, 510.019989, 0.100000001, 1.10000002


    exec
    vfetch r3, r0.x, color
    vfetch r2, r0.x, color1
    vfetch r1, r0.x, position
    alloc position
    exec
    mul r0.xy, r2.z, c255.xy
    add r4.xyz, r0.xy, c255.zzw
    sgt r5.xyz, -r4.xyz, c254.y
    frc r4.xyz, r4.xyz
    sgt r6.xyz, r4.xyz, c254.y
    mul r5.x, r5.x, r6.x
    exec
    mul r5.yz, r6.yyz, r5.yyz
    add r4.xyz, r5.xzy, -r4.xzy
  + adds r0.z, r0.xx
    add r0.xyz, r4.xzy, r0.xz
    add r0.xyz, r0.yxz, c255.zzw
    mulsc r0.w, c254.x, r0.y
    movas r0._, r0.w
    exec
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.x
    dp4 o0.x, r1.wzxy, c[96+a0].wzxy
    movas r0._, r0.z
    mov o1, r3
    mov o2, r2
    dp4 o0.y, r1.wzxy, c[96+a0].wzxy

// PDB hint 4e4a0000-49d705ed-77a30342

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGVertex[] =
{
    0x102a1101, 0x000001ac, 0x000001a8, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47566572, 
    0x7465782e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020060, 0x00300000, 0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000168, 0x00210006, 
    0x00000000, 0x00000000, 0x00002863, 0x00000001, 0x00000003, 0x00000004, 
    0x00000290, 0x0010a004, 0x0001a005, 0x00200006, 0x00003050, 0x0002f1a0, 
    0x0003f2a1, 0x00000018, 0x0000101c, 0x0000101a, 0x0000101b, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x40800000, 0x00000000, 0x00000000, 0x00000000, 0x437f028f, 
    0x43ff028f, 0x3dcccccd, 0x3f8ccccd, 0x70153004, 0x00001200, 0xc2000000, 
    0x00006007, 0x600d1200, 0x12000000, 0x00004013, 0x00001200, 0xc4000000, 
    0x00006017, 0x00002200, 0x00000000, 0x05f83000, 0x00000688, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0xc8030000, 0x00c6b000, 0xa102ff00, 0xc8070004, 0x00b01600, 0xa000ff00, 
    0xc8070005, 0x04c0b100, 0xa504fe00, 0xc8070004, 0x00c00000, 0xe8040000, 
    0xc8070006, 0x00c0b100, 0xa504fe00, 0xc8010005, 0x006c6c00, 0xe1050600, 
    0xc8060005, 0x00c1c100, 0xe1060500, 0x00470004, 0x02b4b46c, 0xe0050400, 
    0xc8070000, 0x00b4c400, 0xe0040000, 0xc8070000, 0x00cd1600, 0xa000ff00, 
    0xa8800000, 0x00000041, 0xc20000fe, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc801803e, 0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 
    0xc804803e, 0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf016000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8001, 0x00000000, 0xe2030300, 
    0xc80f8002, 0x00000000, 0xe2020200, 0xc8028000, 0xa0a7a700, 0xaf016000, 
    0x4e4a0000, 0x49d705ed, 0x77a30342
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGVertexCxform.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
defextern const vfuniforms[48], float, vector, [1, 4], c144
defextern const vfuniforms[49], float, vector, [1, 4], c145
defextern const vfuniforms[50], float, vector, [1, 4], c146
defextern const vfuniforms[51], float, vector, [1, 4], c147
defextern const vfuniforms[52], float, vector, [1, 4], c148
defextern const vfuniforms[53], float, vector, [1, 4], c149
defextern const vfuniforms[54], float, vector, [1, 4], c150
defextern const vfuniforms[55], float, vector, [1, 4], c151
defextern const vfuniforms[56], float, vector, [1, 4], c152
defextern const vfuniforms[57], float, vector, [1, 4], c153
defextern const vfuniforms[58], float, vector, [1, 4], c154
defextern const vfuniforms[59], float, vector, [1, 4], c155
defextern const vfuniforms[60], float, vector, [1, 4], c156
defextern const vfuniforms[61], float, vector, [1, 4], c157
defextern const vfuniforms[62], float, vector, [1, 4], c158
defextern const vfuniforms[63], float, vector, [1, 4], c159
defextern const vfuniforms[64], float, vector, [1, 4], c160
defextern const vfuniforms[65], float, vector, [1, 4], c161
defextern const vfuniforms[66], float, vector, [1, 4], c162
defextern const vfuniforms[67], float, vector, [1, 4], c163
defextern const vfuniforms[68], float, vector, [1, 4], c164
defextern const vfuniforms[69], float, vector, [1, 4], c165
defextern const vfuniforms[70], float, vector, [1, 4], c166
defextern const vfuniforms[71], float, vector, [1, 4], c167
defextern const vfuniforms[72], float, vector, [1, 4], c168
defextern const vfuniforms[73], float, vector, [1, 4], c169
defextern const vfuniforms[74], float, vector, [1, 4], c170
defextern const vfuniforms[75], float, vector, [1, 4], c171
defextern const vfuniforms[76], float, vector, [1, 4], c172
defextern const vfuniforms[77], float, vector, [1, 4], c173
defextern const vfuniforms[78], float, vector, [1, 4], c174
defextern const vfuniforms[79], float, vector, [1, 4], c175
defextern const vfuniforms[80], float, vector, [1, 4], c176
defextern const vfuniforms[81], float, vector, [1, 4], c177
defextern const vfuniforms[82], float, vector, [1, 4], c178
defextern const vfuniforms[83], float, vector, [1, 4], c179
defextern const vfuniforms[84], float, vector, [1, 4], c180
defextern const vfuniforms[85], float, vector, [1, 4], c181
defextern const vfuniforms[86], float, vector, [1, 4], c182
defextern const vfuniforms[87], float, vector, [1, 4], c183
defextern const vfuniforms[88], float, vector, [1, 4], c184
defextern const vfuniforms[89], float, vector, [1, 4], c185
defextern const vfuniforms[90], float, vector, [1, 4], c186
defextern const vfuniforms[91], float, vector, [1, 4], c187
defextern const vfuniforms[92], float, vector, [1, 4], c188
defextern const vfuniforms[93], float, vector, [1, 4], c189
defextern const vfuniforms[94], float, vector, [1, 4], c190
defextern const vfuniforms[95], float, vector, [1, 4], c191
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 255.009995, 1020.03998, 0, 4
def c255, 0.100000001, 3.0999999, 1.10000002, 2.0999999


    exec
    vfetch r2, r0.x, color
    vfetch r1, r0.x, color1
    vfetch r4, r0.x, position
    alloc position
    exec
    mul r3.xy, r1.z, c254.xy
    add r0, r3.xy, c255.xwyz
    sgt r6, -r0, c254.z
    frc r0, r0
    sgt r5, r0, c254.z
    mul r5.w, r5.w, r6.w
    exec
    mul r5.xyz, r6.xyz, r5.xyz
    add r0, r5, -r0
    add r0, r0.xwyz, r3.xy
    add r0, r0.xwyz, c255
    mulsc r3.z, c254.w, r0.x
    movas r0._, r3.z
    exec
    dp4 oPos.x, r4.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r4.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r4.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r4.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    add r3.x, r3.y, c255.x
  + movas r0._, r0.w
    dp4 o2.x, r4.wzxy, c[96+a0].wzxy
    trunc r3.x, r3.x
  + movas r0._, r0.y
    dp4 o2.y, r4.wzxy, c[96+a0].wzxy
    movas r0._, r3.x
    mov o0, c[96+a0]
    exece
    movas r0._, r0.z
    mov o3, r2
    mov o4, r1
    mov o1, c[96+a0]

// PDB hint 4e4a0000-e16a6c27-cd8c782d

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTexTGVertexCxform[] =
{
    0x102a1101, 0x000001c0, 0x000001d8, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000077, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657854, 0x47566572, 
    0x74657843, 0x78666f72, 0x6d2e686c, 0x736c2e75, 0x70646200, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020060, 0x00600000, 0x0000006c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000198, 
    0x00410006, 0x00000000, 0x00000000, 0x000048a5, 0x00000001, 0x00000003, 
    0x00000006, 0x00000290, 0x0010a004, 0x0001a005, 0x00200006, 0x0000f050, 
    0x0001f151, 0x00023252, 0x0004f3a0, 0x0005f4a1, 0x0000101c, 0x00001020, 
    0x00000018, 0x0000101a, 0x0000101e, 0x0000101f, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x437f028f, 0x447f028f, 0x00000000, 0x40800000, 0x3dcccccd, 0x40466666, 
    0x3f8ccccd, 0x40066666, 0x70153004, 0x00001200, 0xc2000000, 0x00006007, 
    0x600d1200, 0x12000000, 0x00004013, 0x00001200, 0xc4000000, 0x00006017, 
    0x401d1200, 0x22000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f84000, 0x00000688, 0x00000000, 0xc8030003, 
    0x00c6b000, 0xa101fe00, 0xc80f0000, 0x00b0f800, 0xa003ff00, 0xc80f0006, 
    0x0400c600, 0xa500fe00, 0xc80f0000, 0x00000000, 0xe8000000, 0xc80f0005, 
    0x0000c600, 0xa500fe00, 0xc8080005, 0x001b1b00, 0xe1050600, 0xc8070005, 
    0x00c0c000, 0xe1060500, 0xc80f0000, 0x02000000, 0xe0050000, 0xc80f0000, 
    0x00f8b000, 0xe0000300, 0xc80f0000, 0x00f80000, 0xa000ff00, 0xa8400300, 
    0x00000000, 0xc20000fe, 0x5c000000, 0x000000c6, 0xe2000003, 0xc801803e, 
    0xa0a7a700, 0xaf040000, 0xc802803e, 0xa0a7a700, 0xaf040100, 0xc804803e, 
    0xa0a7a700, 0xaf040200, 0xc808803e, 0xa0a7a700, 0xaf040300, 0x5c010003, 
    0x00b16c1b, 0xa003ff00, 0xc8018002, 0xa0a7a700, 0xaf046000, 0x5c010003, 
    0x006c00b1, 0xe9030000, 0xc8028002, 0xa0a7a700, 0xaf046000, 0x5c000000, 
    0x0000006c, 0xe2000003, 0xc80f8000, 0xe0000000, 0x22606000, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc80f8003, 0x00000000, 0xe2020200, 0xc80f8004, 
    0x00000000, 0xe2010100, 0xc80f8001, 0xe0000000, 0x22606000, 0x4e4a0000, 
    0xe16a6c27, 0xcd8c782d
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTG.hlsl.h /Vn
//    pBinary_X360_VInstancedTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTG.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 1.10000002, 2


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.w, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r3.x, r0.y, r1.x, r1.z
    add r2, r0.zyyz, c255.wxyz
    cndeq r1.x, r2.z, r1.w, r3.x
    cndeq r1.x, r2.y, r1.y, r1.x
    exec
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.yz, r2.xxw, c254.zzw
  + movas r0._, r0.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    frc r3.xy, r2.yz
    sgt r3.zw, r3.xxxy, c254.w
  + sgts r4.x, -r2.y
    add r3.xy, -r3.xy, c255.z
  + sgts r4.y, -r2.z
    mad r3.xy, r4.xy, r3.zw, r3.xy
    exec
    add r2.y, r3.y, r0.z
    add r2.x, r3.x, r2.x
  + movas r0._, r2.y
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    dp4 o0.x, r1.wzxy, c[3+a0].wzxy
    movas r0._, r2.x
    dp4 o0.y, r1.wzxy, c[1+a0].wzxy

// PDB hint 4e4a0000-58610650-e3b35726

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTG[] =
{
    0x102a1101, 0x0000018c, 0x00000250, 0x00000024, 0x00000094, 0x00000128, 
    0x00000150, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x7854472e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 
    0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 0x00010000, 
    0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00600000, 0x0000006c, 
    0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000210, 0x00000004, 0x00000000, 0x00000000, 0x00000821, 
    0x00000001, 0x00000002, 0x00000002, 0x00000290, 0x0007a012, 0x0000001d, 
    0x00003050, 0x00000028, 0x0000102a, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x40800000, 0x3f8ccccd, 0x00000000, 0xc0400000, 0xc0000000, 0x3f8ccccd, 
    0x40000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 
    0x12000000, 0x1001101d, 0x00001200, 0xc2000000, 0x0000601e, 0x30241200, 
    0x12000000, 0x00000000, 0x4027c400, 0x22000000, 0x14020000, 0x001b6c6c, 
    0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 
    0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 
    0xe1000000, 0xc8060002, 0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 
    0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37100, 
    0xa102fe00, 0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 0x01000000, 
    0xc20000ff, 0x4c200000, 0x0000006c, 0xe2000002, 0xc8020000, 0x00c6b100, 
    0xe1020000, 0x2c200000, 0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 
    0xe1020000, 0x30200000, 0x000000b1, 0xe2000000, 0xc8010003, 0x00b16cc6, 
    0xec000101, 0xc80f0002, 0x00f2ff00, 0xa000ff00, 0xc8010001, 0x00c61b6c, 
    0xec020103, 0xc8010001, 0x00b1b16c, 0xec020101, 0x05f81020, 0x00000688, 
    0x00000000, 0x5c060002, 0x001c16c6, 0xa002fe00, 0xc889c03e, 0xa0a7a700, 
    0xaf010100, 0xc8030003, 0x00c50000, 0xe8020000, 0x201c0403, 0x01ac1bb1, 
    0xa503fe02, 0x20230403, 0x05b0c6c6, 0xa003ff02, 0xc8030003, 0x00b01ab0, 
    0xeb040303, 0xc8020002, 0x00b1c600, 0xe0030000, 0x5c010002, 0x006c6cb1, 
    0xe0030202, 0xc802803e, 0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000c6, 
    0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf010300, 0x5c000000, 0x0000006c, 
    0xe2000002, 0xc8028000, 0xa0a7a700, 0xaf010100, 0x4e4a0000, 0x58610650, 
    0xe3b35726
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGEAlpha.hlsl.h /Vn
//    pBinary_X360_VInstancedTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 1.10000002, 2


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.w, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r3, r0.zyyz, c255.wxyz
    cndeq r1.x, r3.z, r1.w, r2.x
    cndeq r1.x, r3.y, r1.y, r1.x
    exec
    vfetch r2, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r3.yz, r3.xxw, c254.zzw
  + movas r0._, r0.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    frc r4.xy, r3.yz
    sgt r4.zw, r4.xxxy, c254.w
  + sgts r5.x, -r3.y
    add r4.xy, -r4.xy, c255.z
  + sgts r5.y, -r3.z
    mad r4.xy, r5.xy, r4.zw, r4.xy
    exec
    add r3.y, r4.y, r0.z
    add r3.x, r4.x, r3.x
  + movas r0._, r3.y
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    dp4 o0.x, r1.wzxy, c[3+a0].wzxy
    movas r0._, r3.x
    mov o1, r2
    dp4 o0.y, r1.wzxy, c[1+a0].wzxy

// PDB hint 4e4a0000-f6db0091-e304d870

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGEAlpha[] =
{
    0x102a1101, 0x0000019c, 0x00000268, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544745, 0x416c7068, 0x612e686c, 
    0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00600000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000228, 0x00100005, 0x00000000, 0x00000000, 
    0x00001842, 0x00000001, 0x00000003, 0x00000003, 0x00000290, 0x0007a012, 
    0x0010a01d, 0x0030001e, 0x00003050, 0x0002f1a0, 0x00000029, 0x0000102c, 
    0x0000102b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 
    0x00000000, 0xc0400000, 0xc0000000, 0x3f8ccccd, 0x40000000, 0x00006005, 
    0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x3005201d, 
    0x00001200, 0xc2000000, 0x0000601f, 0x30251200, 0x12000000, 0x00000000, 
    0x5028c400, 0x22000000, 0x14020000, 0x001b6c6c, 0x2000fe00, 0x04410000, 
    0x00b1006c, 0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 0x2c400000, 
    0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 0xc8060002, 
    0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 0xc8080002, 
    0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37100, 0xa102fe00, 0xc5f81000, 
    0x00000458, 0x00000000, 0xb8100200, 0x01000000, 0xc20000ff, 0x4c200000, 
    0x0000006c, 0xe2000002, 0xc8020000, 0x00c6b100, 0xe1020000, 0x2c200000, 
    0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 0xe1020000, 0x30200000, 
    0x000000b1, 0xe2000000, 0xc8010002, 0x00b16cc6, 0xec000101, 0xc80f0003, 
    0x00f2ff00, 0xa000ff00, 0xc8010001, 0x00c61b6c, 0xec030102, 0xc8010001, 
    0x00b1b16c, 0xec030101, 0x05f82020, 0x00000688, 0x00000000, 0x05f81020, 
    0x00000688, 0x00000000, 0x5c060003, 0x001c16c6, 0xa003fe00, 0xc889c03e, 
    0xa0a7a700, 0xaf010100, 0xc8030004, 0x00c50000, 0xe8030000, 0x201c0504, 
    0x01ac1bb1, 0xa504fe03, 0x20230504, 0x05b0c6c6, 0xa004ff03, 0xc8030004, 
    0x00b01ab0, 0xeb050404, 0xc8020003, 0x00b1c600, 0xe0040000, 0x5c010003, 
    0x006c6cb1, 0xe0040303, 0xc802803e, 0xa0a7a700, 0xaf010100, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf010300, 0x5c000000, 
    0x0000006c, 0xe2000003, 0xc80f8001, 0x00000000, 0xe2020200, 0xc8028000, 
    0xa0a7a700, 0xaf010100, 0x4e4a0000, 0xf6db0091, 0xe304d870
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGCxform.hlsl.h /Vn
//    pBinary_X360_VInstancedTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1     144
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
defextern const vfuniforms[96], float, vector, [1, 4], c97
defextern const vfuniforms[97], float, vector, [1, 4], c98
defextern const vfuniforms[98], float, vector, [1, 4], c99
defextern const vfuniforms[99], float, vector, [1, 4], c100
defextern const vfuniforms[100], float, vector, [1, 4], c101
defextern const vfuniforms[101], float, vector, [1, 4], c102
defextern const vfuniforms[102], float, vector, [1, 4], c103
defextern const vfuniforms[103], float, vector, [1, 4], c104
defextern const vfuniforms[104], float, vector, [1, 4], c105
defextern const vfuniforms[105], float, vector, [1, 4], c106
defextern const vfuniforms[106], float, vector, [1, 4], c107
defextern const vfuniforms[107], float, vector, [1, 4], c108
defextern const vfuniforms[108], float, vector, [1, 4], c109
defextern const vfuniforms[109], float, vector, [1, 4], c110
defextern const vfuniforms[110], float, vector, [1, 4], c111
defextern const vfuniforms[111], float, vector, [1, 4], c112
defextern const vfuniforms[112], float, vector, [1, 4], c113
defextern const vfuniforms[113], float, vector, [1, 4], c114
defextern const vfuniforms[114], float, vector, [1, 4], c115
defextern const vfuniforms[115], float, vector, [1, 4], c116
defextern const vfuniforms[116], float, vector, [1, 4], c117
defextern const vfuniforms[117], float, vector, [1, 4], c118
defextern const vfuniforms[118], float, vector, [1, 4], c119
defextern const vfuniforms[119], float, vector, [1, 4], c120
defextern const vfuniforms[120], float, vector, [1, 4], c121
defextern const vfuniforms[121], float, vector, [1, 4], c122
defextern const vfuniforms[122], float, vector, [1, 4], c123
defextern const vfuniforms[123], float, vector, [1, 4], c124
defextern const vfuniforms[124], float, vector, [1, 4], c125
defextern const vfuniforms[125], float, vector, [1, 4], c126
defextern const vfuniforms[126], float, vector, [1, 4], c127
defextern const vfuniforms[127], float, vector, [1, 4], c128
defextern const vfuniforms[128], float, vector, [1, 4], c129
defextern const vfuniforms[129], float, vector, [1, 4], c130
defextern const vfuniforms[130], float, vector, [1, 4], c131
defextern const vfuniforms[131], float, vector, [1, 4], c132
defextern const vfuniforms[132], float, vector, [1, 4], c133
defextern const vfuniforms[133], float, vector, [1, 4], c134
defextern const vfuniforms[134], float, vector, [1, 4], c135
defextern const vfuniforms[135], float, vector, [1, 4], c136
defextern const vfuniforms[136], float, vector, [1, 4], c137
defextern const vfuniforms[137], float, vector, [1, 4], c138
defextern const vfuniforms[138], float, vector, [1, 4], c139
defextern const vfuniforms[139], float, vector, [1, 4], c140
defextern const vfuniforms[140], float, vector, [1, 4], c141
defextern const vfuniforms[141], float, vector, [1, 4], c142
defextern const vfuniforms[142], float, vector, [1, 4], c143
defextern const vfuniforms[143], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 6, 4, 0.5, 0
def c254, 2, 4, -3, -2
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c253.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.ywz, c253.xyz
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c254.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.z, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r3.x, r0.z, r1.x, r1.z
    add r2, r0.xxz, c254
    cndeq r1.x, r2.w, r1.w, r3.x
    cndeq r1.x, r2.z, r1.y, r1.x
    exec
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.zw, r2.xxxy, c255.x
  + movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[3+a0].wzxy
    frc r3.xy, r2.zw
    sgt r3.zw, r3.xxxy, c253.w
  + sgts r4.x, -r2.z
    add r3.xy, -r3.xy, c255.x
  + sgts r4.y, -r2.w
    mad r3.xy, r4.xy, r3.zw, r3.xy
    exec
    add r2.xy, r3.xy, r2.xy
    movas r0._, r2.x
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r2.y
    dp4 o2.y, r1.wzxy, c[1+a0].wzxy
    movas r0._, r0.x
    dp4 o2.x, r1.wzxy, c[5+a0].wzxy
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-4eb0a557-cf8f56ed

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGCxform[] =
{
    0x102a1101, 0x000001a0, 0x00000268, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544743, 0x78666f72, 0x6d2e686c, 
    0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00900000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00900000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000228, 0x00200004, 0x00000000, 0x00000000, 
    0x00002863, 0x00000001, 0x00000002, 0x00000004, 0x00000290, 0x0007a012, 
    0x0000001d, 0x0000f050, 0x0001f151, 0x00023252, 0x0000102b, 0x0000102c, 
    0x00000028, 0x0000102a, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x40c00000, 0x40800000, 0x3f000000, 0x00000000, 0x40000000, 0x40800000, 
    0xc0400000, 0xc0000000, 0x3f8ccccd, 0x00000000, 0x00000000, 0x00000000, 
    0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 
    0x1001101d, 0x00001200, 0xc2000000, 0x0000601e, 0x30241200, 0x12000000, 
    0x00000000, 0x6027c400, 0x22000000, 0x14020000, 0x001bc66c, 0x2000fd00, 
    0x04410000, 0x00b100c6, 0xc90000fd, 0x00120100, 0x00c66c6c, 0xe1000000, 
    0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 
    0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 
    0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 
    0xc8060002, 0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 
    0xc8080002, 0x026c6c00, 0xe6000000, 0xc80b0000, 0x00c9c000, 0xa102fd00, 
    0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 0x01000041, 0xc20000fe, 
    0x4c400000, 0x0000006c, 0xe2000002, 0xc8040000, 0x00c6c600, 0xe1020000, 
    0x2c400000, 0x000000c6, 0xe2000000, 0xc8040000, 0x006cc600, 0xe1020000, 
    0x30400000, 0x000000c6, 0xe2000000, 0xc8010003, 0x00c66cc6, 0xec000101, 
    0xc80f0002, 0x00cc0000, 0xa000fe00, 0xc8010001, 0x001b1b6c, 0xec020103, 
    0xc8010001, 0x00c6b16c, 0xec020101, 0x05f81020, 0x00000688, 0x00000000, 
    0x5c0c0002, 0x00ac6c6c, 0xa002ff00, 0xc889c03e, 0xa0a7a700, 0xaf010300, 
    0xc8030003, 0x001a0000, 0xe8020000, 0x201c0403, 0x01ac1bc6, 0xa503fd02, 
    0x20230403, 0x05b06c1b, 0xa003ff02, 0xc8030003, 0x00b01ab0, 0xeb040303, 
    0xc8030002, 0x00b0b000, 0xe0030200, 0x5c000000, 0x0000006c, 0xe2000002, 
    0xc802803e, 0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000b1, 0xe2000002, 
    0xc8028002, 0xa0a7a700, 0xaf010100, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc8018002, 0xa0a7a700, 0xaf010500, 0xc80f8000, 0xe0000000, 0x22010100, 
    0xc80f8001, 0xe0000000, 0x22020200, 0x4e4a0000, 0x4eb0a557, 0xcf8f56ed
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1     144
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
defextern const vfuniforms[96], float, vector, [1, 4], c97
defextern const vfuniforms[97], float, vector, [1, 4], c98
defextern const vfuniforms[98], float, vector, [1, 4], c99
defextern const vfuniforms[99], float, vector, [1, 4], c100
defextern const vfuniforms[100], float, vector, [1, 4], c101
defextern const vfuniforms[101], float, vector, [1, 4], c102
defextern const vfuniforms[102], float, vector, [1, 4], c103
defextern const vfuniforms[103], float, vector, [1, 4], c104
defextern const vfuniforms[104], float, vector, [1, 4], c105
defextern const vfuniforms[105], float, vector, [1, 4], c106
defextern const vfuniforms[106], float, vector, [1, 4], c107
defextern const vfuniforms[107], float, vector, [1, 4], c108
defextern const vfuniforms[108], float, vector, [1, 4], c109
defextern const vfuniforms[109], float, vector, [1, 4], c110
defextern const vfuniforms[110], float, vector, [1, 4], c111
defextern const vfuniforms[111], float, vector, [1, 4], c112
defextern const vfuniforms[112], float, vector, [1, 4], c113
defextern const vfuniforms[113], float, vector, [1, 4], c114
defextern const vfuniforms[114], float, vector, [1, 4], c115
defextern const vfuniforms[115], float, vector, [1, 4], c116
defextern const vfuniforms[116], float, vector, [1, 4], c117
defextern const vfuniforms[117], float, vector, [1, 4], c118
defextern const vfuniforms[118], float, vector, [1, 4], c119
defextern const vfuniforms[119], float, vector, [1, 4], c120
defextern const vfuniforms[120], float, vector, [1, 4], c121
defextern const vfuniforms[121], float, vector, [1, 4], c122
defextern const vfuniforms[122], float, vector, [1, 4], c123
defextern const vfuniforms[123], float, vector, [1, 4], c124
defextern const vfuniforms[124], float, vector, [1, 4], c125
defextern const vfuniforms[125], float, vector, [1, 4], c126
defextern const vfuniforms[126], float, vector, [1, 4], c127
defextern const vfuniforms[127], float, vector, [1, 4], c128
defextern const vfuniforms[128], float, vector, [1, 4], c129
defextern const vfuniforms[129], float, vector, [1, 4], c130
defextern const vfuniforms[130], float, vector, [1, 4], c131
defextern const vfuniforms[131], float, vector, [1, 4], c132
defextern const vfuniforms[132], float, vector, [1, 4], c133
defextern const vfuniforms[133], float, vector, [1, 4], c134
defextern const vfuniforms[134], float, vector, [1, 4], c135
defextern const vfuniforms[135], float, vector, [1, 4], c136
defextern const vfuniforms[136], float, vector, [1, 4], c137
defextern const vfuniforms[137], float, vector, [1, 4], c138
defextern const vfuniforms[138], float, vector, [1, 4], c139
defextern const vfuniforms[139], float, vector, [1, 4], c140
defextern const vfuniforms[140], float, vector, [1, 4], c141
defextern const vfuniforms[141], float, vector, [1, 4], c142
defextern const vfuniforms[142], float, vector, [1, 4], c143
defextern const vfuniforms[143], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 6, 4, 0.5, 0
def c254, 2, 4, -3, -2
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c253.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.ywz, c253.xyz
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c254.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.z, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r2.x, r0.z, r1.x, r1.z
    add r3, r0.xxz, c254
    cndeq r1.x, r3.w, r1.w, r2.x
    cndeq r1.x, r3.z, r1.y, r1.x
    exec
    vfetch r2, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r3.zw, r3.xxxy, c255.x
  + movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[3+a0].wzxy
    frc r4.xy, r3.zw
    sgt r4.zw, r4.xxxy, c253.w
  + sgts r5.x, -r3.z
    add r4.xy, -r4.xy, c255.x
  + sgts r5.y, -r3.w
    mad r4.xy, r5.xy, r4.zw, r4.xy
    exec
    add r3.xy, r4.xy, r3.xy
    movas r0._, r3.x
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r3.y
    dp4 o2.y, r1.wzxy, c[1+a0].wzxy
    movas r0._, r0.x
    mov o3, r2
    dp4 o2.x, r1.wzxy, c[5+a0].wzxy
    mov o0, c[1+a0]
    exece
    mov o1, c[2+a0]

// PDB hint 4e4a0000-1c07c857-ce9beb32

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGCxformEAlpha[] =
{
    0x102a1101, 0x000001b4, 0x0000028c, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544743, 0x78666f72, 0x6d45416c, 
    0x7068612e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020001, 0x00900000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00900000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x0000024c, 0x00300005, 
    0x00000000, 0x00000000, 0x00003884, 0x00000001, 0x00000003, 0x00000005, 
    0x00000290, 0x0007a013, 0x0010a01e, 0x0030001f, 0x0000f050, 0x0001f151, 
    0x00023252, 0x0004f3a0, 0x0000102e, 0x0000102f, 0x0000002a, 0x0000102d, 
    0x0000102c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40c00000, 
    0x40800000, 0x3f000000, 0x00000000, 0x40000000, 0x40800000, 0xc0400000, 
    0xc0000000, 0x3f8ccccd, 0x00000000, 0x00000000, 0x00000000, 0x00006006, 
    0x600c1200, 0x12000000, 0x20246012, 0x60181200, 0x12000000, 0x3005201e, 
    0x00001200, 0xc2000000, 0x00006020, 0x30261200, 0x12000000, 0x00000000, 
    0x6029c400, 0x12000000, 0x0000102f, 0x00002200, 0x00000000, 0x14020000, 
    0x001bc66c, 0x2000fd00, 0x04410000, 0x00b100c6, 0xc90000fd, 0x00120100, 
    0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 
    0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 
    0x00c6b000, 0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 
    0x001bc600, 0xe1000000, 0xc8060002, 0x00c10000, 0xe9000000, 0x00100000, 
    0x000000c6, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 0xc80b0000, 
    0x00c9c000, 0xa102fd00, 0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 
    0x01000041, 0xc20000fe, 0x4c400000, 0x0000006c, 0xe2000002, 0xc8040000, 
    0x00c6c600, 0xe1020000, 0x2c400000, 0x000000c6, 0xe2000000, 0xc8040000, 
    0x006cc600, 0xe1020000, 0x30400000, 0x000000c6, 0xe2000000, 0xc8010002, 
    0x00c66cc6, 0xec000101, 0xc80f0003, 0x00cc0000, 0xa000fe00, 0xc8010001, 
    0x001b1b6c, 0xec030102, 0xc8010001, 0x00c6b16c, 0xec030101, 0x05f82020, 
    0x00000688, 0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c0c0003, 
    0x00ac6c6c, 0xa003ff00, 0xc889c03e, 0xa0a7a700, 0xaf010300, 0xc8030004, 
    0x001a0000, 0xe8030000, 0x201c0504, 0x01ac1bc6, 0xa504fd03, 0x20230504, 
    0x05b06c1b, 0xa004ff03, 0xc8030004, 0x00b01ab0, 0xeb050404, 0xc8030003, 
    0x00b0b000, 0xe0040300, 0x5c000000, 0x0000006c, 0xe2000003, 0xc802803e, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000b1, 0xe2000003, 0xc8028002, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8003, 
    0x00000000, 0xe2020200, 0xc8018002, 0xa0a7a700, 0xaf010500, 0xc80f8000, 
    0xe0000000, 0x22010100, 0xc80f8001, 0xe0000000, 0x22020200, 0x4e4a0000, 
    0x1c07c857, 0xce9beb32
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertex.hlsl.h /Vn
//    pBinary_X360_VInstancedVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertex.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3

dcl_index r0.x
dcl_color o0

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 2, 0
def c255, -3, -2, 1.10000002, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r2.yz, r3.xxy, r3.xxy
    sge r3.z, r2.y, -r2.y
    exec
    mul r0.xy, r3.zx, c254.yx
    vfetch r1, r0.y, color7
    serialize
    subsc r0.y, -c254.z, -r0.x
    rcp r0.x, r0.y
    mul r0.x, r3.x, r0.x
    frcs r0.x, r0.x
    exec
    mul r0.x, r0.y, r0.x
    truncs r2.x, r0.x
    cndeq r0.x, r2.x, r1.x, r1.y
    add r3.xyz, r2.xzx, c255.xzy
    cndeq r0.x, r3.z, r1.z, r0.x
    cndeq r1.x, r3.x, r1.w, r0.x
    exec
    vfetch r0, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    movas r0._, r2.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    frc r3.x, r3.y
  + sgts r3.y, -r3.y
    add r2.w, -r3.x, c255.z
  + sgts r3.x, r3.x
    mad r2.w, r3.y, r3.x, r2.w
    add r2.x, r2.w, r2.z
    exec
    movas r0._, r2.x
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    mov o0, r0

// PDB hint 4e4a0000-5043d94c-c8e7248c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedVertex[] =
{
    0x102a1101, 0x0000018c, 0x0000022c, 0x00000024, 0x00000094, 0x00000128, 
    0x00000150, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645665, 0x72746578, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 
    0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 0x00010000, 
    0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00300000, 0x0000006c, 
    0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001ec, 0x00000003, 0x00000000, 0x00000000, 0x00001021, 
    0x00000001, 0x00000003, 0x00000001, 0x00000290, 0x0007a012, 0x0010a01d, 
    0x0030001e, 0x0000f0a0, 0x00001027, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x40800000, 0x40000000, 0x00000000, 0xc0400000, 0xc0000000, 0x3f8ccccd, 
    0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 
    0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 0x0000601f, 0x20251200, 
    0x12000000, 0x00000000, 0x1027c400, 0x22000000, 0x14020000, 0x001b1b6c, 
    0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 
    0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 
    0xe1000000, 0xc8030003, 0x00c40000, 0xe9000000, 0xc8060002, 0x00bcbc00, 
    0xe0030300, 0xc8040003, 0x02b1b100, 0xe6020200, 0xc8030000, 0x006e6d00, 
    0xa103fe00, 0x45f81000, 0x00000688, 0x00000000, 0xb8200000, 0x010000c0, 
    0xc20000fe, 0x4c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x006c6c00, 
    0xe1030000, 0x2c100000, 0x0000006c, 0xe2000000, 0xc8010000, 0x00b16c00, 
    0xe1000000, 0x30100200, 0x0000006c, 0xe2000000, 0xc8010000, 0x006c6cb1, 
    0xec020101, 0xc8070003, 0x0064b400, 0xa002ff00, 0xc8010000, 0x00c6c66c, 
    0xec030100, 0xc8010001, 0x006c1b6c, 0xec030100, 0x05f80020, 0x00000688, 
    0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c000000, 0x000000c6, 
    0xe2000002, 0xc889c03e, 0xa0a7a700, 0xaf010100, 0x20210303, 0x01b100b1, 
    0xe8030003, 0x20180302, 0x046cc66c, 0xa003ff03, 0xc8080002, 0x00b16c1b, 
    0xeb030302, 0xc8010002, 0x001bc600, 0xe0020200, 0x5c000000, 0x0000006c, 
    0xe2000002, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc80f8000, 0x00000000, 
    0xe2000000, 0x4e4a0000, 0x5043d94c, 0xc8e7248c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 2, 0
def c255, -3, -2, 1.10000002, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.xy, r0.xz
    add r3.yz, r2.xxy, r2.xxy
    sge r2.z, r3.y, -r3.y
    exec
    mul r0.xy, r2.zx, c254.yx
    vfetch r1, r0.y, color7
    serialize
    subsc r0.y, -c254.z, -r0.x
    rcp r0.x, r0.y
    mul r0.x, r2.x, r0.x
    frcs r0.x, r0.x
    exec
    mul r0.x, r0.y, r0.x
    truncs r3.x, r0.x
    cndeq r0.x, r3.x, r1.x, r1.y
    add r4.xyz, r3.xzx, c255.xzy
    cndeq r0.x, r4.z, r1.z, r0.x
    cndeq r2.x, r4.x, r1.w, r0.x
    exec
    vfetch r1, r2.x, color
    vfetch r0, r2.x, color1
    vfetch r2, r2.x, position
    alloc position
    exec
    movas r0._, r3.z
    dp4 oPos.x001, r2.wzxy, c[1+a0].wzxy
    frc r4.x, r4.y
  + sgts r4.y, -r4.y
    add r3.w, -r4.x, c255.z
  + sgts r4.x, r4.x
    mad r3.w, r4.y, r4.x, r3.w
    add r3.x, r3.w, r3.z
    exec
    movas r0._, r3.x
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    mov o0, r1
    mov o1, r0

// PDB hint 4e4a0000-ea7441a2-cfce3f33

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedVertexEAlpha[] =
{
    0x102a1101, 0x0000019c, 0x00000244, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645665, 0x72746578, 0x45416c70, 0x68612e68, 
    0x6c736c2e, 0x75706462, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00300000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000204, 0x00100004, 0x00000000, 0x00000000, 
    0x00002042, 0x00000001, 0x00000004, 0x00000002, 0x00000290, 0x0007a012, 
    0x0010a01d, 0x0001a01e, 0x0030001f, 0x0000f0a0, 0x0001f1a1, 0x00001028, 
    0x00001029, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0x40000000, 
    0x00000000, 0xc0400000, 0xc0000000, 0x3f8ccccd, 0x3f000000, 0x00006005, 
    0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x7015301d, 
    0x00001200, 0xc2000000, 0x00006020, 0x20261200, 0x12000000, 0x00000000, 
    0x2028c400, 0x22000000, 0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 
    0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 
    0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8030002, 
    0x00c40000, 0xe9000000, 0xc8060003, 0x00bcbc00, 0xe0020200, 0xc8040002, 
    0x02b1b100, 0xe6030300, 0xc8030000, 0x006e6d00, 0xa102fe00, 0x45f81000, 
    0x00000688, 0x00000000, 0xb8200000, 0x010000c0, 0xc20000fe, 0x4c100000, 
    0x000000b1, 0xe2000000, 0xc8010000, 0x006c6c00, 0xe1020000, 0x2c100000, 
    0x0000006c, 0xe2000000, 0xc8010000, 0x00b16c00, 0xe1000000, 0x30100300, 
    0x0000006c, 0xe2000000, 0xc8010000, 0x006c6cb1, 0xec030101, 0xc8070004, 
    0x0064b400, 0xa003ff00, 0xc8010000, 0x00c6c66c, 0xec040100, 0xc8010002, 
    0x006c1b6c, 0xec040100, 0x05f81040, 0x00000688, 0x00000000, 0x05f80040, 
    0x00000688, 0x00000000, 0x05f82040, 0x00000688, 0x00000000, 0x5c000000, 
    0x000000c6, 0xe2000003, 0xc889c03e, 0xa0a7a700, 0xaf020100, 0x20210404, 
    0x01b100b1, 0xe8040004, 0x20180403, 0x046cc66c, 0xa004ff04, 0xc8080003, 
    0x00b16c1b, 0xeb040403, 0xc8010003, 0x001bc600, 0xe0030300, 0x5c000000, 
    0x0000006c, 0xe2000003, 0xc802803e, 0xa0a7a700, 0xaf020100, 0xc80f8000, 
    0x00000000, 0xe2010100, 0xc80f8001, 0x00000000, 0xe2000000, 0x4e4a0000, 
    0xea7441a2, 0xcfce3f33
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.z, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r3.xyz, r0.yyz, c255.xyz
    cndeq r1.x, r3.y, r1.w, r2.x
    cndeq r2.x, r3.x, r1.y, r1.x
    exec
    vfetch r1, r2.x, color
    vfetch r2, r2.x, position
    alloc position
    exec
    add r3.w, r3.z, c254.z
  + movas r0._, r0.z
    dp4 oPos.x001, r2.wzxy, c[3+a0].wzxy
    frc r4.x, r3.w
  + sgts r4.y, -r3.w
    add r3.w, -r4.x, c254.z
  + sgts r4.x, r4.x
    mad r3.w, r4.y, r4.x, r3.w
    add r3.x, r3.w, r3.z
    exec
    movas r0._, r3.x
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o2, r1
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-c520b78b-3e6b87d7

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedVertexCxform[] =
{
    0x102a1101, 0x000001a0, 0x00000250, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645665, 0x72746578, 0x4378666f, 0x726d2e68, 
    0x6c736c2e, 0x75706462, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00600000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000210, 0x00200004, 0x00000000, 0x00000000, 
    0x00003063, 0x00000001, 0x00000003, 0x00000003, 0x00000290, 0x0007a012, 
    0x0010a01d, 0x0030001e, 0x0000f050, 0x0001f151, 0x0002f2a0, 0x00001029, 
    0x0000102a, 0x00001028, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 
    0x3f8ccccd, 0x00000000, 0xc0400000, 0xc0000000, 0x40000000, 0x3f000000, 
    0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 
    0x3005201d, 0x00001200, 0xc2000000, 0x0000601f, 0x20251200, 0x12000000, 
    0x00000000, 0x4027c400, 0x22000000, 0x14020000, 0x001b1b6c, 0x2000ff00, 
    0x04410000, 0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 0xe1000000, 
    0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 
    0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 
    0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 
    0xc8060002, 0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 
    0xc8080002, 0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37100, 0xa102fe00, 
    0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 0x010000c0, 0xc20000ff, 
    0x4c200000, 0x0000006c, 0xe2000002, 0xc8020000, 0x00c6b100, 0xe1020000, 
    0x2c200000, 0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 0xe1020000, 
    0x30200000, 0x000000b1, 0xe2000000, 0xc8010002, 0x00b16cc6, 0xec000101, 
    0xc8070003, 0x00c1c000, 0xa000ff00, 0xc8010001, 0x00b11b6c, 0xec030102, 
    0xc8010002, 0x006cb16c, 0xec030101, 0x05f81040, 0x00000688, 0x00000000, 
    0x05f82040, 0x00000688, 0x00000000, 0x5c080003, 0x00c6c6c6, 0xa003fe00, 
    0xc889c03e, 0xa0a7a700, 0xaf020300, 0x20210404, 0x011b001b, 0xe8030003, 
    0x20180403, 0x046cc66c, 0xa004fe04, 0xc8080003, 0x00b16c1b, 0xeb040403, 
    0xc8010003, 0x001bc600, 0xe0030300, 0x5c000000, 0x0000006c, 0xe2000003, 
    0xc802803e, 0xa0a7a700, 0xaf020100, 0x5c000000, 0x000000c6, 0xe2000000, 
    0xc80f8002, 0x00000000, 0xe2010100, 0xc80f8000, 0xe0000000, 0x22010100, 
    0xc80f8001, 0xe0000000, 0x22020200, 0x4e4a0000, 0xc520b78b, 0x3e6b87d7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.z, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r4.xyz, r0.yyz, c255.xyz
    cndeq r1.x, r4.y, r1.w, r2.x
    cndeq r3.x, r4.x, r1.y, r1.x
    exec
    vfetch r2, r3.x, color
    vfetch r1, r3.x, color1
    vfetch r3, r3.x, position
    alloc position
    exec
    add r4.w, r4.z, c254.z
  + movas r0._, r0.z
    dp4 oPos.x001, r3.wzxy, c[3+a0].wzxy
    frc r5.x, r4.w
  + sgts r5.y, -r4.w
    add r4.w, -r5.x, c254.z
  + sgts r5.x, r5.x
    mad r4.w, r5.y, r5.x, r4.w
    add r4.x, r4.w, r4.z
    exec
    movas r0._, r4.x
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o2, r2
    mov o3, r1
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-0839eb2b-2a5a51c3

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedVertexCxformEAlpha[] =
{
    0x102a1101, 0x000001b4, 0x00000268, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645665, 0x72746578, 0x4378666f, 0x726d4541, 
    0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020001, 0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000228, 0x00300005, 
    0x00000000, 0x00000000, 0x00004084, 0x00000001, 0x00000004, 0x00000004, 
    0x00000290, 0x0007a012, 0x0010a01d, 0x0001a01e, 0x0030001f, 0x0000f050, 
    0x0001f151, 0x0002f2a0, 0x0003f3a1, 0x0000102b, 0x0000102c, 0x00001029, 
    0x0000102a, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 
    0x00000000, 0xc0400000, 0xc0000000, 0x40000000, 0x3f000000, 0x00006005, 
    0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x7015301d, 
    0x00001200, 0xc2000000, 0x00006020, 0x20261200, 0x12000000, 0x00000000, 
    0x5028c400, 0x22000000, 0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 
    0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 0x2c400000, 
    0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 0xc8060002, 
    0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 0xc8080002, 
    0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37100, 0xa102fe00, 0xc5f81000, 
    0x00000458, 0x00000000, 0xb8100200, 0x010000c0, 0xc20000ff, 0x4c200000, 
    0x0000006c, 0xe2000002, 0xc8020000, 0x00c6b100, 0xe1020000, 0x2c200000, 
    0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 0xe1020000, 0x30200000, 
    0x000000b1, 0xe2000000, 0xc8010002, 0x00b16cc6, 0xec000101, 0xc8070004, 
    0x00c1c000, 0xa000ff00, 0xc8010001, 0x00b11b6c, 0xec040102, 0xc8010003, 
    0x006cb16c, 0xec040101, 0x05f82060, 0x00000688, 0x00000000, 0x05f81060, 
    0x00000688, 0x00000000, 0x05f83060, 0x00000688, 0x00000000, 0x5c080004, 
    0x00c6c6c6, 0xa004fe00, 0xc889c03e, 0xa0a7a700, 0xaf030300, 0x20210505, 
    0x011b001b, 0xe8040004, 0x20180504, 0x046cc66c, 0xa005fe05, 0xc8080004, 
    0x00b16c1b, 0xeb050504, 0xc8010004, 0x001bc600, 0xe0040400, 0x5c000000, 
    0x0000006c, 0xe2000004, 0xc802803e, 0xa0a7a700, 0xaf030100, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc80f8002, 0x00000000, 0xe2020200, 0xc80f8003, 
    0x00000000, 0xe2010100, 0xc80f8000, 0xe0000000, 0x22010100, 0xc80f8001, 
    0xe0000000, 0x22020200, 0x4e4a0000, 0x0839eb2b, 0x2a5a51c3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGTexTG.hlsl.h /Vn
//    pBinary_X360_VInstancedTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1     144
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
defextern const vfuniforms[96], float, vector, [1, 4], c97
defextern const vfuniforms[97], float, vector, [1, 4], c98
defextern const vfuniforms[98], float, vector, [1, 4], c99
defextern const vfuniforms[99], float, vector, [1, 4], c100
defextern const vfuniforms[100], float, vector, [1, 4], c101
defextern const vfuniforms[101], float, vector, [1, 4], c102
defextern const vfuniforms[102], float, vector, [1, 4], c103
defextern const vfuniforms[103], float, vector, [1, 4], c104
defextern const vfuniforms[104], float, vector, [1, 4], c105
defextern const vfuniforms[105], float, vector, [1, 4], c106
defextern const vfuniforms[106], float, vector, [1, 4], c107
defextern const vfuniforms[107], float, vector, [1, 4], c108
defextern const vfuniforms[108], float, vector, [1, 4], c109
defextern const vfuniforms[109], float, vector, [1, 4], c110
defextern const vfuniforms[110], float, vector, [1, 4], c111
defextern const vfuniforms[111], float, vector, [1, 4], c112
defextern const vfuniforms[112], float, vector, [1, 4], c113
defextern const vfuniforms[113], float, vector, [1, 4], c114
defextern const vfuniforms[114], float, vector, [1, 4], c115
defextern const vfuniforms[115], float, vector, [1, 4], c116
defextern const vfuniforms[116], float, vector, [1, 4], c117
defextern const vfuniforms[117], float, vector, [1, 4], c118
defextern const vfuniforms[118], float, vector, [1, 4], c119
defextern const vfuniforms[119], float, vector, [1, 4], c120
defextern const vfuniforms[120], float, vector, [1, 4], c121
defextern const vfuniforms[121], float, vector, [1, 4], c122
defextern const vfuniforms[122], float, vector, [1, 4], c123
defextern const vfuniforms[123], float, vector, [1, 4], c124
defextern const vfuniforms[124], float, vector, [1, 4], c125
defextern const vfuniforms[125], float, vector, [1, 4], c126
defextern const vfuniforms[126], float, vector, [1, 4], c127
defextern const vfuniforms[127], float, vector, [1, 4], c128
defextern const vfuniforms[128], float, vector, [1, 4], c129
defextern const vfuniforms[129], float, vector, [1, 4], c130
defextern const vfuniforms[130], float, vector, [1, 4], c131
defextern const vfuniforms[131], float, vector, [1, 4], c132
defextern const vfuniforms[132], float, vector, [1, 4], c133
defextern const vfuniforms[133], float, vector, [1, 4], c134
defextern const vfuniforms[134], float, vector, [1, 4], c135
defextern const vfuniforms[135], float, vector, [1, 4], c136
defextern const vfuniforms[136], float, vector, [1, 4], c137
defextern const vfuniforms[137], float, vector, [1, 4], c138
defextern const vfuniforms[138], float, vector, [1, 4], c139
defextern const vfuniforms[139], float, vector, [1, 4], c140
defextern const vfuniforms[140], float, vector, [1, 4], c141
defextern const vfuniforms[141], float, vector, [1, 4], c142
defextern const vfuniforms[142], float, vector, [1, 4], c143
defextern const vfuniforms[143], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0.5, 6, 4, 0
def c254, 2.0999999, 1.10000002, 3.0999999, 0
def c255, -3, -2, 1.10000002, 2


    exec
    add r0.y, c0.w, c253.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c253.zyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.w, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r3, r0.zyzy, c255.wyzx
    cndeq r1.x, r3.y, r1.w, r2.x
    cndeq r1.x, r3.w, r1.y, r1.x
    exec
    vfetch r2, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r4, r3.xxxz, c254
  + movas r0._, r0.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    sgt r6, -r4.xzyw, c254.w
    frc r4, r4.xzyw
    sgt r5, r4.xzyw, c254.w
    add r4, -r4.xzyw, c254.xyzy
    exec
    mad r4, r6, r5.xzyw, r4.xzyw
    add r3.w, r4.w, r0.z
    add r3.xyz, r4.xzy, r3.x
  + movas r0._, r3.w
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.z
    dp4 o0.x, r1.wzxy, c[3+a0].wzxy
    movas r0._, r3.y
    dp4 o0.y, r1.wzxy, c[1+a0].wzxy
    movas r0._, r3.x
    dp4 o1.x, r1.wzxy, c[1+a0].wzxy
    exece
    movas r0._, r3.z
    mov o2, r2
    dp4 o1.y, r1.wzxy, c[1+a0].wzxy

// PDB hint 4e4a0000-3f16b158-030a18ed

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGTexTG[] =
{
    0x102a1101, 0x000001a8, 0x000002b0, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544754, 0x65785447, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00900000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00900000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000270, 0x00200006, 0x00000000, 0x00000000, 
    0x00002063, 0x00000001, 0x00000003, 0x00000005, 0x00000290, 0x0007a013, 
    0x0010a01e, 0x0030001f, 0x00003050, 0x00023151, 0x0004f2a0, 0x0000002b, 
    0x0000102d, 0x0000002f, 0x00001032, 0x00001031, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f000000, 0x40c00000, 0x40800000, 0x00000000, 
    0x40066666, 0x3f8ccccd, 0x40466666, 0x00000000, 0xc0400000, 0xc0000000, 
    0x3f8ccccd, 0x40000000, 0x00006006, 0x600c1200, 0x12000000, 0x20246012, 
    0x60181200, 0x12000000, 0x3005201e, 0x00001200, 0xc2000000, 0x00006020, 
    0x40261200, 0x12000000, 0x00000000, 0x602ac400, 0x12000000, 0x00003030, 
    0x00002200, 0x00000000, 0x14020000, 0x001b6c6c, 0x2000fd00, 0x04410000, 
    0x00b1006c, 0xc90000fd, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 0x2c400000, 
    0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 0xc8060002, 
    0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 0xc8080002, 
    0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37200, 0xa102fd00, 0xc5f81000, 
    0x00000458, 0x00000000, 0xb8100200, 0x01000000, 0xc20000ff, 0x4c200000, 
    0x0000006c, 0xe2000002, 0xc8020000, 0x00c6b100, 0xe1020000, 0x2c200000, 
    0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 0xe1020000, 0x30200000, 
    0x000000b1, 0xe2000000, 0xc8010002, 0x00b16cc6, 0xec000101, 0xc80f0003, 
    0x00824300, 0xa000ff00, 0xc8010001, 0x00b11b6c, 0xec030102, 0xc8010001, 
    0x001bb16c, 0xec030101, 0x05f82020, 0x00000688, 0x00000000, 0x05f81020, 
    0x00000688, 0x00000000, 0x5c0f0004, 0x00ec00c6, 0xa003fe00, 0xc889c03e, 
    0xa0a7a700, 0xaf010100, 0xc80f0006, 0x04341b00, 0xa504fe00, 0xc80f0004, 
    0x00340000, 0xe8040000, 0xc80f0005, 0x00341b00, 0xa504fe00, 0xc80f0004, 
    0x04348000, 0xa004fe00, 0xc80f0004, 0x00003434, 0xeb060504, 0xc8080003, 
    0x001bc600, 0xe0040000, 0x5c070003, 0x00b46c1b, 0xe0040303, 0xc802803e, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000c6, 0xe2000000, 0xc8018000, 
    0xa0a7a700, 0xaf010300, 0x5c000000, 0x000000b1, 0xe2000003, 0xc8028000, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x0000006c, 0xe2000003, 0xc8018001, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000c6, 0xe2000003, 0xc80f8002, 
    0x00000000, 0xe2020200, 0xc8028001, 0xa0a7a700, 0xaf010100, 0x4e4a0000, 
    0x3f16b158, 0x030a18ed
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1     192
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
defextern const vfuniforms[96], float, vector, [1, 4], c97
defextern const vfuniforms[97], float, vector, [1, 4], c98
defextern const vfuniforms[98], float, vector, [1, 4], c99
defextern const vfuniforms[99], float, vector, [1, 4], c100
defextern const vfuniforms[100], float, vector, [1, 4], c101
defextern const vfuniforms[101], float, vector, [1, 4], c102
defextern const vfuniforms[102], float, vector, [1, 4], c103
defextern const vfuniforms[103], float, vector, [1, 4], c104
defextern const vfuniforms[104], float, vector, [1, 4], c105
defextern const vfuniforms[105], float, vector, [1, 4], c106
defextern const vfuniforms[106], float, vector, [1, 4], c107
defextern const vfuniforms[107], float, vector, [1, 4], c108
defextern const vfuniforms[108], float, vector, [1, 4], c109
defextern const vfuniforms[109], float, vector, [1, 4], c110
defextern const vfuniforms[110], float, vector, [1, 4], c111
defextern const vfuniforms[111], float, vector, [1, 4], c112
defextern const vfuniforms[112], float, vector, [1, 4], c113
defextern const vfuniforms[113], float, vector, [1, 4], c114
defextern const vfuniforms[114], float, vector, [1, 4], c115
defextern const vfuniforms[115], float, vector, [1, 4], c116
defextern const vfuniforms[116], float, vector, [1, 4], c117
defextern const vfuniforms[117], float, vector, [1, 4], c118
defextern const vfuniforms[118], float, vector, [1, 4], c119
defextern const vfuniforms[119], float, vector, [1, 4], c120
defextern const vfuniforms[120], float, vector, [1, 4], c121
defextern const vfuniforms[121], float, vector, [1, 4], c122
defextern const vfuniforms[122], float, vector, [1, 4], c123
defextern const vfuniforms[123], float, vector, [1, 4], c124
defextern const vfuniforms[124], float, vector, [1, 4], c125
defextern const vfuniforms[125], float, vector, [1, 4], c126
defextern const vfuniforms[126], float, vector, [1, 4], c127
defextern const vfuniforms[127], float, vector, [1, 4], c128
defextern const vfuniforms[128], float, vector, [1, 4], c129
defextern const vfuniforms[129], float, vector, [1, 4], c130
defextern const vfuniforms[130], float, vector, [1, 4], c131
defextern const vfuniforms[131], float, vector, [1, 4], c132
defextern const vfuniforms[132], float, vector, [1, 4], c133
defextern const vfuniforms[133], float, vector, [1, 4], c134
defextern const vfuniforms[134], float, vector, [1, 4], c135
defextern const vfuniforms[135], float, vector, [1, 4], c136
defextern const vfuniforms[136], float, vector, [1, 4], c137
defextern const vfuniforms[137], float, vector, [1, 4], c138
defextern const vfuniforms[138], float, vector, [1, 4], c139
defextern const vfuniforms[139], float, vector, [1, 4], c140
defextern const vfuniforms[140], float, vector, [1, 4], c141
defextern const vfuniforms[141], float, vector, [1, 4], c142
defextern const vfuniforms[142], float, vector, [1, 4], c143
defextern const vfuniforms[143], float, vector, [1, 4], c144
defextern const vfuniforms[144], float, vector, [1, 4], c145
defextern const vfuniforms[145], float, vector, [1, 4], c146
defextern const vfuniforms[146], float, vector, [1, 4], c147
defextern const vfuniforms[147], float, vector, [1, 4], c148
defextern const vfuniforms[148], float, vector, [1, 4], c149
defextern const vfuniforms[149], float, vector, [1, 4], c150
defextern const vfuniforms[150], float, vector, [1, 4], c151
defextern const vfuniforms[151], float, vector, [1, 4], c152
defextern const vfuniforms[152], float, vector, [1, 4], c153
defextern const vfuniforms[153], float, vector, [1, 4], c154
defextern const vfuniforms[154], float, vector, [1, 4], c155
defextern const vfuniforms[155], float, vector, [1, 4], c156
defextern const vfuniforms[156], float, vector, [1, 4], c157
defextern const vfuniforms[157], float, vector, [1, 4], c158
defextern const vfuniforms[158], float, vector, [1, 4], c159
defextern const vfuniforms[159], float, vector, [1, 4], c160
defextern const vfuniforms[160], float, vector, [1, 4], c161
defextern const vfuniforms[161], float, vector, [1, 4], c162
defextern const vfuniforms[162], float, vector, [1, 4], c163
defextern const vfuniforms[163], float, vector, [1, 4], c164
defextern const vfuniforms[164], float, vector, [1, 4], c165
defextern const vfuniforms[165], float, vector, [1, 4], c166
defextern const vfuniforms[166], float, vector, [1, 4], c167
defextern const vfuniforms[167], float, vector, [1, 4], c168
defextern const vfuniforms[168], float, vector, [1, 4], c169
defextern const vfuniforms[169], float, vector, [1, 4], c170
defextern const vfuniforms[170], float, vector, [1, 4], c171
defextern const vfuniforms[171], float, vector, [1, 4], c172
defextern const vfuniforms[172], float, vector, [1, 4], c173
defextern const vfuniforms[173], float, vector, [1, 4], c174
defextern const vfuniforms[174], float, vector, [1, 4], c175
defextern const vfuniforms[175], float, vector, [1, 4], c176
defextern const vfuniforms[176], float, vector, [1, 4], c177
defextern const vfuniforms[177], float, vector, [1, 4], c178
defextern const vfuniforms[178], float, vector, [1, 4], c179
defextern const vfuniforms[179], float, vector, [1, 4], c180
defextern const vfuniforms[180], float, vector, [1, 4], c181
defextern const vfuniforms[181], float, vector, [1, 4], c182
defextern const vfuniforms[182], float, vector, [1, 4], c183
defextern const vfuniforms[183], float, vector, [1, 4], c184
defextern const vfuniforms[184], float, vector, [1, 4], c185
defextern const vfuniforms[185], float, vector, [1, 4], c186
defextern const vfuniforms[186], float, vector, [1, 4], c187
defextern const vfuniforms[187], float, vector, [1, 4], c188
defextern const vfuniforms[188], float, vector, [1, 4], c189
defextern const vfuniforms[189], float, vector, [1, 4], c190
defextern const vfuniforms[190], float, vector, [1, 4], c191
defextern const vfuniforms[191], float, vector, [1, 4], c192
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4

def c252, 0, 0, 0, 0
def c253, 0.5, 4, 8, 0
def c254, 1.10000002, 2.0999999, 3.0999999, 0
def c255, -3, -2, 2, 4


    exec
    add r0.y, c0.w, c253.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wzzy, c253.yzzx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.z, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.y, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r3, r0.yyz, c255
    cndeq r1.x, r3.y, r1.w, r2.x
    cndeq r1.x, r3.x, r1.y, r1.x
    exec
    vfetch r2, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r4, r3.zw, c254.xxyz
  + movas r0._, r0.z
    dp4 oPos.x001, r1.wzxy, c[3+a0].wzxy
    sgt r6, -r4.xwyz, c254.w
    frc r4, r4.xwyz
    sgt r5, r4.xwyz, c254.w
    add r4, -r4.xwyz, c254.xyzx
    exec
    mad r4, r6.xzwy, r5.xwyz, r4.xwyz
    add r3, r4.xwyz, r3.zw
    movas r0._, r3.x
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r3.z
    dp4 o2.y, r1.wzxy, c[1+a0].wzxy
    movas r0._, r3.w
    dp4 o3.x, r1.wzxy, c[1+a0].wzxy
    movas r0._, r3.y
    dp4 o3.y, r1.wzxy, c[1+a0].wzxy
    exece
    movas r0._, r0.z
    mov o4, r2
    dp4 o2.x, r1.wzxy, c[5+a0].wzxy
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-dc9f37e0-4c684978

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGTexTGCxform[] =
{
    0x102a1101, 0x000001bc, 0x000002c8, 0x00000024, 0x0000009c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544754, 0x65785447, 0x4378666f, 
    0x726d2e68, 0x6c736c2e, 0x75706462, 0x00000090, 0x0000001c, 0x00000083, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 
    0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 
    0x00c00000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00c00000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000288, 0x00400006, 0x00000000, 
    0x00000000, 0x000040a5, 0x00000001, 0x00000003, 0x00000007, 0x00000290, 
    0x0007a013, 0x0010a01e, 0x0030001f, 0x0000f050, 0x0001f151, 0x00023252, 
    0x00043353, 0x0006f4a0, 0x00001033, 0x00001034, 0x0000002b, 0x00001032, 
    0x0000002d, 0x0000102f, 0x00001031, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f000000, 0x40800000, 0x41000000, 0x00000000, 0x3f8ccccd, 
    0x40066666, 0x40466666, 0x00000000, 0xc0400000, 0xc0000000, 0x40000000, 
    0x40800000, 0x00006006, 0x600c1200, 0x12000000, 0x20246012, 0x60181200, 
    0x12000000, 0x3005201e, 0x00001200, 0xc2000000, 0x00006020, 0x40261200, 
    0x12000000, 0x00000000, 0x602ac400, 0x12000000, 0x00005030, 0x00002200, 
    0x00000000, 0x14020000, 0x001b6c6c, 0x2000fd00, 0x04410000, 0x00b1006c, 
    0xc90000fd, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 
    0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 
    0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 
    0xe9000000, 0x00100000, 0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 
    0xe6000000, 0xc80d0000, 0x00874500, 0xa102fd00, 0xc5f81000, 0x00000458, 
    0x00000000, 0xb8100200, 0x010000c0, 0xc20000ff, 0x4c200000, 0x0000006c, 
    0xe2000002, 0xc8020000, 0x00b1b100, 0xe1020000, 0x2c200000, 0x000000b1, 
    0xe2000000, 0xc8020000, 0x006cb100, 0xe1020000, 0x30200000, 0x000000b1, 
    0xe2000000, 0xc8010002, 0x00b16cc6, 0xec000101, 0xc80f0003, 0x00c10000, 
    0xa000ff00, 0xc8010001, 0x00b11b6c, 0xec030102, 0xc8010001, 0x006cb16c, 
    0xec030101, 0x05f82020, 0x00000688, 0x00000000, 0x05f81020, 0x00000688, 
    0x00000000, 0x5c0f0004, 0x001afcc6, 0xa003fe00, 0xc889c03e, 0xa0a7a700, 
    0xaf010300, 0xc80f0006, 0x04f81b00, 0xa504fe00, 0xc80f0004, 0x00f80000, 
    0xe8040000, 0xc80f0005, 0x00f81b00, 0xa504fe00, 0xc80f0004, 0x04f84000, 
    0xa004fe00, 0xc80f0004, 0x0094f8f8, 0xeb060504, 0xc80f0003, 0x00f81a00, 
    0xe0040300, 0x5c000000, 0x0000006c, 0xe2000003, 0xc802803e, 0xa0a7a700, 
    0xaf010100, 0x5c000000, 0x000000c6, 0xe2000003, 0xc8028002, 0xa0a7a700, 
    0xaf010100, 0x5c000000, 0x0000001b, 0xe2000003, 0xc8018003, 0xa0a7a700, 
    0xaf010100, 0x5c000000, 0x000000b1, 0xe2000003, 0xc8028003, 0xa0a7a700, 
    0xaf010100, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8004, 0x00000000, 
    0xe2020200, 0xc8018002, 0xa0a7a700, 0xaf010500, 0xc80f8000, 0xe0000000, 
    0x22010100, 0xc80f8001, 0xe0000000, 0x22020200, 0x4e4a0000, 0xdc9f37e0, 
    0x4c684978
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGVertex.hlsl.h /Vn
//    pBinary_X360_VInstancedTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 1.10000002, 2


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.w, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.x, r0.y, r1.x, r1.z
    add r4, r0.zyyz, c255.wxyz
    cndeq r1.x, r4.z, r1.w, r2.x
    cndeq r1.x, r4.y, r1.y, r1.x
    exec
    vfetch r3, r1.x, color
    vfetch r2, r1.x, color1
    vfetch r1, r1.x, position
    alloc position
    exec
    add r4.yz, r4.xxw, c254.zzw
  + movas r0._, r0.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    frc r5.xy, r4.yz
    sgt r5.zw, r5.xxxy, c254.w
  + sgts r6.x, -r4.y
    add r5.xy, -r5.xy, c255.z
  + sgts r6.y, -r4.z
    mad r5.xy, r6.xy, r5.zw, r5.xy
    exec
    add r4.y, r5.y, r0.z
    add r4.x, r5.x, r4.x
  + movas r0._, r4.y
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    dp4 o0.x, r1.wzxy, c[3+a0].wzxy
    movas r0._, r4.x
    mov o1, r3
    mov o2, r2
    dp4 o0.y, r1.wzxy, c[1+a0].wzxy

// PDB hint 4e4a0000-4c67b6da-6956877c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGVertex[] =
{
    0x102a1101, 0x000001a8, 0x00000280, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544756, 0x65727465, 0x782e686c, 
    0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00600000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000240, 0x00200006, 0x00000000, 0x00000000, 
    0x00002863, 0x00000001, 0x00000004, 0x00000004, 0x00000290, 0x0007a012, 
    0x0010a01d, 0x0001a01e, 0x0030001f, 0x00003050, 0x0002f1a0, 0x0003f2a1, 
    0x0000002a, 0x0000102e, 0x0000102c, 0x0000102d, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f000000, 0x40800000, 0x3f8ccccd, 0x00000000, 0xc0400000, 0xc0000000, 
    0x3f8ccccd, 0x40000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 
    0x60171200, 0x12000000, 0x7015301d, 0x00001200, 0xc2000000, 0x00006020, 
    0x30261200, 0x12000000, 0x00000000, 0x6029c400, 0x22000000, 0x14020000, 
    0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 
    0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 
    0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 
    0x00c6b000, 0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 
    0x001bc600, 0xe1000000, 0xc8060002, 0x00c10000, 0xe9000000, 0x00100000, 
    0x000000c6, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 0xc80d0000, 
    0x00f37100, 0xa102fe00, 0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 
    0x01000000, 0xc20000ff, 0x4c200000, 0x0000006c, 0xe2000002, 0xc8020000, 
    0x00c6b100, 0xe1020000, 0x2c200000, 0x000000b1, 0xe2000000, 0xc8020000, 
    0x006cb100, 0xe1020000, 0x30200000, 0x000000b1, 0xe2000000, 0xc8010002, 
    0x00b16cc6, 0xec000101, 0xc80f0004, 0x00f2ff00, 0xa000ff00, 0xc8010001, 
    0x00c61b6c, 0xec040102, 0xc8010001, 0x00b1b16c, 0xec040101, 0x05f83020, 
    0x00000688, 0x00000000, 0x05f82020, 0x00000688, 0x00000000, 0x05f81020, 
    0x00000688, 0x00000000, 0x5c060004, 0x001c16c6, 0xa004fe00, 0xc889c03e, 
    0xa0a7a700, 0xaf010100, 0xc8030005, 0x00c50000, 0xe8040000, 0x201c0605, 
    0x01ac1bb1, 0xa505fe04, 0x20230605, 0x05b0c6c6, 0xa005ff04, 0xc8030005, 
    0x00b01ab0, 0xeb060505, 0xc8020004, 0x00b1c600, 0xe0050000, 0x5c010004, 
    0x006c6cb1, 0xe0050404, 0xc802803e, 0xa0a7a700, 0xaf010100, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf010300, 0x5c000000, 
    0x0000006c, 0xe2000004, 0xc80f8001, 0x00000000, 0xe2030300, 0xc80f8002, 
    0x00000000, 0xe2020200, 0xc8028000, 0xa0a7a700, 0xaf010100, 0x4e4a0000, 
    0x4c67b6da, 0x6956877c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGVertexCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1     144
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
defextern const vfuniforms[96], float, vector, [1, 4], c97
defextern const vfuniforms[97], float, vector, [1, 4], c98
defextern const vfuniforms[98], float, vector, [1, 4], c99
defextern const vfuniforms[99], float, vector, [1, 4], c100
defextern const vfuniforms[100], float, vector, [1, 4], c101
defextern const vfuniforms[101], float, vector, [1, 4], c102
defextern const vfuniforms[102], float, vector, [1, 4], c103
defextern const vfuniforms[103], float, vector, [1, 4], c104
defextern const vfuniforms[104], float, vector, [1, 4], c105
defextern const vfuniforms[105], float, vector, [1, 4], c106
defextern const vfuniforms[106], float, vector, [1, 4], c107
defextern const vfuniforms[107], float, vector, [1, 4], c108
defextern const vfuniforms[108], float, vector, [1, 4], c109
defextern const vfuniforms[109], float, vector, [1, 4], c110
defextern const vfuniforms[110], float, vector, [1, 4], c111
defextern const vfuniforms[111], float, vector, [1, 4], c112
defextern const vfuniforms[112], float, vector, [1, 4], c113
defextern const vfuniforms[113], float, vector, [1, 4], c114
defextern const vfuniforms[114], float, vector, [1, 4], c115
defextern const vfuniforms[115], float, vector, [1, 4], c116
defextern const vfuniforms[116], float, vector, [1, 4], c117
defextern const vfuniforms[117], float, vector, [1, 4], c118
defextern const vfuniforms[118], float, vector, [1, 4], c119
defextern const vfuniforms[119], float, vector, [1, 4], c120
defextern const vfuniforms[120], float, vector, [1, 4], c121
defextern const vfuniforms[121], float, vector, [1, 4], c122
defextern const vfuniforms[122], float, vector, [1, 4], c123
defextern const vfuniforms[123], float, vector, [1, 4], c124
defextern const vfuniforms[124], float, vector, [1, 4], c125
defextern const vfuniforms[125], float, vector, [1, 4], c126
defextern const vfuniforms[126], float, vector, [1, 4], c127
defextern const vfuniforms[127], float, vector, [1, 4], c128
defextern const vfuniforms[128], float, vector, [1, 4], c129
defextern const vfuniforms[129], float, vector, [1, 4], c130
defextern const vfuniforms[130], float, vector, [1, 4], c131
defextern const vfuniforms[131], float, vector, [1, 4], c132
defextern const vfuniforms[132], float, vector, [1, 4], c133
defextern const vfuniforms[133], float, vector, [1, 4], c134
defextern const vfuniforms[134], float, vector, [1, 4], c135
defextern const vfuniforms[135], float, vector, [1, 4], c136
defextern const vfuniforms[136], float, vector, [1, 4], c137
defextern const vfuniforms[137], float, vector, [1, 4], c138
defextern const vfuniforms[138], float, vector, [1, 4], c139
defextern const vfuniforms[139], float, vector, [1, 4], c140
defextern const vfuniforms[140], float, vector, [1, 4], c141
defextern const vfuniforms[141], float, vector, [1, 4], c142
defextern const vfuniforms[142], float, vector, [1, 4], c143
defextern const vfuniforms[143], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4

def c252, 0, 0, 0, 0
def c253, 6, 4, 0.5, 0
def c254, 2, 4, -3, -2
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c253.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.ywz, c253.xyz
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c254.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.z, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r2.x, r0.z, r1.x, r1.z
    add r4, r0.xxz, c254
    cndeq r1.x, r4.w, r1.w, r2.x
    cndeq r1.x, r4.z, r1.y, r1.x
    exec
    vfetch r3, r1.x, color
    vfetch r2, r1.x, color1
    vfetch r1, r1.x, position
    alloc position
    exec
    add r4.zw, r4.xxxy, c255.x
  + movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[3+a0].wzxy
    frc r5.xy, r4.zw
    sgt r5.zw, r5.xxxy, c253.w
  + sgts r6.x, -r4.z
    add r5.xy, -r5.xy, c255.x
  + sgts r6.y, -r4.w
    mad r5.xy, r6.xy, r5.zw, r5.xy
    exec
    add r4.xy, r5.xy, r4.xy
    movas r0._, r4.x
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r4.y
    dp4 o2.y, r1.wzxy, c[1+a0].wzxy
    movas r0._, r0.x
    mov o3, r3
    mov o4, r2
    dp4 o2.x, r1.wzxy, c[5+a0].wzxy
    exece
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-fe3141ae-e625ec50

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTexTGVertexCxform[] =
{
    0x102a1101, 0x000001c0, 0x000002a4, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78544756, 0x65727465, 0x78437866, 
    0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020001, 0x00900000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00900000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000264, 0x00400006, 
    0x00000000, 0x00000000, 0x000048a5, 0x00000001, 0x00000004, 0x00000006, 
    0x00000290, 0x0007a013, 0x0010a01e, 0x0001a01f, 0x00300020, 0x0000f050, 
    0x0001f151, 0x00023252, 0x0004f3a0, 0x0005f4a1, 0x00001030, 0x00001031, 
    0x0000002b, 0x0000102f, 0x0000102d, 0x0000102e, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x40c00000, 0x40800000, 0x3f000000, 0x00000000, 
    0x40000000, 0x40800000, 0xc0400000, 0xc0000000, 0x3f8ccccd, 0x00000000, 
    0x00000000, 0x00000000, 0x00006006, 0x600c1200, 0x12000000, 0x20246012, 
    0x60181200, 0x12000000, 0x7015301e, 0x00001200, 0xc2000000, 0x00006021, 
    0x30271200, 0x12000000, 0x00000000, 0x602ac400, 0x12000000, 0x00002030, 
    0x00002200, 0x00000000, 0x14020000, 0x001bc66c, 0x2000fd00, 0x04410000, 
    0x00b100c6, 0xc90000fd, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 0xe1000000, 0x2c400000, 
    0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 0xe1000000, 0xc8060002, 
    0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 0xe2000002, 0xc8080002, 
    0x026c6c00, 0xe6000000, 0xc80b0000, 0x00c9c000, 0xa102fd00, 0xc5f81000, 
    0x00000458, 0x00000000, 0xb8100200, 0x01000041, 0xc20000fe, 0x4c400000, 
    0x0000006c, 0xe2000002, 0xc8040000, 0x00c6c600, 0xe1020000, 0x2c400000, 
    0x000000c6, 0xe2000000, 0xc8040000, 0x006cc600, 0xe1020000, 0x30400000, 
    0x000000c6, 0xe2000000, 0xc8010002, 0x00c66cc6, 0xec000101, 0xc80f0004, 
    0x00cc0000, 0xa000fe00, 0xc8010001, 0x001b1b6c, 0xec040102, 0xc8010001, 
    0x00c6b16c, 0xec040101, 0x05f83020, 0x00000688, 0x00000000, 0x05f82020, 
    0x00000688, 0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c0c0004, 
    0x00ac6c6c, 0xa004ff00, 0xc889c03e, 0xa0a7a700, 0xaf010300, 0xc8030005, 
    0x001a0000, 0xe8040000, 0x201c0605, 0x01ac1bc6, 0xa505fd04, 0x20230605, 
    0x05b06c1b, 0xa005ff04, 0xc8030005, 0x00b01ab0, 0xeb060505, 0xc8030004, 
    0x00b0b000, 0xe0050400, 0x5c000000, 0x0000006c, 0xe2000004, 0xc802803e, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x000000b1, 0xe2000004, 0xc8028002, 
    0xa0a7a700, 0xaf010100, 0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8003, 
    0x00000000, 0xe2030300, 0xc80f8004, 0x00000000, 0xe2020200, 0xc8018002, 
    0xa0a7a700, 0xaf010500, 0xc80f8000, 0xe0000000, 0x22010100, 0xc80f8001, 
    0xe0000000, 0x22020200, 0x4e4a0000, 0xfe3141ae, 0xe625ec50
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTG.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTG.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -3, -2, 0.5, 4
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c254.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r0.zw, r0.xxxz
    mul r2.xz, r0.zw, c254.zw
  + adds r0.y, r0.ww
    vfetch r1.xwyz, r2.x, color7
    exec
    serialize
    addsc r0.x, c255.x, r0.y
    frc r2.y, r0.x
  + sgts r2.w, -r0.x
    add r0.x, -r2.y, c255.x
  + sgts r2.y, r2.y
    mad r0.x, r2.w, r2.y, r0.x
    add r2.xy, r0.xz, r0.yz
    sge r2.w, r2.y, -r2.y
    exec
    mad r3.x, r2.w, c254.w, c254.y
    rcp r2.w, r3.x
    mul r2.w, r0.z, r2.w
    frcs r2.w, r2.w
    mul r2.w, r3.x, r2.w
    truncs r2.w, r2.w
    exec
    cndeq r3.x, r2.w, r1.x, r1.z
    add r2.yw, r2.w, c254.xxy
    cndeq r1.x, r2.w, r1.w, r3.x
    cndeq r1.x, r2.y, r1.y, r1.x
    vfetch r1, r1.x, position
    alloc position
    exec
    movas r0._, r2.z
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.y
    dp4 o0.x, r1.wzxy, c[97+a0].wzxy
    movas r0._, r2.x
    dp4 o0.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-35d8dbde-39529e20

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTG[] =
{
    0x102a1101, 0x000001c4, 0x00000250, 0x00000024, 0x0000009c, 0x00000160, 
    0x00000188, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x472e686c, 0x736c2e75, 0x70646200, 0x000000c0, 0x0000001c, 0x000000b3, 
    0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x000000ac, 0x00000058, 
    0x00020000, 0x00010000, 0x00000064, 0x00000000, 0x00000074, 0x00020001, 
    0x00600000, 0x00000080, 0x00000000, 0x00000090, 0x00020061, 0x00300000, 
    0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 
    0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000210, 0x00000003, 0x00000000, 
    0x00000000, 0x00000821, 0x00000001, 0x00000002, 0x00000002, 0x00000290, 
    0x0007a010, 0x00000021, 0x00003050, 0x00000028, 0x0000102a, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0xc0400000, 0xc0000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 
    0x00000000, 0x00000000, 0x00000000, 0x00006005, 0x600b1200, 0x12020400, 
    0x00026011, 0x60171200, 0x12000000, 0x0100501d, 0x00001201, 0xc2000000, 
    0x00005022, 0x00001200, 0xc4000000, 0x00004027, 0x00002200, 0x00000000, 
    0x14020000, 0x001bc66c, 0x2000fe00, 0x04410000, 0x00b100c6, 0xc90000fe, 
    0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 
    0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 
    0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 
    0xc8010000, 0x001b6c00, 0xe1000000, 0xc80c0000, 0x00ec0000, 0xe9000000, 
    0x00250002, 0x001a1a1b, 0xa100fe00, 0x05f81040, 0x00000458, 0x00000000, 
    0xb0100000, 0x00000041, 0xc20000ff, 0x20820202, 0x016c006c, 0xe8000000, 
    0x20210200, 0x04b16cb1, 0xa002ff02, 0xc8010000, 0x001bb16c, 0xeb020200, 
    0xc8030002, 0x00c4c500, 0xe0000000, 0xc8080002, 0x02b1b100, 0xe6020200, 
    0xc8010003, 0x001b1bb1, 0x8b02fefe, 0x4c800200, 0x0000006c, 0xe2000003, 
    0xc8080002, 0x00c61b00, 0xe1000200, 0x2c800200, 0x0000001b, 0xe2000002, 
    0xc8080002, 0x006c1b00, 0xe1030200, 0x30800200, 0x0000001b, 0xe2000002, 
    0xc8010003, 0x001b6cc6, 0xec020101, 0xc80a0002, 0x001bbc00, 0xa002fe00, 
    0xc8010001, 0x001b1b6c, 0xec020103, 0xc8010001, 0x00b1b16c, 0xec020101, 
    0x05f81020, 0x00000688, 0x00000000, 0x5c000000, 0x000000c6, 0xe2000002, 
    0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 0xa0a7a700, 0xaf010200, 
    0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 0xa0a7a700, 0xaf010400, 
    0x5c000000, 0x000000b1, 0xe2000000, 0xc8018000, 0xa0a7a700, 0xaf016100, 
    0x5c000000, 0x0000006c, 0xe2000002, 0xc8028000, 0xa0a7a700, 0xaf016100, 
    0x4e4a0000, 0x35d8dbde, 0x39529e20
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -3, -2, 0.5, 4
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c254.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r0.zw, r0.xxxz
    mul r2.xz, r0.zw, c254.zw
  + adds r0.y, r0.ww
    vfetch r1.xwyz, r2.x, color7
    exec
    serialize
    addsc r0.x, c255.x, r0.y
    frc r2.y, r0.x
  + sgts r2.w, -r0.x
    add r0.x, -r2.y, c255.x
  + sgts r2.y, r2.y
    mad r0.x, r2.w, r2.y, r0.x
    add r2.xy, r0.xz, r0.yz
    sge r2.w, r2.y, -r2.y
    exec
    mad r3.x, r2.w, c254.w, c254.y
    rcp r2.w, r3.x
    mul r2.w, r0.z, r2.w
    frcs r2.w, r2.w
    mul r2.w, r3.x, r2.w
    truncs r2.w, r2.w
    exec
    cndeq r3.x, r2.w, r1.x, r1.z
    add r2.yw, r2.w, c254.xxy
    cndeq r1.x, r2.w, r1.w, r3.x
    cndeq r1.x, r2.y, r1.y, r1.x
    vfetch r3, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    movas r0._, r2.z
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.y
    mov o1, r3
    dp4 o0.x, r1.wzxy, c[97+a0].wzxy
    movas r0._, r2.x
    dp4 o0.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-25a56255-ccd3d468

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGEAlpha[] =
{
    0x102a1101, 0x000001d8, 0x00000268, 0x00000024, 0x000000a4, 0x00000168, 
    0x00000190, 0x00000000, 0x00000000, 0x50c76f38, 0x00000075, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x4745416c, 0x7068612e, 0x686c736c, 0x2e757064, 0x62000000, 0x000000c0, 
    0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 0x00000000, 
    0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 0x00000090, 
    0x00020061, 0x00300000, 0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000228, 
    0x00100003, 0x00000000, 0x00000000, 0x00001842, 0x00000001, 0x00000003, 
    0x00000003, 0x00000290, 0x0007a010, 0x0010a021, 0x00300022, 0x00003050, 
    0x0002f1a0, 0x0000002a, 0x0000102c, 0x00001029, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0xc0400000, 0xc0000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 0x00000000, 
    0x00000000, 0x00000000, 0x00006005, 0x600b1200, 0x12020400, 0x00026011, 
    0x60171200, 0x12000000, 0x0500601d, 0x00001203, 0xc2000000, 0x00005023, 
    0x00001200, 0xc4000000, 0x00005028, 0x00002200, 0x00000000, 0x14020000, 
    0x001bc66c, 0x2000fe00, 0x04410000, 0x00b100c6, 0xc90000fe, 0x00120100, 
    0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 
    0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 
    0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 
    0x001b6c00, 0xe1000000, 0xc80c0000, 0x00ec0000, 0xe9000000, 0x00250002, 
    0x001a1a1b, 0xa100fe00, 0x05f81040, 0x00000458, 0x00000000, 0xb0100000, 
    0x00000041, 0xc20000ff, 0x20820202, 0x016c006c, 0xe8000000, 0x20210200, 
    0x04b16cb1, 0xa002ff02, 0xc8010000, 0x001bb16c, 0xeb020200, 0xc8030002, 
    0x00c4c500, 0xe0000000, 0xc8080002, 0x02b1b100, 0xe6020200, 0xc8010003, 
    0x001b1bb1, 0x8b02fefe, 0x4c800200, 0x0000006c, 0xe2000003, 0xc8080002, 
    0x00c61b00, 0xe1000200, 0x2c800200, 0x0000001b, 0xe2000002, 0xc8080002, 
    0x006c1b00, 0xe1030200, 0x30800200, 0x0000001b, 0xe2000002, 0xc8010003, 
    0x001b6cc6, 0xec020101, 0xc80a0002, 0x001bbc00, 0xa002fe00, 0xc8010001, 
    0x001b1b6c, 0xec020103, 0xc8010001, 0x00b1b16c, 0xec020101, 0x05f83020, 
    0x00000688, 0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c000000, 
    0x000000c6, 0xe2000002, 0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 
    0xa0a7a700, 0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 
    0xa0a7a700, 0xaf010400, 0x5c000000, 0x000000b1, 0xe2000000, 0xc80f8001, 
    0x00000000, 0xe2030300, 0xc8018000, 0xa0a7a700, 0xaf016100, 0x5c000000, 
    0x0000006c, 0xe2000002, 0xc8028000, 0xa0a7a700, 0xaf016100, 0x4e4a0000, 
    0x25a56255, 0xccd3d468
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
defextern const vfuniforms[48], float, vector, [1, 4], c145
defextern const vfuniforms[49], float, vector, [1, 4], c146
defextern const vfuniforms[50], float, vector, [1, 4], c147
defextern const vfuniforms[51], float, vector, [1, 4], c148
defextern const vfuniforms[52], float, vector, [1, 4], c149
defextern const vfuniforms[53], float, vector, [1, 4], c150
defextern const vfuniforms[54], float, vector, [1, 4], c151
defextern const vfuniforms[55], float, vector, [1, 4], c152
defextern const vfuniforms[56], float, vector, [1, 4], c153
defextern const vfuniforms[57], float, vector, [1, 4], c154
defextern const vfuniforms[58], float, vector, [1, 4], c155
defextern const vfuniforms[59], float, vector, [1, 4], c156
defextern const vfuniforms[60], float, vector, [1, 4], c157
defextern const vfuniforms[61], float, vector, [1, 4], c158
defextern const vfuniforms[62], float, vector, [1, 4], c159
defextern const vfuniforms[63], float, vector, [1, 4], c160
defextern const vfuniforms[64], float, vector, [1, 4], c161
defextern const vfuniforms[65], float, vector, [1, 4], c162
defextern const vfuniforms[66], float, vector, [1, 4], c163
defextern const vfuniforms[67], float, vector, [1, 4], c164
defextern const vfuniforms[68], float, vector, [1, 4], c165
defextern const vfuniforms[69], float, vector, [1, 4], c166
defextern const vfuniforms[70], float, vector, [1, 4], c167
defextern const vfuniforms[71], float, vector, [1, 4], c168
defextern const vfuniforms[72], float, vector, [1, 4], c169
defextern const vfuniforms[73], float, vector, [1, 4], c170
defextern const vfuniforms[74], float, vector, [1, 4], c171
defextern const vfuniforms[75], float, vector, [1, 4], c172
defextern const vfuniforms[76], float, vector, [1, 4], c173
defextern const vfuniforms[77], float, vector, [1, 4], c174
defextern const vfuniforms[78], float, vector, [1, 4], c175
defextern const vfuniforms[79], float, vector, [1, 4], c176
defextern const vfuniforms[80], float, vector, [1, 4], c177
defextern const vfuniforms[81], float, vector, [1, 4], c178
defextern const vfuniforms[82], float, vector, [1, 4], c179
defextern const vfuniforms[83], float, vector, [1, 4], c180
defextern const vfuniforms[84], float, vector, [1, 4], c181
defextern const vfuniforms[85], float, vector, [1, 4], c182
defextern const vfuniforms[86], float, vector, [1, 4], c183
defextern const vfuniforms[87], float, vector, [1, 4], c184
defextern const vfuniforms[88], float, vector, [1, 4], c185
defextern const vfuniforms[89], float, vector, [1, 4], c186
defextern const vfuniforms[90], float, vector, [1, 4], c187
defextern const vfuniforms[91], float, vector, [1, 4], c188
defextern const vfuniforms[92], float, vector, [1, 4], c189
defextern const vfuniforms[93], float, vector, [1, 4], c190
defextern const vfuniforms[94], float, vector, [1, 4], c191
defextern const vfuniforms[95], float, vector, [1, 4], c192
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, 2, -3, -2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.zwy, c254.yyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.y, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r2.w, r0.z, r1.x, r1.z
    add r2.xyz, r0.xz, c255.xyz
    cndeq r1.x, r2.z, r1.w, r2.w
    cndeq r1.x, r2.y, r1.y, r1.x
    exec
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.w, r2.x, c254.z
  + movas r0._, r0.x
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.x
    dp4 o2.x, r1.wzxy, c[99+a0].wzxy
    mov o0, c[97+a0]
    mov o1, c[98+a0]
    frc r0.y, r2.w
  + sgts r0.z, -r2.w
    add r0.x, -r0.y, c254.z
  + sgts r0.y, r0.y
    exece
    mad r0.x, r0.z, r0.y, r0.x
    add r0.x, r0.x, r2.x
    movas r0._, r0.x
    dp4 o2.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-655b686d-ce2b0075

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGCxform[] =
{
    0x102a1101, 0x000001dc, 0x00000268, 0x00000024, 0x000000a4, 0x00000168, 
    0x00000190, 0x00000000, 0x00000000, 0x50c76f38, 0x00000075, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47437866, 0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 0x000000c0, 
    0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 0x00000000, 
    0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 0x00000090, 
    0x00020061, 0x00600000, 0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000228, 
    0x00200002, 0x00000000, 0x00000000, 0x00002863, 0x00000001, 0x00000002, 
    0x00000004, 0x00000290, 0x0007a012, 0x0000001d, 0x0000f050, 0x0001f151, 
    0x00023252, 0x00001025, 0x00001026, 0x00000024, 0x0000102c, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 0x00000000, 0x40000000, 
    0xc0400000, 0xc0000000, 0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 
    0x20246011, 0x60171200, 0x12000000, 0x1001101d, 0x00001200, 0xc2000000, 
    0x0000501e, 0x00001200, 0xc4000000, 0x00006023, 0x40291200, 0x22000000, 
    0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 
    0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 
    0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 
    0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 
    0xc8010000, 0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 0xe9000000, 
    0x00100000, 0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 
    0xc80b0000, 0x00ba6100, 0xa102fe00, 0xc5f81000, 0x00000458, 0x00000000, 
    0xb8100200, 0x01000041, 0xc20000ff, 0x4c400000, 0x0000006c, 0xe2000002, 
    0xc8040000, 0x00b1c600, 0xe1020000, 0x2c400000, 0x000000c6, 0xe2000000, 
    0xc8040000, 0x006cc600, 0xe1020000, 0x30400000, 0x000000c6, 0xe2000000, 
    0xc8080002, 0x00c66cc6, 0xec000101, 0xc8070002, 0x00c4c000, 0xa000ff00, 
    0xc8010001, 0x00c61b1b, 0xec020102, 0xc8010001, 0x00b1b16c, 0xec020101, 
    0x05f81020, 0x00000688, 0x00000000, 0x5c080002, 0x006cc66c, 0xa002fe00, 
    0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 0xa0a7a700, 0xaf010200, 
    0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 0xa0a7a700, 0xaf010400, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc8018002, 0xa0a7a700, 0xaf016300, 
    0xc80f8000, 0xe0000000, 0x22616100, 0xc80f8001, 0xe0000000, 0x22626200, 
    0x20420000, 0x011b001b, 0xe8020002, 0x20210000, 0x04b1c6b1, 0xa000fe00, 
    0xc8010000, 0x00c6b16c, 0xeb000000, 0xc8010000, 0x006c6c00, 0xe0000200, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc8028002, 0xa0a7a700, 0xaf016100, 
    0x4e4a0000, 0x655b686d, 0xce2b0075
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
defextern const vfuniforms[48], float, vector, [1, 4], c145
defextern const vfuniforms[49], float, vector, [1, 4], c146
defextern const vfuniforms[50], float, vector, [1, 4], c147
defextern const vfuniforms[51], float, vector, [1, 4], c148
defextern const vfuniforms[52], float, vector, [1, 4], c149
defextern const vfuniforms[53], float, vector, [1, 4], c150
defextern const vfuniforms[54], float, vector, [1, 4], c151
defextern const vfuniforms[55], float, vector, [1, 4], c152
defextern const vfuniforms[56], float, vector, [1, 4], c153
defextern const vfuniforms[57], float, vector, [1, 4], c154
defextern const vfuniforms[58], float, vector, [1, 4], c155
defextern const vfuniforms[59], float, vector, [1, 4], c156
defextern const vfuniforms[60], float, vector, [1, 4], c157
defextern const vfuniforms[61], float, vector, [1, 4], c158
defextern const vfuniforms[62], float, vector, [1, 4], c159
defextern const vfuniforms[63], float, vector, [1, 4], c160
defextern const vfuniforms[64], float, vector, [1, 4], c161
defextern const vfuniforms[65], float, vector, [1, 4], c162
defextern const vfuniforms[66], float, vector, [1, 4], c163
defextern const vfuniforms[67], float, vector, [1, 4], c164
defextern const vfuniforms[68], float, vector, [1, 4], c165
defextern const vfuniforms[69], float, vector, [1, 4], c166
defextern const vfuniforms[70], float, vector, [1, 4], c167
defextern const vfuniforms[71], float, vector, [1, 4], c168
defextern const vfuniforms[72], float, vector, [1, 4], c169
defextern const vfuniforms[73], float, vector, [1, 4], c170
defextern const vfuniforms[74], float, vector, [1, 4], c171
defextern const vfuniforms[75], float, vector, [1, 4], c172
defextern const vfuniforms[76], float, vector, [1, 4], c173
defextern const vfuniforms[77], float, vector, [1, 4], c174
defextern const vfuniforms[78], float, vector, [1, 4], c175
defextern const vfuniforms[79], float, vector, [1, 4], c176
defextern const vfuniforms[80], float, vector, [1, 4], c177
defextern const vfuniforms[81], float, vector, [1, 4], c178
defextern const vfuniforms[82], float, vector, [1, 4], c179
defextern const vfuniforms[83], float, vector, [1, 4], c180
defextern const vfuniforms[84], float, vector, [1, 4], c181
defextern const vfuniforms[85], float, vector, [1, 4], c182
defextern const vfuniforms[86], float, vector, [1, 4], c183
defextern const vfuniforms[87], float, vector, [1, 4], c184
defextern const vfuniforms[88], float, vector, [1, 4], c185
defextern const vfuniforms[89], float, vector, [1, 4], c186
defextern const vfuniforms[90], float, vector, [1, 4], c187
defextern const vfuniforms[91], float, vector, [1, 4], c188
defextern const vfuniforms[92], float, vector, [1, 4], c189
defextern const vfuniforms[93], float, vector, [1, 4], c190
defextern const vfuniforms[94], float, vector, [1, 4], c191
defextern const vfuniforms[95], float, vector, [1, 4], c192
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, 2, -3, -2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.zwy, c254.yyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.y, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r2.w, r0.z, r1.x, r1.z
    add r2.xyz, r0.xz, c255.xyz
    cndeq r1.x, r2.z, r1.w, r2.w
    cndeq r1.x, r2.y, r1.y, r1.x
    exec
    vfetch r3, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.w, r2.x, c254.z
  + movas r0._, r0.x
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.x
    mov o3, r3
    dp4 o2.x, r1.wzxy, c[99+a0].wzxy
    mov o0, c[97+a0]
    mov o1, c[98+a0]
    frc r0.y, r2.w
  + sgts r0.z, -r2.w
    exece
    add r0.x, -r0.y, c254.z
  + sgts r0.y, r0.y
    mad r0.x, r0.z, r0.y, r0.x
    add r0.x, r0.x, r2.x
    movas r0._, r0.x
    dp4 o2.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-26227e7a-490182f6

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGCxformEAlpha[] =
{
    0x102a1101, 0x000001ec, 0x00000280, 0x00000024, 0x000000a8, 0x0000016c, 
    0x00000194, 0x00000000, 0x00000000, 0x50c76f38, 0x0000007b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47437866, 0x6f726d45, 0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 
    0x000000c0, 0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 
    0x00000000, 0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 
    0x00000090, 0x00020061, 0x00600000, 0x0000009c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000240, 0x00300003, 0x00000000, 0x00000000, 0x00003884, 0x00000001, 
    0x00000003, 0x00000005, 0x00000290, 0x0007a012, 0x0010a01d, 0x0030001e, 
    0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 0x00001027, 0x00001028, 
    0x00000026, 0x0000102e, 0x00001025, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x40800000, 0x3f8ccccd, 0x00000000, 0x40000000, 0xc0400000, 0xc0000000, 
    0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 
    0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 0x0000501f, 0x00001200, 
    0xc4000000, 0x00006024, 0x502a1200, 0x22000000, 0x14020000, 0x001b1b6c, 
    0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 
    0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 
    0xe1000000, 0xc8060002, 0x00cc0000, 0xe9000000, 0x00100000, 0x000000b1, 
    0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 0xc80b0000, 0x00ba6100, 
    0xa102fe00, 0xc5f81000, 0x00000458, 0x00000000, 0xb8100200, 0x01000041, 
    0xc20000ff, 0x4c400000, 0x0000006c, 0xe2000002, 0xc8040000, 0x00b1c600, 
    0xe1020000, 0x2c400000, 0x000000c6, 0xe2000000, 0xc8040000, 0x006cc600, 
    0xe1020000, 0x30400000, 0x000000c6, 0xe2000000, 0xc8080002, 0x00c66cc6, 
    0xec000101, 0xc8070002, 0x00c4c000, 0xa000ff00, 0xc8010001, 0x00c61b1b, 
    0xec020102, 0xc8010001, 0x00b1b16c, 0xec020101, 0x05f83020, 0x00000688, 
    0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c080002, 0x006cc66c, 
    0xa002fe00, 0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 0xa0a7a700, 
    0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 0xa0a7a700, 
    0xaf010400, 0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8003, 0x00000000, 
    0xe2030300, 0xc8018002, 0xa0a7a700, 0xaf016300, 0xc80f8000, 0xe0000000, 
    0x22616100, 0xc80f8001, 0xe0000000, 0x22626200, 0x20420000, 0x011b001b, 
    0xe8020002, 0x20210000, 0x04b1c6b1, 0xa000fe00, 0xc8010000, 0x00c6b16c, 
    0xeb000000, 0xc8010000, 0x006c6c00, 0xe0000200, 0x5c000000, 0x0000006c, 
    0xe2000000, 0xc8028002, 0xa0a7a700, 0xaf016100, 0x4e4a0000, 0x26227e7a, 
    0x490182f6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertex.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertex.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2

dcl_index r0.x
dcl_color o0

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyz, r2.ywz, c254.xy
    vfetch r1, r0.x, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.w, r2.x
    mul r0.w, r2.y, r0.w
    frcs r0.w, r0.w
    exec
    mul r0.w, r2.x, r0.w
    truncs r2.x, r0.w
    cndeq r0.w, r2.x, r1.x, r1.y
    add r2.xy, r2.x, c254.zw
    cndeq r0.w, r2.y, r1.z, r0.w
    cndeq r0.w, r2.x, r1.w, r0.w
    exec
    vfetch r1, r0.w, color
    vfetch r2, r0.w, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    mov o0, r1

// PDB hint 4e4a0000-f699eb81-c7d5d15e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dVertex[] =
{
    0x102a1101, 0x00000194, 0x00000208, 0x00000024, 0x0000009c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x56657274, 
    0x65782e68, 0x6c736c2e, 0x75706462, 0x00000090, 0x0000001c, 0x00000083, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 
    0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 
    0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000001c8, 0x00000002, 0x00000000, 
    0x00000000, 0x00001021, 0x00000001, 0x00000003, 0x00000001, 0x00000290, 
    0x0007a012, 0x0010a01d, 0x0020001e, 0x0000f0a0, 0x00001024, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f000000, 0x40800000, 0xc0400000, 0xc0000000, 0x40000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00006005, 0x600b1200, 0x12000000, 
    0x20246011, 0x60171200, 0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 
    0x0000501f, 0x00001200, 0xc4000000, 0x00001024, 0x00002200, 0x00000000, 
    0x14020000, 0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 
    0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 
    0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 
    0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 
    0xc8010000, 0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 0xe9000000, 
    0x00100000, 0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 
    0xc8070000, 0x00c9b000, 0xa102fe00, 0x05f81000, 0x00000688, 0x00000000, 
    0xb8100200, 0x01000041, 0xc20000ff, 0x4c800000, 0x0000006c, 0xe2000002, 
    0xc8080000, 0x00b11b00, 0xe1020000, 0x2c800000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x006c1b00, 0xe1020000, 0x30100200, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x006c6cb1, 0xec020101, 0xc8030002, 0x006c1a00, 0xa002fe00, 
    0xc8080000, 0x00b1c61b, 0xec020100, 0xc8080000, 0x006c1b1b, 0xec020100, 
    0xc5f81000, 0x00000688, 0x00000000, 0xc5f82000, 0x00000688, 0x00000000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf020100, 
    0xc802803e, 0xa0a7a700, 0xaf020200, 0xc804803e, 0xa0a7a700, 0xaf020300, 
    0xc808803e, 0xa0a7a700, 0xaf020400, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0xf699eb81, 0xc7d5d15e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dVertexEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=1

dcl_index r0.x
dcl_color o0
dcl_color1 o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyz, r2.ywz, c254.xy
    vfetch r1, r0.x, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.w, r2.x
    mul r0.w, r2.y, r0.w
    frcs r0.w, r0.w
    exec
    mul r0.w, r2.x, r0.w
    truncs r2.x, r0.w
    cndeq r0.w, r2.x, r1.x, r1.y
    add r2.xy, r2.x, c254.zw
    cndeq r0.w, r2.y, r1.z, r0.w
    cndeq r0.w, r2.x, r1.w, r0.w
    exec
    vfetch r2, r0.w, color
    vfetch r1, r0.w, color1
    vfetch r3, r0.w, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    mov o0, r2
    mov o1, r1

// PDB hint 4e4a0000-69b10b18-275f93d1

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dVertexEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dVertexEAlpha[] =
{
    0x102a1101, 0x000001a8, 0x00000220, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000076, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x56657274, 
    0x65784541, 0x6c706861, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00010000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020001, 0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001e0, 
    0x00100003, 0x00000000, 0x00000000, 0x00002042, 0x00000001, 0x00000004, 
    0x00000002, 0x00000290, 0x0007a012, 0x0010a01d, 0x0001a01e, 0x0020001f, 
    0x0000f0a0, 0x0001f1a1, 0x00001025, 0x00001026, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f000000, 0x40800000, 0xc0400000, 0xc0000000, 0x40000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 
    0x60171200, 0x12000000, 0x7015301d, 0x00001200, 0xc2000000, 0x00005020, 
    0x00001200, 0xc4000000, 0x00002025, 0x00002200, 0x00000000, 0x14020000, 
    0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 
    0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 
    0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 
    0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 
    0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 0xe9000000, 0x00100000, 
    0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 0xc8070000, 
    0x00c9b000, 0xa102fe00, 0x05f81000, 0x00000688, 0x00000000, 0xb8100200, 
    0x01000041, 0xc20000ff, 0x4c800000, 0x0000006c, 0xe2000002, 0xc8080000, 
    0x00b11b00, 0xe1020000, 0x2c800000, 0x0000001b, 0xe2000000, 0xc8080000, 
    0x006c1b00, 0xe1020000, 0x30100200, 0x0000001b, 0xe2000000, 0xc8080000, 
    0x006c6cb1, 0xec020101, 0xc8030002, 0x006c1a00, 0xa002fe00, 0xc8080000, 
    0x00b1c61b, 0xec020100, 0xc8080000, 0x006c1b1b, 0xec020100, 0xc5f82000, 
    0x00000688, 0x00000000, 0xc5f81000, 0x00000688, 0x00000000, 0xc5f83000, 
    0x00000688, 0x00000000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf030100, 0xc802803e, 0xa0a7a700, 0xaf030200, 0xc804803e, 
    0xa0a7a700, 0xaf030300, 0xc808803e, 0xa0a7a700, 0xaf030400, 0xc80f8000, 
    0x00000000, 0xe2020200, 0xc80f8001, 0x00000000, 0xe2010100, 0x4e4a0000, 
    0x69b10b18, 0x275f93d1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r0.xw, r3.xy, r3.xy
    sge r3.z, r0.x, -r0.x
    exec
    mul r0.xyz, r3.xzy, c254.xy
    vfetch r1.xwyz, r0.x, color7
    serialize
    subsc r2.y, -c255.x, -r0.y
    rcp r2.x, r2.y
    mul r2.x, r3.x, r2.x
    frcs r2.x, r2.x
    exec
    mul r2.x, r2.y, r2.x
    truncs r2.x, r2.x
    cndeq r2.z, r2.x, r1.x, r1.z
    add r2.xy, r2.x, c254.zw
    cndeq r1.x, r2.y, r1.w, r2.z
    cndeq r2.x, r2.x, r1.y, r1.x
    exec
    vfetch r1, r2.x, color
    vfetch r2, r2.x, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.w
    mov o2, r1
    mov o0, c[97+a0]
    mov o1, c[98+a0]

// PDB hint 4e4a0000-1cb311f8-587e5bd0

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dVertexCxform[] =
{
    0x102a1101, 0x000001dc, 0x0000022c, 0x00000024, 0x000000a4, 0x00000168, 
    0x00000190, 0x00000000, 0x00000000, 0x50c76f38, 0x00000076, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x56657274, 
    0x65784378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000c0, 
    0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 0x00000000, 
    0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 0x00000090, 
    0x00020061, 0x00300000, 0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001ec, 
    0x00200003, 0x00000000, 0x00000000, 0x00003063, 0x00000001, 0x00000003, 
    0x00000003, 0x00000290, 0x0007a012, 0x0010a01d, 0x0030001e, 0x0000f050, 
    0x0001f151, 0x0002f2a0, 0x00001026, 0x00001027, 0x00001025, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f000000, 0x40800000, 0xc0400000, 0xc0000000, 0x40000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00006005, 0x600b1200, 0x12000000, 
    0x20246011, 0x60171200, 0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 
    0x0000501f, 0x00001200, 0xc4000000, 0x00004024, 0x00002200, 0x00000000, 
    0x14020000, 0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 
    0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 
    0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 
    0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 
    0xc8010000, 0x001b6c00, 0xe1000000, 0xc8030003, 0x00c40000, 0xe9000000, 
    0xc8090000, 0x00b0b000, 0xe0030300, 0xc8040003, 0x026c6c00, 0xe6000000, 
    0xc8070000, 0x00b4b000, 0xa103fe00, 0x05f81000, 0x00000458, 0x00000000, 
    0xb8200200, 0x01000041, 0xc20000ff, 0x4c100200, 0x000000b1, 0xe2000002, 
    0xc8010002, 0x006c6c00, 0xe1030200, 0x2c100200, 0x0000006c, 0xe2000002, 
    0xc8010002, 0x00b16c00, 0xe1020200, 0x30100200, 0x0000006c, 0xe2000002, 
    0xc8040002, 0x006c6cc6, 0xec020101, 0xc8030002, 0x006c1a00, 0xa002fe00, 
    0xc8010001, 0x00b11bc6, 0xec020102, 0xc8010002, 0x006cb16c, 0xec020101, 
    0x05f81040, 0x00000688, 0x00000000, 0x05f82040, 0x00000688, 0x00000000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf020100, 
    0xc802803e, 0xa0a7a700, 0xaf020200, 0xc804803e, 0xa0a7a700, 0xaf020300, 
    0xc808803e, 0xa0a7a700, 0xaf020400, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc80f8002, 0x00000000, 0xe2010100, 0xc80f8000, 0xe0000000, 0x22616100, 
    0xc80f8001, 0xe0000000, 0x22626200, 0x4e4a0000, 0x1cb311f8, 0x587e5bd0
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexCxformEAlpha.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dVertexCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dVertexCxformEAlpha.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=3

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2
dcl_color1 o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r0.xw, r3.xy, r3.xy
    sge r3.z, r0.x, -r0.x
    exec
    mul r0.xyz, r3.xzy, c254.xy
    vfetch r1.xwyz, r0.x, color7
    serialize
    subsc r2.y, -c255.x, -r0.y
    rcp r2.x, r2.y
    mul r2.x, r3.x, r2.x
    frcs r2.x, r2.x
    exec
    mul r2.x, r2.y, r2.x
    truncs r2.x, r2.x
    cndeq r2.z, r2.x, r1.x, r1.z
    add r2.xy, r2.x, c254.zw
    cndeq r1.x, r2.y, r1.w, r2.z
    cndeq r3.x, r2.x, r1.y, r1.x
    exec
    vfetch r2, r3.x, color
    vfetch r1, r3.x, color1
    vfetch r3, r3.x, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.w
    mov o2, r2
    mov o3, r1
    mov o0, c[97+a0]
    mov o1, c[98+a0]

// PDB hint 4e4a0000-fbecfeb3-d576b3db

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dVertexCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dVertexCxformEAlpha[] =
{
    0x102a1101, 0x000001ec, 0x00000244, 0x00000024, 0x000000a8, 0x0000016c, 
    0x00000194, 0x00000000, 0x00000000, 0x50c76f38, 0x0000007c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x56657274, 
    0x65784378, 0x666f726d, 0x45416c70, 0x68612e68, 0x6c736c2e, 0x75706462, 
    0x000000c0, 0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 
    0x00000000, 0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 
    0x00000090, 0x00020061, 0x00300000, 0x0000009c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000204, 0x00300003, 0x00000000, 0x00000000, 0x00004084, 0x00000001, 
    0x00000004, 0x00000004, 0x00000290, 0x0007a012, 0x0010a01d, 0x0001a01e, 
    0x0030001f, 0x0000f050, 0x0001f151, 0x0002f2a0, 0x0003f3a1, 0x00001028, 
    0x00001029, 0x00001026, 0x00001027, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x40800000, 0xc0400000, 0xc0000000, 0x40000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 
    0x12000000, 0x7015301d, 0x00001200, 0xc2000000, 0x00005020, 0x00001200, 
    0xc4000000, 0x00005025, 0x00002200, 0x00000000, 0x14020000, 0x001b6c6c, 
    0x2000fe00, 0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 
    0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 
    0xe1000000, 0xc8030003, 0x00c40000, 0xe9000000, 0xc8090000, 0x00b0b000, 
    0xe0030300, 0xc8040003, 0x026c6c00, 0xe6000000, 0xc8070000, 0x00b4b000, 
    0xa103fe00, 0x05f81000, 0x00000458, 0x00000000, 0xb8200200, 0x01000041, 
    0xc20000ff, 0x4c100200, 0x000000b1, 0xe2000002, 0xc8010002, 0x006c6c00, 
    0xe1030200, 0x2c100200, 0x0000006c, 0xe2000002, 0xc8010002, 0x00b16c00, 
    0xe1020200, 0x30100200, 0x0000006c, 0xe2000002, 0xc8040002, 0x006c6cc6, 
    0xec020101, 0xc8030002, 0x006c1a00, 0xa002fe00, 0xc8010001, 0x00b11bc6, 
    0xec020102, 0xc8010003, 0x006cb16c, 0xec020101, 0x05f82060, 0x00000688, 
    0x00000000, 0x05f81060, 0x00000688, 0x00000000, 0x05f83060, 0x00000688, 
    0x00000000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 
    0xaf030100, 0xc802803e, 0xa0a7a700, 0xaf030200, 0xc804803e, 0xa0a7a700, 
    0xaf030300, 0xc808803e, 0xa0a7a700, 0xaf030400, 0x5c000000, 0x0000001b, 
    0xe2000000, 0xc80f8002, 0x00000000, 0xe2020200, 0xc80f8003, 0x00000000, 
    0xe2010100, 0xc80f8000, 0xe0000000, 0x22616100, 0xc80f8001, 0xe0000000, 
    0x22626200, 0x4e4a0000, 0xfbecfeb3, 0xd576b3db
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGTexTG.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGTexTG /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGTexTG.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
defextern const vfuniforms[48], float, vector, [1, 4], c145
defextern const vfuniforms[49], float, vector, [1, 4], c146
defextern const vfuniforms[50], float, vector, [1, 4], c147
defextern const vfuniforms[51], float, vector, [1, 4], c148
defextern const vfuniforms[52], float, vector, [1, 4], c149
defextern const vfuniforms[53], float, vector, [1, 4], c150
defextern const vfuniforms[54], float, vector, [1, 4], c151
defextern const vfuniforms[55], float, vector, [1, 4], c152
defextern const vfuniforms[56], float, vector, [1, 4], c153
defextern const vfuniforms[57], float, vector, [1, 4], c154
defextern const vfuniforms[58], float, vector, [1, 4], c155
defextern const vfuniforms[59], float, vector, [1, 4], c156
defextern const vfuniforms[60], float, vector, [1, 4], c157
defextern const vfuniforms[61], float, vector, [1, 4], c158
defextern const vfuniforms[62], float, vector, [1, 4], c159
defextern const vfuniforms[63], float, vector, [1, 4], c160
defextern const vfuniforms[64], float, vector, [1, 4], c161
defextern const vfuniforms[65], float, vector, [1, 4], c162
defextern const vfuniforms[66], float, vector, [1, 4], c163
defextern const vfuniforms[67], float, vector, [1, 4], c164
defextern const vfuniforms[68], float, vector, [1, 4], c165
defextern const vfuniforms[69], float, vector, [1, 4], c166
defextern const vfuniforms[70], float, vector, [1, 4], c167
defextern const vfuniforms[71], float, vector, [1, 4], c168
defextern const vfuniforms[72], float, vector, [1, 4], c169
defextern const vfuniforms[73], float, vector, [1, 4], c170
defextern const vfuniforms[74], float, vector, [1, 4], c171
defextern const vfuniforms[75], float, vector, [1, 4], c172
defextern const vfuniforms[76], float, vector, [1, 4], c173
defextern const vfuniforms[77], float, vector, [1, 4], c174
defextern const vfuniforms[78], float, vector, [1, 4], c175
defextern const vfuniforms[79], float, vector, [1, 4], c176
defextern const vfuniforms[80], float, vector, [1, 4], c177
defextern const vfuniforms[81], float, vector, [1, 4], c178
defextern const vfuniforms[82], float, vector, [1, 4], c179
defextern const vfuniforms[83], float, vector, [1, 4], c180
defextern const vfuniforms[84], float, vector, [1, 4], c181
defextern const vfuniforms[85], float, vector, [1, 4], c182
defextern const vfuniforms[86], float, vector, [1, 4], c183
defextern const vfuniforms[87], float, vector, [1, 4], c184
defextern const vfuniforms[88], float, vector, [1, 4], c185
defextern const vfuniforms[89], float, vector, [1, 4], c186
defextern const vfuniforms[90], float, vector, [1, 4], c187
defextern const vfuniforms[91], float, vector, [1, 4], c188
defextern const vfuniforms[92], float, vector, [1, 4], c189
defextern const vfuniforms[93], float, vector, [1, 4], c190
defextern const vfuniforms[94], float, vector, [1, 4], c191
defextern const vfuniforms[95], float, vector, [1, 4], c192
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 4, 0.5, -3, -2
def c254, 2.0999999, 1.10000002, 3.0999999, -2
def c255, 0, 0, 0, 0


    exec
    add r0.y, c0.w, c253.y
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.y
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r3.yz, r0.yyz
    adds r0.x, r3.zz
    sge r3.x, r0.x, -r0.x
    exec
    mul r1.xyz, r3.xzy, c253.xyx
    vfetch r0.xwyz, r1.y, color7
    serialize
    add r2, r1.zzxz, c254.xzwy
    rcp r1.w, r2.z
    mul r1.w, r3.z, r1.w
    frcs r1.w, r1.w
    exec
    mul r1.w, r2.z, r1.w
    truncs r3.x, r1.w
    cndeq r1.w, r3.x, r0.x, r0.z
    add r1.xy, r3.x, c253.zw
    cndeq r0.x, r1.y, r0.w, r1.w
    cndeq r0.x, r1.x, r0.y, r0.x
    exec
    vfetch r5, r0.x, color
    vfetch r0, r0.x, position
    alloc position
    exec
    movas r0._, r1.z
    dp4 oPos.x, r0.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r0.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r0.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r0.wzxy, c[4+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r1.z
    frc r6.xyz, r2.xyw
  + sgts r4.x, -r2.x
    sgt r3.xyz, r6.xzy, c255.x
  + sgts r4.y, -r2.y
    add r2.xyz, -r6.xzy, c254.xyz
  + sgts r4.z, -r2.w
    mov o2, r5
    dp4 o0.x, r0.wzxy, c[97+a0].wzxy
    exec
    mad r2.xyz, r4.xyz, r3.xzy, r2.xzy
    add r1.xyz, r2.xzy, r1.z
    movas r0._, r1.y
    dp4 o0.y, r0.wzxy, c[97+a0].wzxy
    movas r0._, r1.x
    dp4 o1.x, r0.wzxy, c[97+a0].wzxy
    exece
    movas r0._, r1.z
    dp4 o1.y, r0.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-1e111b59-4c43af36

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGTexTG.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGTexTG[] =
{
    0x102a1101, 0x000001e0, 0x000002b0, 0x00000024, 0x000000a0, 0x00000164, 
    0x0000018c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000074, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47546578, 0x54472e68, 0x6c736c2e, 0x75706462, 0x000000c0, 0x0000001c, 
    0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x000000ac, 
    0x00000058, 0x00020000, 0x00010000, 0x00000064, 0x00000000, 0x00000074, 
    0x00020001, 0x00600000, 0x00000080, 0x00000000, 0x00000090, 0x00020061, 
    0x00600000, 0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 
    0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000270, 0x00200006, 
    0x00000000, 0x00000000, 0x00002063, 0x00000001, 0x00000003, 0x00000005, 
    0x00000290, 0x0007a013, 0x0010a01e, 0x0030001f, 0x00003050, 0x00023151, 
    0x0004f2a0, 0x0000002a, 0x0000102e, 0x00000030, 0x00001032, 0x00001029, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x3f000000, 
    0xc0400000, 0xc0000000, 0x40066666, 0x3f8ccccd, 0x40466666, 0xc0000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00006006, 0x600c1200, 
    0x12000000, 0x20246012, 0x60181200, 0x12000000, 0x3005201e, 0x00001200, 
    0xc2000000, 0x00005020, 0x00001200, 0xc4000000, 0x00006025, 0x602b1200, 
    0x12000000, 0x00002031, 0x00002200, 0x00000000, 0x14020000, 0x001bb16c, 
    0x2000fd00, 0x04410000, 0x00b100b1, 0xc90000fd, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 
    0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 
    0xe1000000, 0xc8060003, 0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 
    0xe2000003, 0xc8010003, 0x026c6c00, 0xe6000000, 0xc8070001, 0x00b46000, 
    0xa103fd00, 0x45f80020, 0x00000458, 0x00000000, 0xc80f0002, 0x00e69400, 
    0xa001fe00, 0x4c800100, 0x000000c6, 0xe2000002, 0xc8080001, 0x00c61b00, 
    0xe1030100, 0x2c800100, 0x0000001b, 0xe2000001, 0xc8080001, 0x00c61b00, 
    0xe1020100, 0x30100300, 0x0000001b, 0xe2000001, 0xc8080001, 0x006c6cc6, 
    0xec030000, 0xc8030001, 0x006c1a00, 0xa003fd00, 0xc8010000, 0x00b11b1b, 
    0xec010001, 0xc8010000, 0x006cb16c, 0xec010000, 0x05f85000, 0x00000688, 
    0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0x5c000000, 0x000000c6, 
    0xe2000001, 0xc801803e, 0xa0a7a700, 0xaf000100, 0xc802803e, 0xa0a7a700, 
    0xaf000200, 0xc804803e, 0xa0a7a700, 0xaf000300, 0xc808803e, 0xa0a7a700, 
    0xaf000400, 0x5c000000, 0x000000c6, 0xe2000001, 0x20170406, 0x0110006c, 
    0xe8020002, 0x20270403, 0x01b46cb1, 0xa506ff02, 0x20470402, 0x05b4c01b, 
    0xa006fe02, 0xc80f8002, 0x00000000, 0xe2050500, 0xc8018000, 0xa0a7a700, 
    0xaf006100, 0xc8070002, 0x00c0b4b4, 0xeb040302, 0xc8070001, 0x00b4c600, 
    0xe0020100, 0x5c000000, 0x000000b1, 0xe2000001, 0xc8028000, 0xa0a7a700, 
    0xaf006100, 0x5c000000, 0x0000006c, 0xe2000001, 0xc8018001, 0xa0a7a700, 
    0xaf006100, 0x5c000000, 0x000000c6, 0xe2000001, 0xc8028001, 0xa0a7a700, 
    0xaf006100, 0x4e4a0000, 0x1e111b59, 0x4c43af36
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGTexTGCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGTexTGCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGTexTGCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97    144
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
defextern const vfuniforms[48], float, vector, [1, 4], c145
defextern const vfuniforms[49], float, vector, [1, 4], c146
defextern const vfuniforms[50], float, vector, [1, 4], c147
defextern const vfuniforms[51], float, vector, [1, 4], c148
defextern const vfuniforms[52], float, vector, [1, 4], c149
defextern const vfuniforms[53], float, vector, [1, 4], c150
defextern const vfuniforms[54], float, vector, [1, 4], c151
defextern const vfuniforms[55], float, vector, [1, 4], c152
defextern const vfuniforms[56], float, vector, [1, 4], c153
defextern const vfuniforms[57], float, vector, [1, 4], c154
defextern const vfuniforms[58], float, vector, [1, 4], c155
defextern const vfuniforms[59], float, vector, [1, 4], c156
defextern const vfuniforms[60], float, vector, [1, 4], c157
defextern const vfuniforms[61], float, vector, [1, 4], c158
defextern const vfuniforms[62], float, vector, [1, 4], c159
defextern const vfuniforms[63], float, vector, [1, 4], c160
defextern const vfuniforms[64], float, vector, [1, 4], c161
defextern const vfuniforms[65], float, vector, [1, 4], c162
defextern const vfuniforms[66], float, vector, [1, 4], c163
defextern const vfuniforms[67], float, vector, [1, 4], c164
defextern const vfuniforms[68], float, vector, [1, 4], c165
defextern const vfuniforms[69], float, vector, [1, 4], c166
defextern const vfuniforms[70], float, vector, [1, 4], c167
defextern const vfuniforms[71], float, vector, [1, 4], c168
defextern const vfuniforms[72], float, vector, [1, 4], c169
defextern const vfuniforms[73], float, vector, [1, 4], c170
defextern const vfuniforms[74], float, vector, [1, 4], c171
defextern const vfuniforms[75], float, vector, [1, 4], c172
defextern const vfuniforms[76], float, vector, [1, 4], c173
defextern const vfuniforms[77], float, vector, [1, 4], c174
defextern const vfuniforms[78], float, vector, [1, 4], c175
defextern const vfuniforms[79], float, vector, [1, 4], c176
defextern const vfuniforms[80], float, vector, [1, 4], c177
defextern const vfuniforms[81], float, vector, [1, 4], c178
defextern const vfuniforms[82], float, vector, [1, 4], c179
defextern const vfuniforms[83], float, vector, [1, 4], c180
defextern const vfuniforms[84], float, vector, [1, 4], c181
defextern const vfuniforms[85], float, vector, [1, 4], c182
defextern const vfuniforms[86], float, vector, [1, 4], c183
defextern const vfuniforms[87], float, vector, [1, 4], c184
defextern const vfuniforms[88], float, vector, [1, 4], c185
defextern const vfuniforms[89], float, vector, [1, 4], c186
defextern const vfuniforms[90], float, vector, [1, 4], c187
defextern const vfuniforms[91], float, vector, [1, 4], c188
defextern const vfuniforms[92], float, vector, [1, 4], c189
defextern const vfuniforms[93], float, vector, [1, 4], c190
defextern const vfuniforms[94], float, vector, [1, 4], c191
defextern const vfuniforms[95], float, vector, [1, 4], c192
defextern const vfuniforms[96], float, vector, [1, 4], c193
defextern const vfuniforms[97], float, vector, [1, 4], c194
defextern const vfuniforms[98], float, vector, [1, 4], c195
defextern const vfuniforms[99], float, vector, [1, 4], c196
defextern const vfuniforms[100], float, vector, [1, 4], c197
defextern const vfuniforms[101], float, vector, [1, 4], c198
defextern const vfuniforms[102], float, vector, [1, 4], c199
defextern const vfuniforms[103], float, vector, [1, 4], c200
defextern const vfuniforms[104], float, vector, [1, 4], c201
defextern const vfuniforms[105], float, vector, [1, 4], c202
defextern const vfuniforms[106], float, vector, [1, 4], c203
defextern const vfuniforms[107], float, vector, [1, 4], c204
defextern const vfuniforms[108], float, vector, [1, 4], c205
defextern const vfuniforms[109], float, vector, [1, 4], c206
defextern const vfuniforms[110], float, vector, [1, 4], c207
defextern const vfuniforms[111], float, vector, [1, 4], c208
defextern const vfuniforms[112], float, vector, [1, 4], c209
defextern const vfuniforms[113], float, vector, [1, 4], c210
defextern const vfuniforms[114], float, vector, [1, 4], c211
defextern const vfuniforms[115], float, vector, [1, 4], c212
defextern const vfuniforms[116], float, vector, [1, 4], c213
defextern const vfuniforms[117], float, vector, [1, 4], c214
defextern const vfuniforms[118], float, vector, [1, 4], c215
defextern const vfuniforms[119], float, vector, [1, 4], c216
defextern const vfuniforms[120], float, vector, [1, 4], c217
defextern const vfuniforms[121], float, vector, [1, 4], c218
defextern const vfuniforms[122], float, vector, [1, 4], c219
defextern const vfuniforms[123], float, vector, [1, 4], c220
defextern const vfuniforms[124], float, vector, [1, 4], c221
defextern const vfuniforms[125], float, vector, [1, 4], c222
defextern const vfuniforms[126], float, vector, [1, 4], c223
defextern const vfuniforms[127], float, vector, [1, 4], c224
defextern const vfuniforms[128], float, vector, [1, 4], c225
defextern const vfuniforms[129], float, vector, [1, 4], c226
defextern const vfuniforms[130], float, vector, [1, 4], c227
defextern const vfuniforms[131], float, vector, [1, 4], c228
defextern const vfuniforms[132], float, vector, [1, 4], c229
defextern const vfuniforms[133], float, vector, [1, 4], c230
defextern const vfuniforms[134], float, vector, [1, 4], c231
defextern const vfuniforms[135], float, vector, [1, 4], c232
defextern const vfuniforms[136], float, vector, [1, 4], c233
defextern const vfuniforms[137], float, vector, [1, 4], c234
defextern const vfuniforms[138], float, vector, [1, 4], c235
defextern const vfuniforms[139], float, vector, [1, 4], c236
defextern const vfuniforms[140], float, vector, [1, 4], c237
defextern const vfuniforms[141], float, vector, [1, 4], c238
defextern const vfuniforms[142], float, vector, [1, 4], c239
defextern const vfuniforms[143], float, vector, [1, 4], c240
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_texcoord3 o3.xy
dcl_color o4

def c252, 0, 0, 0, 0
def c253, 2, -3, -2, 0.5
def c254, 2.0999999, 3.0999999, 1.10000002, 0
def c255, 4, 6, 0, 0


    exec
    add r0.y, c0.w, c253.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c253.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r0.xz, r0.zy
    add r0.y, r0.x, r0.x
  + mulsc r0.w, c253.w, r0.x
    vfetch r1.xwyz, r0.w, color7
    exec
    serialize
    sge r0.y, r0.y, -r0.y
    mul r0.yzw, r0.zzzy, c255.xxyx
    subsc r2.x, -c253.x, -r0.w
    rcp r2.y, r2.x
    mul r0.x, r0.x, r2.y
    frcs r0.x, r0.x
    exec
    mul r0.x, r2.x, r0.x
    truncs r0.x, r0.x
    cndeq r2.w, r0.x, r1.x, r1.z
    add r2.xyz, r0.zx, c253.xyz
    cndeq r1.x, r2.z, r1.w, r2.w
    cndeq r1.x, r2.y, r1.y, r1.x
    exec
    vfetch r3, r1.x, color
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.yzw, r2.x, c254.xxyz
  + movas r0._, r0.y
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.z
    mov o4, r3
    dp4 o2.x, r1.wzxy, c[99+a0].wzxy
    mov o0, c[97+a0]
    mov o1, c[98+a0]
    frc r0.xyz, r2.ywz
  + sgts r4.x, -r2.y
    exec
    sgt r3.xyz, r0.xzy, c254.w
  + sgts r4.y, -r2.w
    add r0.xyz, -r0.xzy, c254.xyz
  + sgts r4.z, -r2.z
    mad r0.xyz, r4.xyz, r3.xzy, r0.xzy
    add r0.xyz, r0.xzy, r2.x
    movas r0._, r0.z
    dp4 o2.y, r1.wzxy, c[97+a0].wzxy
    exece
    movas r0._, r0.x
    dp4 o3.x, r1.wzxy, c[97+a0].wzxy
    movas r0._, r0.y
    dp4 o3.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-d751792f-05a16c13

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGTexTGCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGTexTGCxform[] =
{
    0x102a1101, 0x000001f8, 0x000002c8, 0x00000024, 0x000000a8, 0x0000016c, 
    0x00000194, 0x00000000, 0x00000000, 0x50c76f38, 0x0000007a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47546578, 0x54474378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x000000c0, 0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 
    0x00000000, 0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 
    0x00000090, 0x00020061, 0x00900000, 0x0000009c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00900000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000288, 0x00400004, 0x00000000, 0x00000000, 0x000040a5, 0x00000001, 
    0x00000003, 0x00000007, 0x00000290, 0x0007a011, 0x0010a01e, 0x0030001f, 
    0x0000f050, 0x0001f151, 0x00023252, 0x00043353, 0x0006f4a0, 0x00001028, 
    0x00001029, 0x00000027, 0x00001030, 0x00000032, 0x00001034, 0x00001026, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0xc0400000, 
    0xc0000000, 0x3f000000, 0x40066666, 0x40466666, 0x3f8ccccd, 0x00000000, 
    0x40800000, 0x40c00000, 0x00000000, 0x00000000, 0x00006006, 0x600c1200, 
    0x12020400, 0x00026012, 0x60181200, 0x12000000, 0x3005201e, 0x00001200, 
    0xc2000000, 0x00005020, 0x00001200, 0xc4000000, 0x00006025, 0x602b1200, 
    0x12000000, 0x00004031, 0x00002200, 0x00000000, 0x14020000, 0x001b1b6c, 
    0x2000fd00, 0x04410000, 0x00b1001b, 0xc90000fd, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 
    0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 
    0xe1000000, 0xc8050000, 0x00b20000, 0xe9000000, 0xa8820000, 0x006c6c00, 
    0xc00000fd, 0xc5f81000, 0x00000458, 0x00000000, 0xc8020000, 0x02b1b100, 
    0xe6000000, 0xc80e0000, 0x00867c00, 0xa100ff00, 0xb8100200, 0x01000043, 
    0xc20000fd, 0x4c200200, 0x0000006c, 0xe2000002, 0xc8010000, 0x006cb100, 
    0xe1000200, 0x2c100000, 0x0000006c, 0xe2000000, 0xc8010000, 0x006c6c00, 
    0xe1020000, 0x30100000, 0x0000006c, 0xe2000000, 0xc8080002, 0x006c6cc6, 
    0xec000101, 0xc8070002, 0x006ec000, 0xa000fd00, 0xc8010001, 0x00c61b1b, 
    0xec020102, 0xc8010001, 0x00b1b16c, 0xec020101, 0x05f83020, 0x00000688, 
    0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c0e0002, 0x006cfcb1, 
    0xa002fe00, 0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 0xa0a7a700, 
    0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 0xa0a7a700, 
    0xaf010400, 0x5c000000, 0x000000c6, 0xe2000000, 0xc80f8004, 0x00000000, 
    0xe2030300, 0xc8018002, 0xa0a7a700, 0xaf016300, 0xc80f8000, 0xe0000000, 
    0x22616100, 0xc80f8001, 0xe0000000, 0x22626200, 0x20170400, 0x01c900b1, 
    0xe8020002, 0x20270403, 0x01b41b1b, 0xa500fe02, 0x20470400, 0x05b4c0c6, 
    0xa000fe02, 0xc8070000, 0x00c0b4b4, 0xeb040300, 0xc8070000, 0x00b46c00, 
    0xe0000200, 0x5c000000, 0x000000c6, 0xe2000000, 0xc8028002, 0xa0a7a700, 
    0xaf016100, 0x5c000000, 0x0000006c, 0xe2000000, 0xc8018003, 0xa0a7a700, 
    0xaf016100, 0x5c000000, 0x000000b1, 0xe2000000, 0xc8028003, 0xa0a7a700, 
    0xaf016100, 0x4e4a0000, 0xd751792f, 0x05a16c13
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGVertex.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGVertex /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGVertex.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1
dcl_color1 o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -3, -2, 0.5, 4
def c255, 1.10000002, 0, 0, 0


    exec
    add r0.y, c0.w, c254.z
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.z
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r0.zw, r0.xxxz
    mul r2.xz, r0.zw, c254.zw
  + adds r0.y, r0.ww
    vfetch r1.xwyz, r2.x, color7
    exec
    serialize
    addsc r0.x, c255.x, r0.y
    frc r2.y, r0.x
  + sgts r2.w, -r0.x
    add r0.x, -r2.y, c255.x
  + sgts r2.y, r2.y
    mad r0.x, r2.w, r2.y, r0.x
    add r2.xy, r0.xz, r0.yz
    sge r2.w, r2.y, -r2.y
    exec
    mad r3.x, r2.w, c254.w, c254.y
    rcp r2.w, r3.x
    mul r2.w, r0.z, r2.w
    frcs r2.w, r2.w
    mul r2.w, r3.x, r2.w
    truncs r2.w, r2.w
    exec
    cndeq r3.x, r2.w, r1.x, r1.z
    add r2.yw, r2.w, c254.xxy
    cndeq r1.x, r2.w, r1.w, r3.x
    cndeq r1.x, r2.y, r1.y, r1.x
    vfetch r4, r1.x, color
    vfetch r3, r1.x, color1
    exec
    vfetch r1, r1.x, position
    alloc position
    exec
    movas r0._, r2.z
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.y
    mov o1, r4
    mov o2, r3
    dp4 o0.x, r1.wzxy, c[97+a0].wzxy
    movas r0._, r2.x
    dp4 o0.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-03a8110c-5acd7b6c

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGVertex.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGVertex[] =
{
    0x102a1101, 0x000001e4, 0x00000280, 0x00000024, 0x000000a4, 0x00000168, 
    0x00000190, 0x00000000, 0x00000000, 0x50c76f38, 0x00000075, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47566572, 0x7465782e, 0x686c736c, 0x2e757064, 0x62000000, 0x000000c0, 
    0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 0x00000000, 
    0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 0x00000090, 
    0x00020061, 0x00300000, 0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000240, 
    0x00200004, 0x00000000, 0x00000000, 0x00002863, 0x00000001, 0x00000004, 
    0x00000004, 0x00000290, 0x0007a010, 0x0010a021, 0x0001a022, 0x00300023, 
    0x00003050, 0x0002f1a0, 0x0003f2a1, 0x0000002c, 0x0000102e, 0x0000102a, 
    0x0000102b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0xc0400000, 0xc0000000, 0x3f000000, 
    0x40800000, 0x3f8ccccd, 0x00000000, 0x00000000, 0x00000000, 0x00006005, 
    0x600b1200, 0x12020400, 0x00026011, 0x60171200, 0x12000000, 0x0500601d, 
    0x10231203, 0x12001001, 0x00000000, 0x5024c200, 0x12000000, 0x00000000, 
    0x6029c400, 0x22000000, 0x14020000, 0x001bc66c, 0x2000fe00, 0x04410000, 
    0x00b100c6, 0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 
    0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 
    0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 
    0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc80c0000, 
    0x00ec0000, 0xe9000000, 0x00250002, 0x001a1a1b, 0xa100fe00, 0x05f81040, 
    0x00000458, 0x00000000, 0xb0100000, 0x00000041, 0xc20000ff, 0x20820202, 
    0x016c006c, 0xe8000000, 0x20210200, 0x04b16cb1, 0xa002ff02, 0xc8010000, 
    0x001bb16c, 0xeb020200, 0xc8030002, 0x00c4c500, 0xe0000000, 0xc8080002, 
    0x02b1b100, 0xe6020200, 0xc8010003, 0x001b1bb1, 0x8b02fefe, 0x4c800200, 
    0x0000006c, 0xe2000003, 0xc8080002, 0x00c61b00, 0xe1000200, 0x2c800200, 
    0x0000001b, 0xe2000002, 0xc8080002, 0x006c1b00, 0xe1030200, 0x30800200, 
    0x0000001b, 0xe2000002, 0xc8010003, 0x001b6cc6, 0xec020101, 0xc80a0002, 
    0x001bbc00, 0xa002fe00, 0xc8010001, 0x001b1b6c, 0xec020103, 0xc8010001, 
    0x00b1b16c, 0xec020101, 0x05f84020, 0x00000688, 0x00000000, 0x05f83020, 
    0x00000688, 0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c000000, 
    0x000000c6, 0xe2000002, 0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 
    0xa0a7a700, 0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 
    0xa0a7a700, 0xaf010400, 0x5c000000, 0x000000b1, 0xe2000000, 0xc80f8001, 
    0x00000000, 0xe2040400, 0xc80f8002, 0x00000000, 0xe2030300, 0xc8018000, 
    0xa0a7a700, 0xaf016100, 0x5c000000, 0x0000006c, 0xe2000002, 0xc8028000, 
    0xa0a7a700, 0xaf016100, 0x4e4a0000, 0x03a8110c, 0x5acd7b6c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGVertexCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTexTGVertexCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTexTGVertexCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
defextern const vfuniforms[48], float, vector, [1, 4], c145
defextern const vfuniforms[49], float, vector, [1, 4], c146
defextern const vfuniforms[50], float, vector, [1, 4], c147
defextern const vfuniforms[51], float, vector, [1, 4], c148
defextern const vfuniforms[52], float, vector, [1, 4], c149
defextern const vfuniforms[53], float, vector, [1, 4], c150
defextern const vfuniforms[54], float, vector, [1, 4], c151
defextern const vfuniforms[55], float, vector, [1, 4], c152
defextern const vfuniforms[56], float, vector, [1, 4], c153
defextern const vfuniforms[57], float, vector, [1, 4], c154
defextern const vfuniforms[58], float, vector, [1, 4], c155
defextern const vfuniforms[59], float, vector, [1, 4], c156
defextern const vfuniforms[60], float, vector, [1, 4], c157
defextern const vfuniforms[61], float, vector, [1, 4], c158
defextern const vfuniforms[62], float, vector, [1, 4], c159
defextern const vfuniforms[63], float, vector, [1, 4], c160
defextern const vfuniforms[64], float, vector, [1, 4], c161
defextern const vfuniforms[65], float, vector, [1, 4], c162
defextern const vfuniforms[66], float, vector, [1, 4], c163
defextern const vfuniforms[67], float, vector, [1, 4], c164
defextern const vfuniforms[68], float, vector, [1, 4], c165
defextern const vfuniforms[69], float, vector, [1, 4], c166
defextern const vfuniforms[70], float, vector, [1, 4], c167
defextern const vfuniforms[71], float, vector, [1, 4], c168
defextern const vfuniforms[72], float, vector, [1, 4], c169
defextern const vfuniforms[73], float, vector, [1, 4], c170
defextern const vfuniforms[74], float, vector, [1, 4], c171
defextern const vfuniforms[75], float, vector, [1, 4], c172
defextern const vfuniforms[76], float, vector, [1, 4], c173
defextern const vfuniforms[77], float, vector, [1, 4], c174
defextern const vfuniforms[78], float, vector, [1, 4], c175
defextern const vfuniforms[79], float, vector, [1, 4], c176
defextern const vfuniforms[80], float, vector, [1, 4], c177
defextern const vfuniforms[81], float, vector, [1, 4], c178
defextern const vfuniforms[82], float, vector, [1, 4], c179
defextern const vfuniforms[83], float, vector, [1, 4], c180
defextern const vfuniforms[84], float, vector, [1, 4], c181
defextern const vfuniforms[85], float, vector, [1, 4], c182
defextern const vfuniforms[86], float, vector, [1, 4], c183
defextern const vfuniforms[87], float, vector, [1, 4], c184
defextern const vfuniforms[88], float, vector, [1, 4], c185
defextern const vfuniforms[89], float, vector, [1, 4], c186
defextern const vfuniforms[90], float, vector, [1, 4], c187
defextern const vfuniforms[91], float, vector, [1, 4], c188
defextern const vfuniforms[92], float, vector, [1, 4], c189
defextern const vfuniforms[93], float, vector, [1, 4], c190
defextern const vfuniforms[94], float, vector, [1, 4], c191
defextern const vfuniforms[95], float, vector, [1, 4], c192
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=4

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3
dcl_color1 o4

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, 2, -3, -2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyw, r2.zwy, c254.yyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.z, r2.x
    mul r0.z, r2.y, r0.z
    frcs r0.z, r0.z
    exec
    mul r0.z, r2.x, r0.z
    truncs r0.z, r0.z
    cndeq r2.w, r0.z, r1.x, r1.z
    add r2.xyz, r0.xz, c255.xyz
    cndeq r1.x, r2.z, r1.w, r2.w
    cndeq r1.x, r2.y, r1.y, r1.x
    exec
    vfetch r4, r1.x, color
    vfetch r3, r1.x, color1
    vfetch r1, r1.x, position
    alloc position
    exec
    add r2.w, r2.x, c254.z
  + movas r0._, r0.x
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exec
    movas r0._, r0.x
    mov o3, r4
    mov o4, r3
    dp4 o2.x, r1.wzxy, c[99+a0].wzxy
    mov o0, c[97+a0]
    mov o1, c[98+a0]
    exece
    frc r0.y, r2.w
  + sgts r0.z, -r2.w
    add r0.x, -r0.y, c254.z
  + sgts r0.y, r0.y
    mad r0.x, r0.z, r0.y, r0.x
    add r0.x, r0.x, r2.x
    movas r0._, r0.x
    dp4 o2.y, r1.wzxy, c[97+a0].wzxy

// PDB hint 4e4a0000-24b87014-996bcf15

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTexTGVertexCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTexTGVertexCxform[] =
{
    0x102a1101, 0x000001f8, 0x00000298, 0x00000024, 0x000000a8, 0x0000016c, 
    0x00000194, 0x00000000, 0x00000000, 0x50c76f38, 0x0000007b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657854, 
    0x47566572, 0x74657843, 0x78666f72, 0x6d2e686c, 0x736c2e75, 0x70646200, 
    0x000000c0, 0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 
    0x00000000, 0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 
    0x00000090, 0x00020061, 0x00600000, 0x0000009c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000258, 0x00400004, 0x00000000, 0x00000000, 0x000048a5, 0x00000001, 
    0x00000004, 0x00000006, 0x00000290, 0x0007a012, 0x0010a01d, 0x0001a01e, 
    0x0030001f, 0x0000f050, 0x0001f151, 0x00023252, 0x0004f3a0, 0x0005f4a1, 
    0x00001029, 0x0000102a, 0x00000028, 0x00001030, 0x00001026, 0x00001027, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 0x00000000, 
    0x40000000, 0xc0400000, 0xc0000000, 0x3f000000, 0x00006005, 0x600b1200, 
    0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x7015301d, 0x00001200, 
    0xc2000000, 0x00005020, 0x00001200, 0xc4000000, 0x00006025, 0x602b1200, 
    0x22000000, 0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 0x00b1001b, 
    0xc90000ff, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 
    0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 
    0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 
    0xe9000000, 0x00100000, 0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 
    0xe6000000, 0xc80b0000, 0x00ba6100, 0xa102fe00, 0xc5f81000, 0x00000458, 
    0x00000000, 0xb8100200, 0x01000041, 0xc20000ff, 0x4c400000, 0x0000006c, 
    0xe2000002, 0xc8040000, 0x00b1c600, 0xe1020000, 0x2c400000, 0x000000c6, 
    0xe2000000, 0xc8040000, 0x006cc600, 0xe1020000, 0x30400000, 0x000000c6, 
    0xe2000000, 0xc8080002, 0x00c66cc6, 0xec000101, 0xc8070002, 0x00c4c000, 
    0xa000ff00, 0xc8010001, 0x00c61b1b, 0xec020102, 0xc8010001, 0x00b1b16c, 
    0xec020101, 0x05f84020, 0x00000688, 0x00000000, 0x05f83020, 0x00000688, 
    0x00000000, 0x05f81020, 0x00000688, 0x00000000, 0x5c080002, 0x006cc66c, 
    0xa002fe00, 0xc801803e, 0xa0a7a700, 0xaf010100, 0xc802803e, 0xa0a7a700, 
    0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 0xc808803e, 0xa0a7a700, 
    0xaf010400, 0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8003, 0x00000000, 
    0xe2040400, 0xc80f8004, 0x00000000, 0xe2030300, 0xc8018002, 0xa0a7a700, 
    0xaf016300, 0xc80f8000, 0xe0000000, 0x22616100, 0xc80f8001, 0xe0000000, 
    0x22626200, 0x20420000, 0x011b001b, 0xe8020002, 0x20210000, 0x04b1c6b1, 
    0xa000fe00, 0xc8010000, 0x00c6b16c, 0xeb000000, 0xc8010000, 0x006c6c00, 
    0xe0000200, 0x5c000000, 0x0000006c, 0xe2000000, 0xc8028002, 0xa0a7a700, 
    0xaf016100, 0x4e4a0000, 0x24b87014, 0x996bcf15
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VSolid.hlsl.h /Vn
//    pBinary_X360_VSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VSolid.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config VsResource=1

dcl_index r0.x


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-cddaf91f-b517f5e1

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VSolid[] =
{
    0x102a1101, 0x00000110, 0x00000054, 0x00000024, 0x00000088, 0x00000000, 
    0x000000e4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56536f6c, 0x69642e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 
    0x0000004b, 0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00020000, 0x00020000, 0x00000034, 0x00000000, 0x6d767000, 
    0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000054, 0x00010000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000000, 
    0x00000290, 0x00000003, 0x10011003, 0x00001200, 0xc2000000, 0x00002004, 
    0x00001200, 0xc4000000, 0x00000003, 0x00002200, 0x00000000, 0x05f80000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 0xc802803e, 
    0x00a7a700, 0xaf000100, 0x4e4a0000, 0xcddaf91f, 0xb517f5e1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolid.hlsl.h /Vn
//    pBinary_X360_FSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolid.hlsl
//
//
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxmul, float, vector, [1, 4], c0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1


    alloc colors
    exece
    mov oC0, c0

// PDB hint 4e4a0000-68093ab3-7b0acd9b

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FSolid[] =
{
    0x102a1100, 0x00000108, 0x00000024, 0x00000024, 0x00000088, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46536f6c, 0x69642e68, 0x6c736c2e, 0x75706462, 0x0000005c, 0x0000001c, 
    0x0000004f, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000048, 
    0x00000030, 0x00020000, 0x00010000, 0x00000038, 0x00000000, 0x63786d75, 
    0x6c00abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000024, 
    0x10000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 
    0x00000000, 0x1001c400, 0x22000000, 0xc80f8000, 0x00000000, 0x22000000, 
    0x4e4a0000, 0x68093ab3, 0x7b0acd9b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolidMul.hlsl.h /Vn
//    pBinary_X360_FSolidMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolidMul.hlsl
//
//
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxmul, float, vector, [1, 4], c0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1


    alloc colors
    exece
    mul oC0.xyz, c0.xyz, c0.w
  + movs oC0.w, c0.w

// PDB hint 4e4a0000-2512fbfb-bf09fae7

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FSolidMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FSolidMul[] =
{
    0x102a1100, 0x0000010c, 0x00000024, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46536f6c, 0x69644d75, 0x6c2e686c, 0x736c2e75, 0x70646200, 0x0000005c, 
    0x0000001c, 0x0000004f, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000048, 0x00000030, 0x00020000, 0x00010000, 0x00000038, 0x00000000, 
    0x63786d75, 0x6c00abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000024, 0x10000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000001, 0x00000000, 0x1001c400, 0x22000000, 0x14878000, 0x00c01b1b, 
    0x01000000, 0x4e4a0000, 0x2512fbfb, 0xbf09fae7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolidInv.hlsl.h /Vn
//    pBinary_X360_FSolidInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FSolidInv.hlsl
//
//
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxmul, float, vector, [1, 4], c0
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1


    alloc colors
    exece
    mov oC0, c0.w

// PDB hint 4e4a0000-378d5642-442865b1

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FSolidInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FSolidInv[] =
{
    0x102a1100, 0x0000010c, 0x00000024, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46536f6c, 0x6964496e, 0x762e686c, 0x736c2e75, 0x70646200, 0x0000005c, 
    0x0000001c, 0x0000004f, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000048, 0x00000030, 0x00020000, 0x00010000, 0x00000038, 0x00000000, 
    0x63786d75, 0x6c00abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000024, 0x10000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000001, 0x00000000, 0x1001c400, 0x22000000, 0xc80f8000, 0x001b1b00, 
    0x22000000, 0x4e4a0000, 0x378d5642, 0x442865b1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VText.hlsl.h /Vn
//    pBinary_X360_VText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VText.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1


    exec
    vfetch r1, r0.x, color
    vfetch r0._xy_, r0.x, texcoord
    vfetch r2, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r2.wzxy, c2.wzxy
    dp4 oPos.y, r2.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.yz
    mad o1, r1, c1, c0

// PDB hint 4e4a0000-8b4a62b1-59bd536b

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VText[] =
{
    0x102a1101, 0x00000170, 0x00000084, 0x00000024, 0x00000088, 0x00000000, 
    0x0000012c, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x742e686c, 0x736c2e75, 0x70646200, 0x000000a0, 0x0000001c, 
    0x00000093, 0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 
    0x00000058, 0x00020000, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 
    0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x00000076, 0x00020002, 
    0x00020000, 0x0000007c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 
    0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000084, 0x00110002, 
    0x00000000, 0x00000000, 0x00001842, 0x00000001, 0x00000003, 0x00000002, 
    0x00000290, 0x0010a003, 0x00005004, 0x00200005, 0x00003050, 0x0001f1a0, 
    0x00001008, 0x00001009, 0x70153003, 0x00001200, 0xc2000000, 0x00002006, 
    0x00001200, 0xc4000000, 0x00002008, 0x00002200, 0x00000000, 0x05f81000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000e47, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf020200, 0xc802803e, 
    0x00a7a700, 0xaf020300, 0xc8038000, 0x00c5c500, 0xe2000000, 0xc80f8001, 
    0x00000000, 0x8b010100, 0x4e4a0000, 0x8b4a62b1, 0x59bd536b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FText.hlsl.h /Vn
//    pBinary_X360_FText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FText.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0.1w__, r0.xy, tf0
    alloc colors
    exece
    mul oC0, r0.xxxy, r1

// PDB hint 4e4a0000-64b40ec6-48d8b724

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FText[] =
{
    0x102a1100, 0x0000010c, 0x0000003c, 0x00000024, 0x00000088, 0x00000000, 
    0x000000e4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x742e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 0x10000100, 
    0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 0x00003050, 
    0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 0x00001003, 0x00002200, 
    0x00000000, 0x10080001, 0x1f1fffdd, 0x00004000, 0xc80f8000, 0x00ac0000, 
    0xe1000100, 0x4e4a0000, 0x64b40ec6, 0x48d8b724
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTextMul.hlsl.h /Vn
//    pBinary_X360_FTextMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTextMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    muls r0.y, r1.xw
    mul r0.w, r0.x, r1.w
  + movs r0._, r0.y
    mul r0.yz, r0.w, r1.yyz
  + muls_prev r0.x, r0.x
    mov oC0, r0

// PDB hint 4e4a0000-7517c2c1-e8af8a45

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTextMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTextMul[] =
{
    0x102a1100, 0x00000110, 0x00000060, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x744d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000060, 
    0x10000100, 0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 
    0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 0x00004003, 
    0x00002200, 0x00000000, 0x10080001, 0x1f1ffffb, 0x00004000, 0x08200000, 
    0x0000006b, 0xe2000001, 0x14080000, 0x006c1bb1, 0xe1000100, 0x0c160000, 
    0x001bc16c, 0xe1000100, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 
    0x7517c2c1, 0xe8af8a45
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTextInv.hlsl.h /Vn
//    pBinary_X360_FTextInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTextInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0.w___, r0.xy, tf0
    alloc colors
    exece
    mul oC0, r0.x, r1.w

// PDB hint 4e4a0000-547c6853-744a40ff

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTextInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTextInv[] =
{
    0x102a1100, 0x00000110, 0x0000003c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x0000005e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x74496e76, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00010000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 
    0x10000100, 0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 
    0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 0x00001003, 
    0x00002200, 0x00000000, 0x10080001, 0x1f1ffffb, 0x00004000, 0xc80f8000, 
    0x006c1b00, 0xe1000100, 0x4e4a0000, 0x547c6853, 0x744a40ff
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTextColor.hlsl.h /Vn
//    pBinary_X360_VTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTextColor.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy


    exec
    vfetch r0._xy_, r0.x, texcoord
    vfetch r1, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r1.wzxy, c0.wzxy
    dp4 oPos.y, r1.wzxy, c1.wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.yz

// PDB hint 4e4a0000-2fce967a-4f3a13e5

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTextColor[] =
{
    0x102a1101, 0x00000120, 0x0000006c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f38, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x74436f6c, 0x6f722e68, 0x6c736c2e, 0x75706462, 0x00000058, 
    0x0000001c, 0x0000004b, 0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00020000, 0x00020000, 0x00000034, 0x00000000, 
    0x6d767000, 0x00010003, 0x00010004, 0x00020000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 
    0x00010001, 0x00000000, 0x00000000, 0x00000821, 0x00000001, 0x00000002, 
    0x00000001, 0x00000290, 0x00105003, 0x00200004, 0x00003050, 0x00001007, 
    0x30052003, 0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 
    0x00001007, 0x00002200, 0x00000000, 0x05f80000, 0x00000e47, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf010000, 
    0xc802803e, 0x00a7a700, 0xaf010100, 0xc8038000, 0x00c5c500, 0xe2000000, 
    0x4e4a0000, 0x2fce967a, 0x4f3a13e5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTextColorCxform.hlsl.h /Vn
//    pBinary_X360_VTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp[0], float, vector, [1, 4], c2
defextern const mvp[1], float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy


    exec
    vfetch r0._xy_, r0.x, texcoord
    vfetch r1, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r1.wzxy, c2.wzxy
    dp4 oPos.y, r1.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o2.xy, r0.yz
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-094e107b-66126e84

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VTextColorCxform[] =
{
    0x102a1101, 0x00000180, 0x00000084, 0x00000024, 0x00000094, 0x00000000, 
    0x00000138, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56546578, 0x74436f6c, 0x6f724378, 0x666f726d, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x000000a0, 0x0000001c, 0x00000093, 0xfffe0300, 0x00000003, 
    0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 0x00020000, 0x00010000, 
    0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00010000, 0x00000060, 
    0x00000000, 0x00000076, 0x00020002, 0x00020000, 0x0000007c, 0x00000000, 
    0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x63786d75, 0x6c006d76, 0x7000abab, 0x00010003, 0x00010004, 0x00020000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000084, 0x00210001, 0x00000000, 0x00000000, 0x00002863, 
    0x00000001, 0x00000002, 0x00000003, 0x00000290, 0x00105003, 0x00200004, 
    0x0000f050, 0x0001f151, 0x00023252, 0x00001008, 0x00001009, 0x00001007, 
    0x30052003, 0x00001200, 0xc2000000, 0x00002005, 0x00001200, 0xc4000000, 
    0x00003007, 0x00002200, 0x00000000, 0x05f80000, 0x00000e47, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf010200, 
    0xc802803e, 0x00a7a700, 0xaf010300, 0xc8038002, 0x00c5c500, 0xe2000000, 
    0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 0x00000000, 0x22010100, 
    0x4e4a0000, 0x094e107b, 0x66126e84
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dSolid.hlsl.h /Vn
//    pBinary_X360_VPosition3dSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dSolid.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsResource=1

dcl_index r0.x


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    dp4 oPos.z, r0.wzxy, c2.wzxy
    dp4 oPos.w, r0.wzxy, c3.wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-6d1fd585-ec91fef7

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dSolid[] =
{
    0x102a1101, 0x0000011c, 0x0000006c, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f38, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336453, 0x6f6c6964, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00020000, 0x00040000, 
    0x00000034, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000006c, 0x00010000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000001, 0x00000001, 0x00000000, 0x00000290, 0x00000003, 0x10011003, 
    0x00001200, 0xc2000000, 0x00004004, 0x00001200, 0xc4000000, 0x00000003, 
    0x00002200, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 0xc804803e, 
    0x00a7a700, 0xaf000200, 0xc808803e, 0x00a7a700, 0xaf000300, 0x4e4a0000, 
    0x6d1fd585, 0xec91fef7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dText.hlsl.h /Vn
//    pBinary_X360_VPosition3dText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dText.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1


    exec
    vfetch r1, r0.x, color
    vfetch r0._xy_, r0.x, texcoord
    vfetch r2, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r2.wzxy, c2.wzxy
    dp4 oPos.y, r2.wzxy, c3.wzxy
    dp4 oPos.z, r2.wzxy, c4.wzxy
    dp4 oPos.w, r2.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.yz
    mad o1, r1, c1, c0

// PDB hint 4e4a0000-c45cf480-0cbaba5a

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dText[] =
{
    0x102a1101, 0x0000017c, 0x0000009c, 0x00000024, 0x00000094, 0x00000000, 
    0x00000138, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x6578742e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x000000a0, 0x0000001c, 0x00000093, 0xfffe0300, 0x00000003, 
    0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 0x00020000, 0x00010000, 
    0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00010000, 0x00000060, 
    0x00000000, 0x00000076, 0x00020002, 0x00040000, 0x0000007c, 0x00000000, 
    0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x0000009c, 0x00110002, 0x00000000, 0x00000000, 0x00001842, 
    0x00000001, 0x00000003, 0x00000002, 0x00000290, 0x0010a003, 0x00005004, 
    0x00200005, 0x00003050, 0x0001f1a0, 0x0000100a, 0x0000100b, 0x70153003, 
    0x00001200, 0xc2000000, 0x00004006, 0x00001200, 0xc4000000, 0x0000200a, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000e47, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf020200, 0xc802803e, 0x00a7a700, 0xaf020300, 0xc804803e, 
    0x00a7a700, 0xaf020400, 0xc808803e, 0x00a7a700, 0xaf020500, 0xc8038000, 
    0x00c5c500, 0xe2000000, 0xc80f8001, 0x00000000, 0x8b010100, 0x4e4a0000, 
    0xc45cf480, 0x0cbaba5a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTextColor.hlsl.h /Vn
//    pBinary_X360_VPosition3dTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTextColor.hlsl
//
//
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy


    exec
    vfetch r0._xy_, r0.x, texcoord
    vfetch r1, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r1.wzxy, c0.wzxy
    dp4 oPos.y, r1.wzxy, c1.wzxy
    dp4 oPos.z, r1.wzxy, c2.wzxy
    dp4 oPos.w, r1.wzxy, c3.wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.yz

// PDB hint 4e4a0000-1d4f773c-780620b2

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTextColor[] =
{
    0x102a1101, 0x0000012c, 0x00000084, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65787443, 0x6f6c6f72, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xfffe0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00020000, 
    0x00040000, 0x00000034, 0x00000000, 0x6d767000, 0x00030003, 0x00040004, 
    0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000084, 0x00010001, 0x00000000, 0x00000000, 
    0x00000821, 0x00000001, 0x00000002, 0x00000001, 0x00000290, 0x00105003, 
    0x00200004, 0x00003050, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 
    0x00004005, 0x00001200, 0xc4000000, 0x00001009, 0x00002200, 0x00000000, 
    0x05f80000, 0x00000e47, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0xc801803e, 0x00a7a700, 0xaf010000, 0xc802803e, 0x00a7a700, 0xaf010100, 
    0xc804803e, 0x00a7a700, 0xaf010200, 0xc808803e, 0x00a7a700, 0xaf010300, 
    0xc8038000, 0x00c5c500, 0xe2000000, 0x4e4a0000, 0x1d4f773c, 0x780620b2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTextColorCxform.hlsl.h
//    /Vn pBinary_X360_VPosition3dTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VPosition3dTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, vector, [1, 4], c1
defextern const mvp, float, matrix_columns, [4, 4], c2-5
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy


    exec
    vfetch r0._xy_, r0.x, texcoord
    vfetch r1, r0.x, position
    alloc position
    exec
    dp4 oPos.x, r1.wzxy, c2.wzxy
    dp4 oPos.y, r1.wzxy, c3.wzxy
    dp4 oPos.z, r1.wzxy, c4.wzxy
    dp4 oPos.w, r1.wzxy, c5.wzxy
    alloc interpolators
    exece
    mov o2.xy, r0.yz
    mov o0, c0
    mov o1, c1

// PDB hint 4e4a0000-9a5868e8-e6748ebf

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VPosition3dTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VPosition3dTextColorCxform[] =
{
    0x102a1101, 0x00000188, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x00000140, 0x00000000, 0x00000000, 0x50c76f38, 0x00000070, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56506f73, 0x6974696f, 0x6e336454, 0x65787443, 0x6f6c6f72, 0x4378666f, 
    0x726d2e68, 0x6c736c2e, 0x75706462, 0x000000a0, 0x0000001c, 0x00000093, 
    0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 
    0x00020000, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020001, 
    0x00010000, 0x00000060, 0x00000000, 0x00000076, 0x00020002, 0x00040000, 
    0x0000007c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c006d76, 0x7000abab, 0x00030003, 
    0x00040004, 0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x0000009c, 0x00210001, 0x00000000, 
    0x00000000, 0x00002863, 0x00000001, 0x00000002, 0x00000003, 0x00000290, 
    0x00105003, 0x00200004, 0x0000f050, 0x0001f151, 0x00023252, 0x0000100a, 
    0x0000100b, 0x00001009, 0x30052003, 0x00001200, 0xc2000000, 0x00004005, 
    0x00001200, 0xc4000000, 0x00003009, 0x00002200, 0x00000000, 0x05f80000, 
    0x00000e47, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0xc801803e, 
    0x00a7a700, 0xaf010200, 0xc802803e, 0x00a7a700, 0xaf010300, 0xc804803e, 
    0x00a7a700, 0xaf010400, 0xc808803e, 0x00a7a700, 0xaf010500, 0xc8038002, 
    0x00c5c500, 0xe2000000, 0xc80f8000, 0x00000000, 0x22000000, 0xc80f8001, 
    0x00000000, 0x22010100, 0x4e4a0000, 0x9a5868e8, 0xe6748ebf
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchSolid.hlsl.h /Vn
//    pBinary_X360_VBatchSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchSolid.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1

dcl_index r0.x

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 1.10000002, 0, 0


    exec
    vfetch r1, r0.x, position
    vfetch r0.x___, r0.x, color1
    alloc position
    exec
    adds r0.x, r0.xx
    add r2.xz, r0.x, c255.xy
    frc r0.yz, r2.xxz
  + sgts r2.y, -r2.x
    sgt r2.xw, r0.yz, c255.z
  + sgts r2.z, -r2.z
    mad r0.yz, r2.xxz, r2.yyw, -r0.yyz
    add r0.xy, r0.yz, r0.x
    exec
    add r0.xy, r0.xy, c255.xy
    movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.y
    dp4 oPos.y, r1.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-a012e3d1-cc3dafef

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchSolid[] =
{
    0x102a1101, 0x0000014c, 0x0000010c, 0x00000024, 0x00000090, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368536f, 0x6c69642e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00300000, 0x0000003c, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000cc, 0x00010002, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 
    0x00000002, 0x00000000, 0x00000290, 0x00100003, 0x0031a004, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 
    0x3f8ccccd, 0x00000000, 0x00000000, 0x30052003, 0x00001200, 0xc2000000, 
    0x00006005, 0x500b1200, 0x12000000, 0x00000000, 0x0003c400, 0x22000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 
    0x00100000, 0x0000006c, 0xe2000000, 0xc8050002, 0x006cb000, 0xa000ff00, 
    0x20260200, 0x01cc006c, 0xe8020002, 0x20490202, 0x01c5c6c6, 0xa500ff02, 
    0xc8060000, 0x01cc11c1, 0xeb020200, 0xc8030000, 0x00c56c00, 0xe0000000, 
    0xc8030000, 0x00b0b000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc889c03e, 0xa0a7a700, 0xaf010000, 0x5c000000, 0x000000b1, 0xe2000000, 
    0xc802803e, 0xa0a7a700, 0xaf010000, 0x4e4a0000, 0xa012e3d1, 0xcc3dafef
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchText.hlsl.h /Vn
//    pBinary_X360_VBatchText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchText.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 2.0999999, 3.0999999, 0.100000001, 1.10000002


    exec
    vfetch r3, r0.x, color
    vfetch r1.xy__, r0.x, texcoord
    vfetch r4, r0.x, position
    vfetch r0._x__, r0.x, color2
    alloc position
    exec
    mulsc r0.x, c254.x, r0.y
    add r2, r0.x, c255.xywz
    sgt r6, -r2, c254.y
    frc r2, r2
    sgt r5, r2, c254.y
    mul r5.x, r5.x, r6.x
    exec
    mul r5.yzw, r6.yyzw, r5.yyzw
    add r2, r5.xywz, -r2.xywz
    add r0, r2.xywz, r0.x
    add r2, r0.xywz, c255
    movas r0._, r2.x
    dp4 oPos.x001, r4.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r2.y
    dp4 oPos.y, r4.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r2.w
    mul r0, r3, c[0+a0]
  + movas r0._, r2.z
    mov o0.xy, r1.xy
    add o1, r0, c[0+a0]

// PDB hint 4e4a0000-c0bf3aad-ebef236f

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchText[] =
{
    0x102a1101, 0x00000160, 0x00000184, 0x00000024, 0x0000008c, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f38, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x78742e68, 0x6c736c2e, 0x75706462, 0x00000060, 
    0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x0000004c, 0x00000030, 0x00020000, 0x00600000, 0x0000003c, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000144, 
    0x00110006, 0x00000000, 0x00000000, 0x00001842, 0x00000001, 0x00000004, 
    0x00000002, 0x00000290, 0x0010a004, 0x00005005, 0x00000006, 0x0022a007, 
    0x00003050, 0x0001f1a0, 0x00001018, 0x00001019, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x40800000, 0x00000000, 0x00000000, 0x00000000, 0x40066666, 0x40466666, 
    0x3dcccccd, 0x3f8ccccd, 0xf0554004, 0x00001200, 0xc2000000, 0x00006008, 
    0x600e1200, 0x12000000, 0x00002014, 0x00001200, 0xc4000000, 0x00004016, 
    0x00002200, 0x00000000, 0x05f83000, 0x00000688, 0x00000000, 0x05f81000, 
    0x00000fc8, 0x00000000, 0x05f84000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc7, 0x00000000, 0xa8100000, 0x00000041, 0xc20000fe, 0xc80f0002, 
    0x006cd000, 0xa000ff00, 0xc80f0006, 0x0400b100, 0xa502fe00, 0xc80f0002, 
    0x00000000, 0xe8020000, 0xc80f0005, 0x0000b100, 0xa502fe00, 0xc8010005, 
    0x006c6c00, 0xe1050600, 0xc80e0005, 0x00010100, 0xe1060500, 0xc80f0002, 
    0x02d0d000, 0xe0050200, 0xc80f0000, 0x00d06c00, 0xe0020000, 0xc80f0002, 
    0x00d00000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000002, 0xc889c03e, 
    0xa0a7a700, 0xaf040000, 0x5c000000, 0x000000b1, 0xe2000002, 0xc802803e, 
    0xa0a7a700, 0xaf040000, 0x5c000000, 0x0000001b, 0xe2000002, 0x5c0f0000, 
    0xa00000c6, 0xa1030002, 0xc8038000, 0x00b0b000, 0xe2010100, 0xc80f8001, 
    0xa0000000, 0xa0000000, 0x4e4a0000, 0xc0bf3aad, 0xebef236f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTextColor.hlsl.h /Vn
//    pBinary_X360_VBatchTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTextColor.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 1.10000002, 0, 0


    exec
    vfetch r0._xy_, r0.x, texcoord
    vfetch r1, r0.x, position
    vfetch r0.x___, r0.x, color1
    alloc position
    exec
    adds r0.x, r0.xx
    add r2.zw, r0.x, c255.xxxy
    frc r2.xy, r2.zw
  + sgts r3.y, -r2.z
    sgt r3.xw, r2.xy, c255.z
  + sgts r3.z, -r2.w
    mad r2.xy, r3.xz, r3.yw, -r2.xy
    add r0.xw, r2.xy, r0.x
    exec
    add r0.xw, r0.xw, c255.xy
    movas r0._, r0.x
    dp4 oPos.x001, r1.wzxy, c[0+a0].wzxy
    movas r0._, r0.w
    dp4 oPos.y, r1.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.yz

// PDB hint 4e4a0000-0c8ac60c-8d69e03b

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTextColor[] =
{
    0x102a1101, 0x0000015c, 0x00000124, 0x00000024, 0x00000094, 0x000000f8, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x7874436f, 0x6c6f722e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 0x00300000, 
    0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000000e4, 0x00010003, 0x00000000, 0x00000000, 0x00000821, 
    0x00000001, 0x00000003, 0x00000001, 0x00000290, 0x00105003, 0x00000004, 
    0x0031a005, 0x00003050, 0x00001011, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 0x3f8ccccd, 0x00000000, 
    0x00000000, 0x70153003, 0x00001200, 0xc2000000, 0x00006006, 0x500c1200, 
    0x12000000, 0x00000000, 0x1011c400, 0x22000000, 0x05f80000, 0x00000e47, 
    0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 
    0x00000000, 0x00100000, 0x0000006c, 0xe2000000, 0xc80c0002, 0x006cac00, 
    0xa000ff00, 0x20230302, 0x011a00c6, 0xe8020002, 0x20490303, 0x01b0c61b, 
    0xa502ff02, 0xc8030002, 0x01c419b0, 0xeb030302, 0xc8090000, 0x00b06c00, 
    0xe0020000, 0xc8090000, 0x0018b000, 0xa000ff00, 0x5c000000, 0x0000006c, 
    0xe2000000, 0xc889c03e, 0xa0a7a700, 0xaf010000, 0x5c000000, 0x0000001b, 
    0xe2000000, 0xc802803e, 0xa0a7a700, 0xaf010000, 0xc8038000, 0x00c5c500, 
    0xe2000000, 0x4e4a0000, 0x0c8ac60c, 0x8d69e03b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTextColorCxform.hlsl.h /Vn
//    pBinary_X360_VBatchTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfuniforms[0], float, vector, [1, 4], c0
defextern const vfuniforms[1], float, vector, [1, 4], c1
defextern const vfuniforms[2], float, vector, [1, 4], c2
defextern const vfuniforms[3], float, vector, [1, 4], c3
defextern const vfuniforms[4], float, vector, [1, 4], c4
defextern const vfuniforms[5], float, vector, [1, 4], c5
defextern const vfuniforms[6], float, vector, [1, 4], c6
defextern const vfuniforms[7], float, vector, [1, 4], c7
defextern const vfuniforms[8], float, vector, [1, 4], c8
defextern const vfuniforms[9], float, vector, [1, 4], c9
defextern const vfuniforms[10], float, vector, [1, 4], c10
defextern const vfuniforms[11], float, vector, [1, 4], c11
defextern const vfuniforms[12], float, vector, [1, 4], c12
defextern const vfuniforms[13], float, vector, [1, 4], c13
defextern const vfuniforms[14], float, vector, [1, 4], c14
defextern const vfuniforms[15], float, vector, [1, 4], c15
defextern const vfuniforms[16], float, vector, [1, 4], c16
defextern const vfuniforms[17], float, vector, [1, 4], c17
defextern const vfuniforms[18], float, vector, [1, 4], c18
defextern const vfuniforms[19], float, vector, [1, 4], c19
defextern const vfuniforms[20], float, vector, [1, 4], c20
defextern const vfuniforms[21], float, vector, [1, 4], c21
defextern const vfuniforms[22], float, vector, [1, 4], c22
defextern const vfuniforms[23], float, vector, [1, 4], c23
defextern const vfuniforms[24], float, vector, [1, 4], c24
defextern const vfuniforms[25], float, vector, [1, 4], c25
defextern const vfuniforms[26], float, vector, [1, 4], c26
defextern const vfuniforms[27], float, vector, [1, 4], c27
defextern const vfuniforms[28], float, vector, [1, 4], c28
defextern const vfuniforms[29], float, vector, [1, 4], c29
defextern const vfuniforms[30], float, vector, [1, 4], c30
defextern const vfuniforms[31], float, vector, [1, 4], c31
defextern const vfuniforms[32], float, vector, [1, 4], c32
defextern const vfuniforms[33], float, vector, [1, 4], c33
defextern const vfuniforms[34], float, vector, [1, 4], c34
defextern const vfuniforms[35], float, vector, [1, 4], c35
defextern const vfuniforms[36], float, vector, [1, 4], c36
defextern const vfuniforms[37], float, vector, [1, 4], c37
defextern const vfuniforms[38], float, vector, [1, 4], c38
defextern const vfuniforms[39], float, vector, [1, 4], c39
defextern const vfuniforms[40], float, vector, [1, 4], c40
defextern const vfuniforms[41], float, vector, [1, 4], c41
defextern const vfuniforms[42], float, vector, [1, 4], c42
defextern const vfuniforms[43], float, vector, [1, 4], c43
defextern const vfuniforms[44], float, vector, [1, 4], c44
defextern const vfuniforms[45], float, vector, [1, 4], c45
defextern const vfuniforms[46], float, vector, [1, 4], c46
defextern const vfuniforms[47], float, vector, [1, 4], c47
defextern const vfuniforms[48], float, vector, [1, 4], c48
defextern const vfuniforms[49], float, vector, [1, 4], c49
defextern const vfuniforms[50], float, vector, [1, 4], c50
defextern const vfuniforms[51], float, vector, [1, 4], c51
defextern const vfuniforms[52], float, vector, [1, 4], c52
defextern const vfuniforms[53], float, vector, [1, 4], c53
defextern const vfuniforms[54], float, vector, [1, 4], c54
defextern const vfuniforms[55], float, vector, [1, 4], c55
defextern const vfuniforms[56], float, vector, [1, 4], c56
defextern const vfuniforms[57], float, vector, [1, 4], c57
defextern const vfuniforms[58], float, vector, [1, 4], c58
defextern const vfuniforms[59], float, vector, [1, 4], c59
defextern const vfuniforms[60], float, vector, [1, 4], c60
defextern const vfuniforms[61], float, vector, [1, 4], c61
defextern const vfuniforms[62], float, vector, [1, 4], c62
defextern const vfuniforms[63], float, vector, [1, 4], c63
defextern const vfuniforms[64], float, vector, [1, 4], c64
defextern const vfuniforms[65], float, vector, [1, 4], c65
defextern const vfuniforms[66], float, vector, [1, 4], c66
defextern const vfuniforms[67], float, vector, [1, 4], c67
defextern const vfuniforms[68], float, vector, [1, 4], c68
defextern const vfuniforms[69], float, vector, [1, 4], c69
defextern const vfuniforms[70], float, vector, [1, 4], c70
defextern const vfuniforms[71], float, vector, [1, 4], c71
defextern const vfuniforms[72], float, vector, [1, 4], c72
defextern const vfuniforms[73], float, vector, [1, 4], c73
defextern const vfuniforms[74], float, vector, [1, 4], c74
defextern const vfuniforms[75], float, vector, [1, 4], c75
defextern const vfuniforms[76], float, vector, [1, 4], c76
defextern const vfuniforms[77], float, vector, [1, 4], c77
defextern const vfuniforms[78], float, vector, [1, 4], c78
defextern const vfuniforms[79], float, vector, [1, 4], c79
defextern const vfuniforms[80], float, vector, [1, 4], c80
defextern const vfuniforms[81], float, vector, [1, 4], c81
defextern const vfuniforms[82], float, vector, [1, 4], c82
defextern const vfuniforms[83], float, vector, [1, 4], c83
defextern const vfuniforms[84], float, vector, [1, 4], c84
defextern const vfuniforms[85], float, vector, [1, 4], c85
defextern const vfuniforms[86], float, vector, [1, 4], c86
defextern const vfuniforms[87], float, vector, [1, 4], c87
defextern const vfuniforms[88], float, vector, [1, 4], c88
defextern const vfuniforms[89], float, vector, [1, 4], c89
defextern const vfuniforms[90], float, vector, [1, 4], c90
defextern const vfuniforms[91], float, vector, [1, 4], c91
defextern const vfuniforms[92], float, vector, [1, 4], c92
defextern const vfuniforms[93], float, vector, [1, 4], c93
defextern const vfuniforms[94], float, vector, [1, 4], c94
defextern const vfuniforms[95], float, vector, [1, 4], c95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 4, 0, 0, 0
def c255, 2.0999999, 3.0999999, 0.100000001, 1.10000002


    exec
    vfetch r0.__xy, r0.x, texcoord
    vfetch r2, r0.x, position
    vfetch r0._x__, r0.x, color1
    alloc position
    exec
    mulsc r0.x, c254.x, r0.y
    add r1, r0.x, c255.xywz
    sgt r4, -r1, c254.y
    frc r1, r1
    sgt r3, r1, c254.y
    mul r3.x, r3.x, r4.x
    exec
    mul r3.yzw, r4.yyzw, r3.yyzw
    add r1, r3.xywz, -r1.xywz
    add r1, r1.xywz, r0.x
    add r1, r1.xywz, c255
    movas r0._, r1.x
    dp4 oPos.x001, r2.wzxy, c[0+a0].wzxy
    exec
    movas r0._, r1.y
    dp4 oPos.y, r2.wzxy, c[0+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r1.z
    mov o0, c[0+a0]
    movas r0._, r1.w
    mov o2.xy, r0.zw
    mov o1, c[0+a0]

// PDB hint 4e4a0000-270db4da-1d85fc8f

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchTextColorCxform[] =
{
    0x102a1101, 0x00000170, 0x00000184, 0x00000024, 0x00000098, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x63685465, 0x7874436f, 0x6c6f7243, 0x78666f72, 0x6d2e686c, 
    0x736c2e75, 0x70646200, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 
    0x00600000, 0x0000003c, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000144, 0x00210004, 0x00000000, 0x00000000, 
    0x00002863, 0x00000001, 0x00000003, 0x00000003, 0x00000290, 0x00105004, 
    0x00000005, 0x0021a006, 0x0000f050, 0x0001f151, 0x00023252, 0x00001016, 
    0x00001019, 0x00001018, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 
    0x00000000, 0x00000000, 0x40066666, 0x40466666, 0x3dcccccd, 0x3f8ccccd, 
    0x70153004, 0x00001200, 0xc2000000, 0x00006007, 0x600d1200, 0x12000000, 
    0x00002013, 0x00001200, 0xc4000000, 0x00005015, 0x00002200, 0x00000000, 
    0x05f80000, 0x0000023f, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000fc7, 0x00000000, 0xa8100000, 0x00000041, 0xc20000fe, 
    0xc80f0001, 0x006cd000, 0xa000ff00, 0xc80f0004, 0x0400b100, 0xa501fe00, 
    0xc80f0001, 0x00000000, 0xe8010000, 0xc80f0003, 0x0000b100, 0xa501fe00, 
    0xc8010003, 0x006c6c00, 0xe1030400, 0xc80e0003, 0x00010100, 0xe1040300, 
    0xc80f0001, 0x02d0d000, 0xe0030100, 0xc80f0001, 0x00d06c00, 0xe0010000, 
    0xc80f0001, 0x00d00000, 0xa001ff00, 0x5c000000, 0x0000006c, 0xe2000001, 
    0xc889c03e, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000b1, 0xe2000001, 
    0xc802803e, 0xa0a7a700, 0xaf020000, 0x5c000000, 0x000000c6, 0xe2000001, 
    0xc80f8000, 0xe0000000, 0x22000000, 0x5c000000, 0x0000001b, 0xe2000001, 
    0xc8038002, 0x001a1a00, 0xe2000000, 0xc80f8001, 0xe0000000, 0x22000000, 
    0x4e4a0000, 0x270db4da, 0x1d85fc8f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dSolid.hlsl.h /Vn
//    pBinary_X360_VBatchPosition3dSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dSolid.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 4, 0, 0


    exec
    vfetch r1, r0.x, position
    vfetch r0._x__, r0.x, color1
    alloc position
    exec
    addsc r0.x, c255.x, r0.y
    frc r0.z, r0.x
  + sgts r0.w, -r0.x
    add r0.x, -r0.z, c255.x
  + sgts r0.z, r0.z
    mad r0.x, r0.w, r0.z, r0.x
    add r0.x, r0.x, r0.y
    mulsc r0.x, c255.y, r0.x
    exec
    movas r0._, r0.x
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-8413de53-a9d24bce

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dSolid[] =
{
    0x102a1101, 0x00000154, 0x0000010c, 0x00000024, 0x00000098, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x536f6c69, 0x642e686c, 
    0x736c2e75, 0x70646200, 0x00000060, 0x0000001c, 0x00000053, 0xfffe0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00020000, 
    0x00600000, 0x0000003c, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 
    0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000000cc, 0x00010001, 0x00000000, 0x00000000, 
    0x00000000, 0x00000001, 0x00000002, 0x00000000, 0x00000290, 0x00100003, 
    0x0021a004, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3dcccccd, 0x40800000, 0x00000000, 0x00000000, 0x30052003, 
    0x00001200, 0xc2000000, 0x00006005, 0x500b1200, 0x12000000, 0x00000000, 
    0x0003c400, 0x22000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc7, 0x00000000, 0xb0100000, 0x00000041, 0xc20000ff, 0x20840000, 
    0x016c006c, 0xe8000000, 0x20410000, 0x04c66cc6, 0xa000ff00, 0xc8010000, 
    0x001bc66c, 0xeb000000, 0xc8010000, 0x006cb100, 0xe0000000, 0xa8100000, 
    0x00000080, 0xc20000ff, 0x5c000000, 0x0000006c, 0xe2000000, 0xc801803e, 
    0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc804803e, 
    0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 0x4e4a0000, 
    0x8413de53, 0xa9d24bce
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dText.hlsl.h /Vn
//    pBinary_X360_VBatchPosition3dText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dText.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1.10000002, 0.100000001, 0, 4


    exec
    vfetch r2, r0.x, color
    vfetch r1.xy__, r0.x, texcoord
    vfetch r4, r0.x, position
    vfetch r0.x___, r0.x, color2
    alloc position
    exec
    addsc r0.y, c255.y, r0.x
    frc r0.z, r0.y
  + sgts r0.w, -r0.y
    add r0.y, -r0.z, c255.y
  + sgts r0.z, r0.z
    mad r0.y, r0.w, r0.z, r0.y
    add r0.xy, r0.yx, r0.x
    add r3.xy, r0.y, c255.xy
  + mulsc r0.z, c255.w, r0.x
    exec
    movas r0._, r0.z
    dp4 oPos.x, r4.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r4.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r4.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r4.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    frc r0.zw, r3.xxxy
  + sgts r3.x, -r3.x
    sgt r1.zw, r0.zzzw, c255.z
  + sgts r3.y, -r3.y
    mad r0.zw, r3.xxxy, r1.zzzw, -r0.zzzw
    mov o0.xy, r1.xy
    add r0.xy, r0.zw, r0.y
    add r1.xy, r0.xy, c255.xy
    exece
    movas r0._, r1.x
    mul r0, r2, c[96+a0]
  + movas r0._, r1.y
    add o1, r0, c[96+a0]

// PDB hint 4e4a0000-e2ae2150-ed2dcdf8

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dText[] =
{
    0x102a1101, 0x0000019c, 0x0000019c, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657874, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00600000, 0x00000050, 0x00000000, 0x00000060, 0x00020060, 0x00300000, 
    0x0000006c, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 
    0x00040004, 0x00180000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x0000015c, 0x00110004, 0x00000000, 0x00000000, 
    0x00001842, 0x00000001, 0x00000004, 0x00000002, 0x00000290, 0x0010a004, 
    0x00005005, 0x00000006, 0x0032a007, 0x00003050, 0x0001f1a0, 0x00001016, 
    0x0000101b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f8ccccd, 0x3dcccccd, 0x00000000, 0x40800000, 0xf0554004, 
    0x00001200, 0xc2000000, 0x00006008, 0x500e1200, 0x12000000, 0x00000000, 
    0x6013c400, 0x12000000, 0x00003019, 0x00002200, 0x00000000, 0x05f82000, 
    0x00000688, 0x00000000, 0x05f81000, 0x00000fc8, 0x00000000, 0x05f84000, 
    0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 0xb0200000, 
    0x00000080, 0xc20000ff, 0x20840000, 0x01b100b1, 0xe8000000, 0x20420000, 
    0x04c6b1c6, 0xa000ff00, 0xc8020000, 0x001bc6b1, 0xeb000000, 0xc8030000, 
    0x006d6c00, 0xe0000000, 0xa8430003, 0x00b1b000, 0x8000ffff, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf040000, 0xc802803e, 
    0xa0a7a700, 0xaf040100, 0xc804803e, 0xa0a7a700, 0xaf040200, 0xc808803e, 
    0xa0a7a700, 0xaf040300, 0x201c0300, 0x01ac006c, 0xe8030003, 0x202c0301, 
    0x0106c6b1, 0xa500ff03, 0xc80c0000, 0x01ac0606, 0xeb030100, 0xc8038000, 
    0x00b0b000, 0xe2010100, 0xc8030000, 0x001ab100, 0xe0000000, 0xc8030001, 
    0x00b0b000, 0xa000ff00, 0x5c000000, 0x0000006c, 0xe2000001, 0x5c0f0000, 
    0xa00000b1, 0xa1026001, 0xc80f8001, 0xa0000000, 0xa0006000, 0x4e4a0000, 
    0xe2ae2150, 0xed2dcdf8
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTextColor.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTextColor.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.100000001, 4, 0, 0


    exec
    vfetch r0.__xy, r0.x, texcoord
    vfetch r1, r0.x, position
    vfetch r0._x__, r0.x, color1
    alloc position
    exec
    addsc r0.x, c255.x, r0.y
    frc r2.x, r0.x
  + sgts r2.y, -r0.x
    add r0.x, -r2.x, c255.x
  + sgts r2.x, r2.x
    mad r0.x, r2.y, r2.x, r0.x
    add r0.x, r0.x, r0.y
    mulsc r0.x, c255.y, r0.x
    exec
    movas r0._, r0.x
    dp4 oPos.x, r1.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[3+a0].wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.zw

// PDB hint 4e4a0000-c5ca4a15-ad03d499

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTextColor[] =
{
    0x102a1101, 0x00000164, 0x00000124, 0x00000024, 0x0000009c, 0x00000100, 
    0x00000128, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657874, 0x436f6c6f, 
    0x722e686c, 0x736c2e75, 0x70646200, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020000, 0x00600000, 0x0000003c, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000000e4, 0x00010002, 0x00000000, 
    0x00000000, 0x00000821, 0x00000001, 0x00000003, 0x00000001, 0x00000290, 
    0x00105003, 0x00000004, 0x0021a005, 0x00003050, 0x00001011, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3dcccccd, 
    0x40800000, 0x00000000, 0x00000000, 0x70153003, 0x00001200, 0xc2000000, 
    0x00006006, 0x500c1200, 0x12000000, 0x00000000, 0x1011c400, 0x22000000, 
    0x05f80000, 0x0000023f, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000fc7, 0x00000000, 0xb0100000, 0x00000041, 0xc20000ff, 
    0x20210202, 0x016c006c, 0xe8000000, 0x20110200, 0x046c6c6c, 0xa002ff02, 
    0xc8010000, 0x00b16c6c, 0xeb020200, 0xc8010000, 0x006cb100, 0xe0000000, 
    0xa8100000, 0x00000080, 0xc20000ff, 0x5c000000, 0x0000006c, 0xe2000000, 
    0xc801803e, 0xa0a7a700, 0xaf010000, 0xc802803e, 0xa0a7a700, 0xaf010100, 
    0xc804803e, 0xa0a7a700, 0xaf010200, 0xc808803e, 0xa0a7a700, 0xaf010300, 
    0xc8038000, 0x001a1a00, 0xe2000000, 0x4e4a0000, 0xc5ca4a15, 0xad03d499
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTextColorCxform.hlsl.h
//    /Vn pBinary_X360_VBatchPosition3dTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VBatchPosition3dTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

// Shader type: vertex 

xvs_3_0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c0-3
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c4-7
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c8-11
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c12-15
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c16-19
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c20-23
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c24-27
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c28-31
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c32-35
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c36-39
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c40-43
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c44-47
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c48-51
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c52-55
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c56-59
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c60-63
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c64-67
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c68-71
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c72-75
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c76-79
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c80-83
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c84-87
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c88-91
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c92-95
defextern const vfuniforms[0], float, vector, [1, 4], c96
defextern const vfuniforms[1], float, vector, [1, 4], c97
defextern const vfuniforms[2], float, vector, [1, 4], c98
defextern const vfuniforms[3], float, vector, [1, 4], c99
defextern const vfuniforms[4], float, vector, [1, 4], c100
defextern const vfuniforms[5], float, vector, [1, 4], c101
defextern const vfuniforms[6], float, vector, [1, 4], c102
defextern const vfuniforms[7], float, vector, [1, 4], c103
defextern const vfuniforms[8], float, vector, [1, 4], c104
defextern const vfuniforms[9], float, vector, [1, 4], c105
defextern const vfuniforms[10], float, vector, [1, 4], c106
defextern const vfuniforms[11], float, vector, [1, 4], c107
defextern const vfuniforms[12], float, vector, [1, 4], c108
defextern const vfuniforms[13], float, vector, [1, 4], c109
defextern const vfuniforms[14], float, vector, [1, 4], c110
defextern const vfuniforms[15], float, vector, [1, 4], c111
defextern const vfuniforms[16], float, vector, [1, 4], c112
defextern const vfuniforms[17], float, vector, [1, 4], c113
defextern const vfuniforms[18], float, vector, [1, 4], c114
defextern const vfuniforms[19], float, vector, [1, 4], c115
defextern const vfuniforms[20], float, vector, [1, 4], c116
defextern const vfuniforms[21], float, vector, [1, 4], c117
defextern const vfuniforms[22], float, vector, [1, 4], c118
defextern const vfuniforms[23], float, vector, [1, 4], c119
defextern const vfuniforms[24], float, vector, [1, 4], c120
defextern const vfuniforms[25], float, vector, [1, 4], c121
defextern const vfuniforms[26], float, vector, [1, 4], c122
defextern const vfuniforms[27], float, vector, [1, 4], c123
defextern const vfuniforms[28], float, vector, [1, 4], c124
defextern const vfuniforms[29], float, vector, [1, 4], c125
defextern const vfuniforms[30], float, vector, [1, 4], c126
defextern const vfuniforms[31], float, vector, [1, 4], c127
defextern const vfuniforms[32], float, vector, [1, 4], c128
defextern const vfuniforms[33], float, vector, [1, 4], c129
defextern const vfuniforms[34], float, vector, [1, 4], c130
defextern const vfuniforms[35], float, vector, [1, 4], c131
defextern const vfuniforms[36], float, vector, [1, 4], c132
defextern const vfuniforms[37], float, vector, [1, 4], c133
defextern const vfuniforms[38], float, vector, [1, 4], c134
defextern const vfuniforms[39], float, vector, [1, 4], c135
defextern const vfuniforms[40], float, vector, [1, 4], c136
defextern const vfuniforms[41], float, vector, [1, 4], c137
defextern const vfuniforms[42], float, vector, [1, 4], c138
defextern const vfuniforms[43], float, vector, [1, 4], c139
defextern const vfuniforms[44], float, vector, [1, 4], c140
defextern const vfuniforms[45], float, vector, [1, 4], c141
defextern const vfuniforms[46], float, vector, [1, 4], c142
defextern const vfuniforms[47], float, vector, [1, 4], c143
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1.10000002, 0.100000001, 0, 4


    exec
    vfetch r1.xy__, r0.x, texcoord
    vfetch r2, r0.x, position
    vfetch r0.x___, r0.x, color1
    alloc position
    exec
    addsc r0.y, c255.y, r0.x
    frc r0.z, r0.y
  + sgts r0.w, -r0.y
    add r0.y, -r0.z, c255.y
  + sgts r0.z, r0.z
    mad r0.y, r0.w, r0.z, r0.y
    add r0.xy, r0.yx, r0.x
    add r1.zw, r0.y, c255.yyyx
  + mulsc r0.z, c255.w, r0.x
    exec
    movas r0._, r0.z
    dp4 oPos.x, r2.wzxy, c[0+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[3+a0].wzxy
    alloc interpolators
    exec
    frc r0.w, r1.w
  + truncs r0.z, r1.z
    sgt r1.z, r0.w, c255.z
  + sgts r1.w, -r1.w
    mad r0.w, r1.w, r1.z, -r0.w
    mov o2.xy, r1.xy
    add r0.y, r0.w, r0.y
  + movas r0._, r0.z
    mov o0, c[96+a0]
    exece
    addsc r0.x, c255.x, r0.y
    movas r0._, r0.x
    mov o1, c[96+a0]

// PDB hint 4e4a0000-fb5f06fb-f025a255

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VBatchPosition3dTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VBatchPosition3dTextColorCxform[] =
{
    0x102a1101, 0x000001ac, 0x00000190, 0x00000024, 0x000000a4, 0x00000138, 
    0x00000160, 0x00000000, 0x00000000, 0x50c76f38, 0x00000075, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56426174, 0x6368506f, 0x73697469, 0x6f6e3364, 0x54657874, 0x436f6c6f, 
    0x72437866, 0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000090, 
    0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 
    0x0000007c, 0x00000044, 0x00020000, 0x00600000, 0x00000050, 0x00000000, 
    0x00000060, 0x00020060, 0x00300000, 0x0000006c, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000150, 
    0x00210002, 0x00000000, 0x00000000, 0x00002863, 0x00000001, 0x00000003, 
    0x00000003, 0x00000290, 0x00105004, 0x00000005, 0x0031a006, 0x0000f050, 
    0x0001f151, 0x00023252, 0x00001017, 0x0000101a, 0x00001015, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f8ccccd, 
    0x3dcccccd, 0x00000000, 0x40800000, 0x70153004, 0x00001200, 0xc2000000, 
    0x00006007, 0x500d1200, 0x12000000, 0x00000000, 0x6012c400, 0x12000000, 
    0x00003018, 0x00002200, 0x00000000, 0x05f81000, 0x00000fc8, 0x00000000, 
    0x05f82000, 0x00000688, 0x00000000, 0x05f80000, 0x00000ff8, 0x00000000, 
    0xb0200000, 0x00000080, 0xc20000ff, 0x20840000, 0x01b100b1, 0xe8000000, 
    0x20420000, 0x04c6b1c6, 0xa000ff00, 0xc8020000, 0x001bc6b1, 0xeb000000, 
    0xc8030000, 0x006d6c00, 0xe0000000, 0xa84c0001, 0x00b17100, 0x8000ffff, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf020000, 
    0xc802803e, 0xa0a7a700, 0xaf020100, 0xc804803e, 0xa0a7a700, 0xaf020200, 
    0xc808803e, 0xa0a7a700, 0xaf020300, 0x30480000, 0x001b00c6, 0xe8010001, 
    0x20840101, 0x011bc61b, 0xa500ff01, 0xc8080000, 0x011bc61b, 0xeb010100, 
    0xc8038002, 0x00b0b000, 0xe2010100, 0x5c020000, 0x001bb1c6, 0xe0000000, 
    0xc80f8000, 0xe0000000, 0x22606000, 0xb0100000, 0x00000041, 0xc20000ff, 
    0x5c000000, 0x0000006c, 0xe2000000, 0xc80f8001, 0xe0000000, 0x22606000, 
    0x4e4a0000, 0xfb5f06fb, 0xf025a255
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedSolid.hlsl.h /Vn
//    pBinary_X360_VInstancedSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedSolid.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3

dcl_index r0.x

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 2, 0
def c255, -3, -2, 1.10000002, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.xy, r0.xz
    add r1.yz, r2.xxy, r2.xxy
    sge r2.z, r1.y, -r1.y
    exec
    mul r0.xy, r2.zx, c254.yx
    vfetch r3, r0.y, color7
    serialize
    subsc r0.y, -c254.z, -r0.x
    rcp r0.x, r0.y
    mul r0.x, r2.x, r0.x
    frcs r0.x, r0.x
    exec
    mul r0.x, r0.y, r0.x
    truncs r1.x, r0.x
    cndeq r0.x, r1.x, r3.x, r3.y
    add r2.xyz, r1.xzx, c255.xzy
    cndeq r0.x, r2.z, r3.z, r0.x
    cndeq r0.x, r2.x, r3.w, r0.x
    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    movas r0._, r1.z
    dp4 oPos.x001, r0.wzxy, c[1+a0].wzxy
    frc r2.x, r2.y
  + sgts r2.y, -r2.y
    add r1.w, -r2.x, c255.z
  + sgts r2.x, r2.x
    mad r1.w, r2.y, r2.x, r1.w
    add r1.x, r1.w, r1.z
    exec
    movas r0._, r1.x
    dp4 oPos.y, r0.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-82f737f0-1c4a8e8f

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedSolid[] =
{
    0x102a1101, 0x00000180, 0x00000214, 0x00000024, 0x00000094, 0x00000128, 
    0x00000150, 0x00000000, 0x00000000, 0x50c76f38, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564536f, 0x6c69642e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 
    0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 0x00010000, 
    0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00300000, 0x0000006c, 
    0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 
    0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001d4, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 
    0x00000001, 0x00000002, 0x00000000, 0x00000290, 0x0007a012, 0x0000001d, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0x40000000, 0x00000000, 
    0xc0400000, 0xc0000000, 0x3f8ccccd, 0x3f000000, 0x00006005, 0x600b1200, 
    0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x1001101d, 0x00001200, 
    0xc2000000, 0x0000601e, 0x20241200, 0x12000000, 0x00000000, 0x0005c400, 
    0x22000000, 0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 0x00b1001b, 
    0xc90000ff, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 
    0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 
    0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8030002, 0x00c40000, 
    0xe9000000, 0xc8060001, 0x00bcbc00, 0xe0020200, 0xc8040002, 0x02b1b100, 
    0xe6010100, 0xc8030000, 0x006e6d00, 0xa102fe00, 0x45f83000, 0x00000688, 
    0x00000000, 0xb8200000, 0x010000c0, 0xc20000fe, 0x4c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x006c6c00, 0xe1020000, 0x2c100000, 0x0000006c, 
    0xe2000000, 0xc8010000, 0x00b16c00, 0xe1000000, 0x30100100, 0x0000006c, 
    0xe2000000, 0xc8010000, 0x006c6cb1, 0xec010303, 0xc8070002, 0x0064b400, 
    0xa001ff00, 0xc8010000, 0x00c6c66c, 0xec020300, 0xc8010000, 0x006c1b6c, 
    0xec020300, 0x05f80000, 0x00000688, 0x00000000, 0x5c000000, 0x000000c6, 
    0xe2000001, 0xc889c03e, 0xa0a7a700, 0xaf000100, 0x20210202, 0x01b100b1, 
    0xe8020002, 0x20180201, 0x046cc66c, 0xa002ff02, 0xc8080001, 0x00b16c1b, 
    0xeb020201, 0xc8010001, 0x001bc600, 0xe0010100, 0x5c000000, 0x0000006c, 
    0xe2000001, 0xc802803e, 0xa0a7a700, 0xaf000100, 0x4e4a0000, 0x82f737f0, 
    0x1c4a8e8f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedText.hlsl.h /Vn
//    pBinary_X360_VInstancedText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedText.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r2.yz, r0.yyz
    adds r0.x, r2.zz
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xzw, r2.wyyz, c254.yyyx
    vfetch r1.xwyz, r0.w, color7
    serialize
    subsc r2.x, -c255.z, -r0.x
    rcp r0.y, r2.x
    mul r0.y, r2.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r2.x, r0.y
    truncs r0.y, r0.y
    cndeq r2.w, r0.y, r1.x, r1.z
    add r2.xyz, r0.yyz, c255.xyz
    cndeq r1.x, r2.y, r1.w, r2.w
    cndeq r2.w, r2.x, r1.y, r1.x
    exec
    vfetch r1, r2.w, color
    vfetch r2.xy__, r2.w, texcoord
    vfetch r3, r2.w, position
    alloc position
    exec
    add r2.w, r2.z, c254.z
  + movas r0._, r0.z
    dp4 oPos.x001, r3.wzxy, c[3+a0].wzxy
    frc r4.x, r2.w
  + sgts r4.y, -r2.w
    add r2.w, -r4.x, c254.z
  + sgts r4.x, r4.x
    mad r2.w, r4.y, r4.x, r2.w
    add r2.z, r2.w, r2.z
    exec
    movas r0._, r2.z
    dp4 oPos.y, r3.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o0.xy, r2.xy
    mad o1, r1, c[2+a0], c[1+a0]

// PDB hint 4e4a0000-7fbb7c85-703c5cc3

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedText[] =
{
    0x102a1101, 0x00000194, 0x00000250, 0x00000024, 0x00000090, 0x00000124, 
    0x0000014c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x78742e68, 0x6c736c2e, 0x75706462, 
    0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 
    0x00000000, 0x0000007c, 0x00000044, 0x00020000, 0x00010000, 0x00000050, 
    0x00000000, 0x00000060, 0x00020001, 0x00600000, 0x0000006c, 0x00000000, 
    0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00600000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000210, 0x00100004, 0x00000000, 0x00000000, 0x00001842, 0x00000001, 
    0x00000004, 0x00000002, 0x00000290, 0x0007a012, 0x0010a01d, 0x0000501e, 
    0x0020001f, 0x00003050, 0x0001f1a0, 0x00001029, 0x0000102a, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f000000, 0x40800000, 0x3f8ccccd, 0x00000000, 0xc0400000, 
    0xc0000000, 0x40000000, 0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 
    0x20246011, 0x60171200, 0x12000000, 0x7015301d, 0x00001200, 0xc2000000, 
    0x00006020, 0x20261200, 0x12000000, 0x00000000, 0x3028c400, 0x22000000, 
    0x14020000, 0x001b1b6c, 0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 
    0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 
    0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 
    0xc8030000, 0x00c6b000, 0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 
    0xc8040000, 0x001bc600, 0xe1000000, 0xc8060002, 0x00c10000, 0xe9000000, 
    0x00100000, 0x000000c6, 0xe2000002, 0xc8080002, 0x026c6c00, 0xe6000000, 
    0xc80d0000, 0x00f37100, 0xa102fe00, 0xc5f81000, 0x00000458, 0x00000000, 
    0xb8100200, 0x010000c0, 0xc20000ff, 0x4c200000, 0x0000006c, 0xe2000002, 
    0xc8020000, 0x00c6b100, 0xe1020000, 0x2c200000, 0x000000b1, 0xe2000000, 
    0xc8020000, 0x006cb100, 0xe1020000, 0x30200000, 0x000000b1, 0xe2000000, 
    0xc8080002, 0x00b16cc6, 0xec000101, 0xc8070002, 0x00c1c000, 0xa000ff00, 
    0xc8010001, 0x00b11b1b, 0xec020102, 0xc8080002, 0x006cb16c, 0xec020101, 
    0xc5f81040, 0x00000688, 0x00000000, 0xc5f82040, 0x00000fc8, 0x00000000, 
    0xc5f83040, 0x00000688, 0x00000000, 0x5c080002, 0x00c6c6c6, 0xa002fe00, 
    0xc889c03e, 0xa0a7a700, 0xaf030300, 0x20210404, 0x011b001b, 0xe8020002, 
    0x20180402, 0x046cc66c, 0xa004fe04, 0xc8080002, 0x00b16c1b, 0xeb040402, 
    0xc8040002, 0x001bc600, 0xe0020200, 0x5c000000, 0x000000c6, 0xe2000002, 
    0xc802803e, 0xa0a7a700, 0xaf030100, 0x5c000000, 0x000000c6, 0xe2000000, 
    0xc8038000, 0x00b0b000, 0xe2020200, 0xc80f8001, 0xe0000000, 0x8b010201, 
    0x4e4a0000, 0x7fbb7c85, 0x703c5cc3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTextColor.hlsl.h /Vn
//    pBinary_X360_VInstancedTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTextColor.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 2, 0
def c255, -3, -2, 1.10000002, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r2.yz, r3.xxy, r3.xxy
    sge r3.z, r2.y, -r2.y
    exec
    mul r0.xy, r3.zx, c254.yx
    vfetch r1, r0.y, color7
    serialize
    subsc r0.y, -c254.z, -r0.x
    rcp r0.x, r0.y
    mul r0.x, r3.x, r0.x
    frcs r0.x, r0.x
    exec
    mul r0.x, r0.y, r0.x
    truncs r2.x, r0.x
    cndeq r0.w, r2.x, r1.x, r1.y
    add r0.xyz, r2.xxz, c255.xyz
    cndeq r0.w, r0.y, r1.z, r0.w
    cndeq r0.w, r0.x, r1.w, r0.w
    exec
    vfetch r0.xy__, r0.w, texcoord
    vfetch r1, r0.w, position
    alloc position
    exec
    movas r0._, r2.z
    dp4 oPos.x001, r1.wzxy, c[1+a0].wzxy
    frc r0.w, r0.z
  + sgts r2.w, -r0.z
    add r0.z, -r0.w, c255.z
  + sgts r0.w, r0.w
    mad r0.z, r2.w, r0.w, r0.z
    add r0.z, r0.z, r2.z
    exec
    movas r0._, r0.z
    dp4 oPos.y, r1.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    mov o0.xy, r0.xy

// PDB hint 4e4a0000-fee75313-ea584597

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTextColor[] =
{
    0x102a1101, 0x00000190, 0x0000022c, 0x00000024, 0x00000098, 0x0000012c, 
    0x00000154, 0x00000000, 0x00000000, 0x50c76f38, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x7874436f, 0x6c6f722e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000090, 0x0000001c, 0x00000083, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 0x00020000, 
    0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 0x00300000, 
    0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 
    0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000001ec, 0x00000003, 0x00000000, 0x00000000, 
    0x00000821, 0x00000001, 0x00000003, 0x00000001, 0x00000290, 0x0007a012, 
    0x0010501d, 0x0020001e, 0x00003050, 0x00001027, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f000000, 0x40800000, 0x40000000, 0x00000000, 0xc0400000, 0xc0000000, 
    0x3f8ccccd, 0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 
    0x60171200, 0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 0x0000601f, 
    0x20251200, 0x12000000, 0x00000000, 0x1027c400, 0x22000000, 0x14020000, 
    0x001b1b6c, 0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 0x00120100, 
    0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 
    0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 
    0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 
    0x001b6c00, 0xe1000000, 0xc8030003, 0x00c40000, 0xe9000000, 0xc8060002, 
    0x00bcbc00, 0xe0030300, 0xc8040003, 0x02b1b100, 0xe6020200, 0xc8030000, 
    0x006e6d00, 0xa103fe00, 0x45f81000, 0x00000688, 0x00000000, 0xb8200000, 
    0x010000c0, 0xc20000fe, 0x4c100000, 0x000000b1, 0xe2000000, 0xc8010000, 
    0x006c6c00, 0xe1030000, 0x2c100000, 0x0000006c, 0xe2000000, 0xc8010000, 
    0x00b16c00, 0xe1000000, 0x30100200, 0x0000006c, 0xe2000000, 0xc8080000, 
    0x006c6cb1, 0xec020101, 0xc8070000, 0x00ccc000, 0xa002ff00, 0xc8080000, 
    0x00b1c61b, 0xec000100, 0xc8080000, 0x006c1b1b, 0xec000100, 0xc5f80000, 
    0x00000fc8, 0x00000000, 0xc5f81000, 0x00000688, 0x00000000, 0x5c000000, 
    0x000000c6, 0xe2000002, 0xc889c03e, 0xa0a7a700, 0xaf010100, 0x20880200, 
    0x01c600c6, 0xe8000000, 0x20840000, 0x041bc61b, 0xa000ff00, 0xc8040000, 
    0x001b1bc6, 0xeb020000, 0xc8040000, 0x00c6c600, 0xe0000200, 0x5c000000, 
    0x000000c6, 0xe2000000, 0xc802803e, 0xa0a7a700, 0xaf010100, 0xc8038000, 
    0x00b0b000, 0xe2000000, 0x4e4a0000, 0xfee75313, 0xea584597
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTextColorCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfuniforms   c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfuniforms[0], float, vector, [1, 4], c1
defextern const vfuniforms[1], float, vector, [1, 4], c2
defextern const vfuniforms[2], float, vector, [1, 4], c3
defextern const vfuniforms[3], float, vector, [1, 4], c4
defextern const vfuniforms[4], float, vector, [1, 4], c5
defextern const vfuniforms[5], float, vector, [1, 4], c6
defextern const vfuniforms[6], float, vector, [1, 4], c7
defextern const vfuniforms[7], float, vector, [1, 4], c8
defextern const vfuniforms[8], float, vector, [1, 4], c9
defextern const vfuniforms[9], float, vector, [1, 4], c10
defextern const vfuniforms[10], float, vector, [1, 4], c11
defextern const vfuniforms[11], float, vector, [1, 4], c12
defextern const vfuniforms[12], float, vector, [1, 4], c13
defextern const vfuniforms[13], float, vector, [1, 4], c14
defextern const vfuniforms[14], float, vector, [1, 4], c15
defextern const vfuniforms[15], float, vector, [1, 4], c16
defextern const vfuniforms[16], float, vector, [1, 4], c17
defextern const vfuniforms[17], float, vector, [1, 4], c18
defextern const vfuniforms[18], float, vector, [1, 4], c19
defextern const vfuniforms[19], float, vector, [1, 4], c20
defextern const vfuniforms[20], float, vector, [1, 4], c21
defextern const vfuniforms[21], float, vector, [1, 4], c22
defextern const vfuniforms[22], float, vector, [1, 4], c23
defextern const vfuniforms[23], float, vector, [1, 4], c24
defextern const vfuniforms[24], float, vector, [1, 4], c25
defextern const vfuniforms[25], float, vector, [1, 4], c26
defextern const vfuniforms[26], float, vector, [1, 4], c27
defextern const vfuniforms[27], float, vector, [1, 4], c28
defextern const vfuniforms[28], float, vector, [1, 4], c29
defextern const vfuniforms[29], float, vector, [1, 4], c30
defextern const vfuniforms[30], float, vector, [1, 4], c31
defextern const vfuniforms[31], float, vector, [1, 4], c32
defextern const vfuniforms[32], float, vector, [1, 4], c33
defextern const vfuniforms[33], float, vector, [1, 4], c34
defextern const vfuniforms[34], float, vector, [1, 4], c35
defextern const vfuniforms[35], float, vector, [1, 4], c36
defextern const vfuniforms[36], float, vector, [1, 4], c37
defextern const vfuniforms[37], float, vector, [1, 4], c38
defextern const vfuniforms[38], float, vector, [1, 4], c39
defextern const vfuniforms[39], float, vector, [1, 4], c40
defextern const vfuniforms[40], float, vector, [1, 4], c41
defextern const vfuniforms[41], float, vector, [1, 4], c42
defextern const vfuniforms[42], float, vector, [1, 4], c43
defextern const vfuniforms[43], float, vector, [1, 4], c44
defextern const vfuniforms[44], float, vector, [1, 4], c45
defextern const vfuniforms[45], float, vector, [1, 4], c46
defextern const vfuniforms[46], float, vector, [1, 4], c47
defextern const vfuniforms[47], float, vector, [1, 4], c48
defextern const vfuniforms[48], float, vector, [1, 4], c49
defextern const vfuniforms[49], float, vector, [1, 4], c50
defextern const vfuniforms[50], float, vector, [1, 4], c51
defextern const vfuniforms[51], float, vector, [1, 4], c52
defextern const vfuniforms[52], float, vector, [1, 4], c53
defextern const vfuniforms[53], float, vector, [1, 4], c54
defextern const vfuniforms[54], float, vector, [1, 4], c55
defextern const vfuniforms[55], float, vector, [1, 4], c56
defextern const vfuniforms[56], float, vector, [1, 4], c57
defextern const vfuniforms[57], float, vector, [1, 4], c58
defextern const vfuniforms[58], float, vector, [1, 4], c59
defextern const vfuniforms[59], float, vector, [1, 4], c60
defextern const vfuniforms[60], float, vector, [1, 4], c61
defextern const vfuniforms[61], float, vector, [1, 4], c62
defextern const vfuniforms[62], float, vector, [1, 4], c63
defextern const vfuniforms[63], float, vector, [1, 4], c64
defextern const vfuniforms[64], float, vector, [1, 4], c65
defextern const vfuniforms[65], float, vector, [1, 4], c66
defextern const vfuniforms[66], float, vector, [1, 4], c67
defextern const vfuniforms[67], float, vector, [1, 4], c68
defextern const vfuniforms[68], float, vector, [1, 4], c69
defextern const vfuniforms[69], float, vector, [1, 4], c70
defextern const vfuniforms[70], float, vector, [1, 4], c71
defextern const vfuniforms[71], float, vector, [1, 4], c72
defextern const vfuniforms[72], float, vector, [1, 4], c73
defextern const vfuniforms[73], float, vector, [1, 4], c74
defextern const vfuniforms[74], float, vector, [1, 4], c75
defextern const vfuniforms[75], float, vector, [1, 4], c76
defextern const vfuniforms[76], float, vector, [1, 4], c77
defextern const vfuniforms[77], float, vector, [1, 4], c78
defextern const vfuniforms[78], float, vector, [1, 4], c79
defextern const vfuniforms[79], float, vector, [1, 4], c80
defextern const vfuniforms[80], float, vector, [1, 4], c81
defextern const vfuniforms[81], float, vector, [1, 4], c82
defextern const vfuniforms[82], float, vector, [1, 4], c83
defextern const vfuniforms[83], float, vector, [1, 4], c84
defextern const vfuniforms[84], float, vector, [1, 4], c85
defextern const vfuniforms[85], float, vector, [1, 4], c86
defextern const vfuniforms[86], float, vector, [1, 4], c87
defextern const vfuniforms[87], float, vector, [1, 4], c88
defextern const vfuniforms[88], float, vector, [1, 4], c89
defextern const vfuniforms[89], float, vector, [1, 4], c90
defextern const vfuniforms[90], float, vector, [1, 4], c91
defextern const vfuniforms[91], float, vector, [1, 4], c92
defextern const vfuniforms[92], float, vector, [1, 4], c93
defextern const vfuniforms[93], float, vector, [1, 4], c94
defextern const vfuniforms[94], float, vector, [1, 4], c95
defextern const vfuniforms[95], float, vector, [1, 4], c96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, 1.10000002, 0
def c255, -3, -2, 2, 0.5


    exec
    add r0.y, c0.w, c255.w
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c255.w
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.xy, r0.z, r0.xy
    frcs r0.z, r0.x
    mul r0.z, r0.w, r0.z
    trunc r1.yz, r0.yyz
    adds r0.x, r1.zz
    sge r1.w, r0.x, -r0.x
    exec
    mul r0.xzw, r1.wyyz, c254.yyyx
    vfetch r2, r0.w, color7
    serialize
    subsc r1.x, -c255.z, -r0.x
    rcp r0.y, r1.x
    mul r0.y, r1.z, r0.y
    frcs r0.y, r0.y
    exec
    mul r0.y, r1.x, r0.y
    truncs r0.y, r0.y
    cndeq r1.w, r0.y, r2.x, r2.y
    add r1.xyz, r0.yyz, c255.xyz
    cndeq r1.w, r1.y, r2.z, r1.w
    cndeq r1.w, r1.x, r2.w, r1.w
    exec
    vfetch r1.xy__, r1.w, texcoord
    vfetch r2, r1.w, position
    alloc position
    exec
    add r1.w, r1.z, c254.z
  + movas r0._, r0.z
    dp4 oPos.x001, r2.wzxy, c[3+a0].wzxy
    frc r3.x, r1.w
  + sgts r3.y, -r1.w
    add r1.w, -r3.x, c254.z
  + sgts r3.x, r3.x
    mad r1.w, r3.y, r3.x, r1.w
    add r1.z, r1.w, r1.z
    exec
    movas r0._, r1.z
    dp4 oPos.y, r2.wzxy, c[1+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.z
    mov o2.xy, r1.xy
    mov o0, c[1+a0]
    mov o1, c[2+a0]

// PDB hint 4e4a0000-07ae1cd5-c4373401

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedTextColorCxform[] =
{
    0x102a1101, 0x000001a4, 0x00000250, 0x00000024, 0x0000009c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f38, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x65645465, 0x7874436f, 0x6c6f7243, 0x78666f72, 
    0x6d2e686c, 0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 
    0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 
    0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00600000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000210, 0x00200003, 0x00000000, 
    0x00000000, 0x00002863, 0x00000001, 0x00000003, 0x00000003, 0x00000290, 
    0x0007a012, 0x0010501d, 0x0020001e, 0x0000f050, 0x0001f151, 0x00023252, 
    0x00001029, 0x0000102a, 0x00001028, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x40800000, 0x3f8ccccd, 0x00000000, 0xc0400000, 0xc0000000, 0x40000000, 
    0x3f000000, 0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 
    0x12000000, 0x3005201d, 0x00001200, 0xc2000000, 0x0000601f, 0x20251200, 
    0x12000000, 0x00000000, 0x4027c400, 0x22000000, 0x14020000, 0x001b1b6c, 
    0x2000ff00, 0x04410000, 0x00b1001b, 0xc90000ff, 0x00120100, 0x00c66c6c, 
    0xe1000000, 0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 
    0xeb010000, 0x4c100000, 0x0000001b, 0xe2000000, 0xc8030000, 0x00c6b000, 
    0xe1000000, 0x2c400000, 0x0000006c, 0xe2000000, 0xc8040000, 0x001bc600, 
    0xe1000000, 0xc8060001, 0x00c10000, 0xe9000000, 0x00100000, 0x000000c6, 
    0xe2000001, 0xc8080001, 0x026c6c00, 0xe6000000, 0xc80d0000, 0x00f37100, 
    0xa101fe00, 0xc5f82000, 0x00000688, 0x00000000, 0xb8100100, 0x010000c0, 
    0xc20000ff, 0x4c200000, 0x0000006c, 0xe2000001, 0xc8020000, 0x00c6b100, 
    0xe1010000, 0x2c200000, 0x000000b1, 0xe2000000, 0xc8020000, 0x006cb100, 
    0xe1010000, 0x30200000, 0x000000b1, 0xe2000000, 0xc8080001, 0x00b16cb1, 
    0xec000202, 0xc8070001, 0x00c1c000, 0xa000ff00, 0xc8080001, 0x00b1c61b, 
    0xec010201, 0xc8080001, 0x006c1b1b, 0xec010201, 0xc5f81020, 0x00000fc8, 
    0x00000000, 0xc5f82020, 0x00000688, 0x00000000, 0x5c080001, 0x00c6c6c6, 
    0xa001fe00, 0xc889c03e, 0xa0a7a700, 0xaf020300, 0x20210303, 0x011b001b, 
    0xe8010001, 0x20180301, 0x046cc66c, 0xa003fe03, 0xc8080001, 0x00b16c1b, 
    0xeb030301, 0xc8040001, 0x001bc600, 0xe0010100, 0x5c000000, 0x000000c6, 
    0xe2000001, 0xc802803e, 0xa0a7a700, 0xaf020100, 0x5c000000, 0x000000c6, 
    0xe2000000, 0xc8038002, 0x00b0b000, 0xe2010100, 0xc80f8000, 0xe0000000, 
    0x22010100, 0xc80f8001, 0xe0000000, 0x22020200, 0x4e4a0000, 0x07ae1cd5, 
    0xc4373401
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dSolid.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dSolid /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dSolid.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2

dcl_index r0.x

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyz, r2.ywz, c254.xy
    vfetch r1, r0.x, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.w, r2.x
    mul r0.w, r2.y, r0.w
    frcs r0.w, r0.w
    exec
    mul r0.w, r2.x, r0.w
    truncs r2.x, r0.w
    cndeq r0.w, r2.x, r1.x, r1.y
    add r2.xy, r2.x, c254.zw
    cndeq r0.w, r2.y, r1.z, r0.w
    cndeq r0.w, r2.x, r1.w, r0.w
    exec
    vfetch r1, r0.w, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r1.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r1.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r1.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r1.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece

// PDB hint 4e4a0000-93ec91f1-b9ad37be

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dSolid.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dSolid[] =
{
    0x102a1101, 0x00000188, 0x000001f0, 0x00000024, 0x0000009c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x536f6c69, 
    0x642e686c, 0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 0x00000083, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 0x00000044, 
    0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020001, 
    0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 0x6e69666f, 
    0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000001b0, 0x00000002, 0x00000000, 
    0x00000000, 0x00000000, 0x00000001, 0x00000002, 0x00000000, 0x00000290, 
    0x0007a012, 0x0000001d, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 
    0xc0400000, 0xc0000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 
    0x1001101d, 0x00001200, 0xc2000000, 0x0000501e, 0x00001200, 0xc4000000, 
    0x00000005, 0x00002200, 0x00000000, 0x14020000, 0x001b6c6c, 0x2000fe00, 
    0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 
    0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 
    0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 
    0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 
    0xc8060002, 0x00cc0000, 0xe9000000, 0x00100000, 0x000000b1, 0xe2000002, 
    0xc8080002, 0x026c6c00, 0xe6000000, 0xc8070000, 0x00c9b000, 0xa102fe00, 
    0x05f81000, 0x00000688, 0x00000000, 0xb8100200, 0x01000041, 0xc20000ff, 
    0x4c800000, 0x0000006c, 0xe2000002, 0xc8080000, 0x00b11b00, 0xe1020000, 
    0x2c800000, 0x0000001b, 0xe2000000, 0xc8080000, 0x006c1b00, 0xe1020000, 
    0x30100200, 0x0000001b, 0xe2000000, 0xc8080000, 0x006c6cb1, 0xec020101, 
    0xc8030002, 0x006c1a00, 0xa002fe00, 0xc8080000, 0x00b1c61b, 0xec020100, 
    0xc8080000, 0x006c1b1b, 0xec020100, 0xc5f81000, 0x00000688, 0x00000000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf010100, 
    0xc802803e, 0xa0a7a700, 0xaf010200, 0xc804803e, 0xa0a7a700, 0xaf010300, 
    0xc808803e, 0xa0a7a700, 0xaf010400, 0x4e4a0000, 0x93ec91f1, 0xb9ad37be
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dText.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dText /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dText.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r0.xw, r3.xy, r3.xy
    sge r3.z, r0.x, -r0.x
    exec
    mul r0.xyz, r3.xzy, c254.xy
    vfetch r1.xwyz, r0.x, color7
    serialize
    subsc r2.y, -c255.x, -r0.y
    rcp r2.x, r2.y
    mul r2.x, r3.x, r2.x
    frcs r2.x, r2.x
    exec
    mul r2.x, r2.y, r2.x
    truncs r2.x, r2.x
    cndeq r2.z, r2.x, r1.x, r1.z
    add r2.xy, r2.x, c254.zw
    cndeq r1.x, r2.y, r1.w, r2.z
    cndeq r2.z, r2.x, r1.y, r1.x
    exec
    vfetch r1, r2.z, color
    vfetch r2.xy__, r2.z, texcoord
    vfetch r3, r2.z, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r3.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r3.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r3.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r3.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.w
    mov o0.xy, r2.xy
    mad o1, r1, c[98+a0], c[97+a0]

// PDB hint 4e4a0000-2ce2e32d-59c9fccb

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dText.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dText[] =
{
    0x102a1101, 0x000001d0, 0x0000022c, 0x00000024, 0x0000009c, 0x00000160, 
    0x00000188, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657874, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000c0, 0x0000001c, 0x000000b3, 
    0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x000000ac, 0x00000058, 
    0x00020000, 0x00010000, 0x00000064, 0x00000000, 0x00000074, 0x00020001, 
    0x00600000, 0x00000080, 0x00000000, 0x00000090, 0x00020061, 0x00300000, 
    0x0000009c, 0x00000000, 0x696e7374, 0x53697a65, 0x00ababab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x76666d75, 0x6e69666f, 0x726d7300, 
    0x00030003, 0x00040004, 0x00180000, 0x00000000, 0x7666756e, 0x69666f72, 
    0x6d7300ab, 0x00010003, 0x00010004, 0x00300000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000001ec, 0x00100003, 0x00000000, 
    0x00000000, 0x00001842, 0x00000001, 0x00000004, 0x00000002, 0x00000290, 
    0x0007a012, 0x0010a01d, 0x0000501e, 0x0020001f, 0x00003050, 0x0001f1a0, 
    0x00001026, 0x00001027, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 0x40800000, 
    0xc0400000, 0xc0000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00006005, 0x600b1200, 0x12000000, 0x20246011, 0x60171200, 0x12000000, 
    0x7015301d, 0x00001200, 0xc2000000, 0x00005020, 0x00001200, 0xc4000000, 
    0x00003025, 0x00002200, 0x00000000, 0x14020000, 0x001b6c6c, 0x2000fe00, 
    0x04410000, 0x00b1006c, 0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 
    0x4c280000, 0x02b1b11b, 0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 
    0x4c100000, 0x0000001b, 0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 
    0x2c100000, 0x000000b1, 0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 
    0xc8030003, 0x00c40000, 0xe9000000, 0xc8090000, 0x00b0b000, 0xe0030300, 
    0xc8040003, 0x026c6c00, 0xe6000000, 0xc8070000, 0x00b4b000, 0xa103fe00, 
    0x05f81000, 0x00000458, 0x00000000, 0xb8200200, 0x01000041, 0xc20000ff, 
    0x4c100200, 0x000000b1, 0xe2000002, 0xc8010002, 0x006c6c00, 0xe1030200, 
    0x2c100200, 0x0000006c, 0xe2000002, 0xc8010002, 0x00b16c00, 0xe1020200, 
    0x30100200, 0x0000006c, 0xe2000002, 0xc8040002, 0x006c6cc6, 0xec020101, 
    0xc8030002, 0x006c1a00, 0xa002fe00, 0xc8010001, 0x00b11bc6, 0xec020102, 
    0xc8040002, 0x006cb16c, 0xec020101, 0x85f81040, 0x00000688, 0x00000000, 
    0x85f82040, 0x00000fc8, 0x00000000, 0x85f83040, 0x00000688, 0x00000000, 
    0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 0xaf030100, 
    0xc802803e, 0xa0a7a700, 0xaf030200, 0xc804803e, 0xa0a7a700, 0xaf030300, 
    0xc808803e, 0xa0a7a700, 0xaf030400, 0x5c000000, 0x0000001b, 0xe2000000, 
    0xc8038000, 0x00b0b000, 0xe2020200, 0xc80f8001, 0xe0000000, 0x8b016261, 
    0x4e4a0000, 0x2ce2e32d, 0x59c9fccb
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTextColor.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTextColor /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTextColor.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2

dcl_index r0.x
dcl_texcoord o0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r2.yz, r0.xxz
    adds r0.x, r2.yy
    sge r2.w, r0.x, -r0.x
    exec
    mul r0.xyz, r2.ywz, c254.xy
    vfetch r1, r0.x, color7
    serialize
    subsc r2.x, -c255.x, -r0.y
    rcp r0.w, r2.x
    mul r0.w, r2.y, r0.w
    frcs r0.w, r0.w
    exec
    mul r0.w, r2.x, r0.w
    truncs r2.x, r0.w
    cndeq r0.w, r2.x, r1.x, r1.y
    add r2.xy, r2.x, c254.zw
    cndeq r0.w, r2.y, r1.z, r0.w
    cndeq r0.w, r2.x, r1.w, r0.w
    exec
    vfetch r1.xy__, r0.w, texcoord
    vfetch r2, r0.w, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    mov o0.xy, r1.xy

// PDB hint 4e4a0000-82ec7669-d6f56c3e

// Debugger Hint:
//  Timestamp: 50c76f38
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTextColor.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTextColor[] =
{
    0x102a1101, 0x00000198, 0x00000208, 0x00000024, 0x000000a0, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f38, 0x00000073, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657874, 
    0x436f6c6f, 0x722e686c, 0x736c2e75, 0x70646200, 0x00000090, 0x0000001c, 
    0x00000083, 0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x0000007c, 
    0x00000044, 0x00020000, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 
    0x00020001, 0x00600000, 0x0000006c, 0x00000000, 0x696e7374, 0x53697a65, 
    0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x76666d75, 
    0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001c8, 0x00000002, 
    0x00000000, 0x00000000, 0x00000821, 0x00000001, 0x00000003, 0x00000001, 
    0x00000290, 0x0007a012, 0x0010501d, 0x0020001e, 0x00003050, 0x00001024, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0xc0400000, 0xc0000000, 
    0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x00006005, 0x600b1200, 
    0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x3005201d, 0x00001200, 
    0xc2000000, 0x0000501f, 0x00001200, 0xc4000000, 0x00001024, 0x00002200, 
    0x00000000, 0x14020000, 0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 
    0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 
    0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 
    0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8060002, 0x00cc0000, 
    0xe9000000, 0x00100000, 0x000000b1, 0xe2000002, 0xc8080002, 0x026c6c00, 
    0xe6000000, 0xc8070000, 0x00c9b000, 0xa102fe00, 0x05f81000, 0x00000688, 
    0x00000000, 0xb8100200, 0x01000041, 0xc20000ff, 0x4c800000, 0x0000006c, 
    0xe2000002, 0xc8080000, 0x00b11b00, 0xe1020000, 0x2c800000, 0x0000001b, 
    0xe2000000, 0xc8080000, 0x006c1b00, 0xe1020000, 0x30100200, 0x0000001b, 
    0xe2000000, 0xc8080000, 0x006c6cb1, 0xec020101, 0xc8030002, 0x006c1a00, 
    0xa002fe00, 0xc8080000, 0x00b1c61b, 0xec020100, 0xc8080000, 0x006c1b1b, 
    0xec020100, 0xc5f81000, 0x00000fc8, 0x00000000, 0xc5f82000, 0x00000688, 
    0x00000000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 
    0xaf020100, 0xc802803e, 0xa0a7a700, 0xaf020200, 0xc804803e, 0xa0a7a700, 
    0xaf020300, 0xc808803e, 0xa0a7a700, 0xaf020400, 0xc8038000, 0x00b0b000, 
    0xe2010100, 0x4e4a0000, 0x82ec7669, 0xd6f56c3e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTextColorCxform.hlsl.h
//    /Vn pBinary_X360_VInstancedPosition3dTextColorCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VInstancedPosition3dTextColorCxform.hlsl
//
//
// Parameters:
//
//   float4 instSize;
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   instSize     c0       1
//   vfmuniforms  c1      96
//   vfuniforms   c97     48
//

// Shader type: vertex 

xvs_3_0
defextern const instSize, float, vector, [1, 4], c0
defextern const vfmuniforms[0], float, matrix_columns, [4, 4], c1-4
defextern const vfmuniforms[1], float, matrix_columns, [4, 4], c5-8
defextern const vfmuniforms[2], float, matrix_columns, [4, 4], c9-12
defextern const vfmuniforms[3], float, matrix_columns, [4, 4], c13-16
defextern const vfmuniforms[4], float, matrix_columns, [4, 4], c17-20
defextern const vfmuniforms[5], float, matrix_columns, [4, 4], c21-24
defextern const vfmuniforms[6], float, matrix_columns, [4, 4], c25-28
defextern const vfmuniforms[7], float, matrix_columns, [4, 4], c29-32
defextern const vfmuniforms[8], float, matrix_columns, [4, 4], c33-36
defextern const vfmuniforms[9], float, matrix_columns, [4, 4], c37-40
defextern const vfmuniforms[10], float, matrix_columns, [4, 4], c41-44
defextern const vfmuniforms[11], float, matrix_columns, [4, 4], c45-48
defextern const vfmuniforms[12], float, matrix_columns, [4, 4], c49-52
defextern const vfmuniforms[13], float, matrix_columns, [4, 4], c53-56
defextern const vfmuniforms[14], float, matrix_columns, [4, 4], c57-60
defextern const vfmuniforms[15], float, matrix_columns, [4, 4], c61-64
defextern const vfmuniforms[16], float, matrix_columns, [4, 4], c65-68
defextern const vfmuniforms[17], float, matrix_columns, [4, 4], c69-72
defextern const vfmuniforms[18], float, matrix_columns, [4, 4], c73-76
defextern const vfmuniforms[19], float, matrix_columns, [4, 4], c77-80
defextern const vfmuniforms[20], float, matrix_columns, [4, 4], c81-84
defextern const vfmuniforms[21], float, matrix_columns, [4, 4], c85-88
defextern const vfmuniforms[22], float, matrix_columns, [4, 4], c89-92
defextern const vfmuniforms[23], float, matrix_columns, [4, 4], c93-96
defextern const vfuniforms[0], float, vector, [1, 4], c97
defextern const vfuniforms[1], float, vector, [1, 4], c98
defextern const vfuniforms[2], float, vector, [1, 4], c99
defextern const vfuniforms[3], float, vector, [1, 4], c100
defextern const vfuniforms[4], float, vector, [1, 4], c101
defextern const vfuniforms[5], float, vector, [1, 4], c102
defextern const vfuniforms[6], float, vector, [1, 4], c103
defextern const vfuniforms[7], float, vector, [1, 4], c104
defextern const vfuniforms[8], float, vector, [1, 4], c105
defextern const vfuniforms[9], float, vector, [1, 4], c106
defextern const vfuniforms[10], float, vector, [1, 4], c107
defextern const vfuniforms[11], float, vector, [1, 4], c108
defextern const vfuniforms[12], float, vector, [1, 4], c109
defextern const vfuniforms[13], float, vector, [1, 4], c110
defextern const vfuniforms[14], float, vector, [1, 4], c111
defextern const vfuniforms[15], float, vector, [1, 4], c112
defextern const vfuniforms[16], float, vector, [1, 4], c113
defextern const vfuniforms[17], float, vector, [1, 4], c114
defextern const vfuniforms[18], float, vector, [1, 4], c115
defextern const vfuniforms[19], float, vector, [1, 4], c116
defextern const vfuniforms[20], float, vector, [1, 4], c117
defextern const vfuniforms[21], float, vector, [1, 4], c118
defextern const vfuniforms[22], float, vector, [1, 4], c119
defextern const vfuniforms[23], float, vector, [1, 4], c120
defextern const vfuniforms[24], float, vector, [1, 4], c121
defextern const vfuniforms[25], float, vector, [1, 4], c122
defextern const vfuniforms[26], float, vector, [1, 4], c123
defextern const vfuniforms[27], float, vector, [1, 4], c124
defextern const vfuniforms[28], float, vector, [1, 4], c125
defextern const vfuniforms[29], float, vector, [1, 4], c126
defextern const vfuniforms[30], float, vector, [1, 4], c127
defextern const vfuniforms[31], float, vector, [1, 4], c128
defextern const vfuniforms[32], float, vector, [1, 4], c129
defextern const vfuniforms[33], float, vector, [1, 4], c130
defextern const vfuniforms[34], float, vector, [1, 4], c131
defextern const vfuniforms[35], float, vector, [1, 4], c132
defextern const vfuniforms[36], float, vector, [1, 4], c133
defextern const vfuniforms[37], float, vector, [1, 4], c134
defextern const vfuniforms[38], float, vector, [1, 4], c135
defextern const vfuniforms[39], float, vector, [1, 4], c136
defextern const vfuniforms[40], float, vector, [1, 4], c137
defextern const vfuniforms[41], float, vector, [1, 4], c138
defextern const vfuniforms[42], float, vector, [1, 4], c139
defextern const vfuniforms[43], float, vector, [1, 4], c140
defextern const vfuniforms[44], float, vector, [1, 4], c141
defextern const vfuniforms[45], float, vector, [1, 4], c142
defextern const vfuniforms[46], float, vector, [1, 4], c143
defextern const vfuniforms[47], float, vector, [1, 4], c144
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 4, -3, -2
def c255, 2, 0, 0, 0


    exec
    add r0.y, c0.w, c254.x
  + movs r0._, r0.x
    trunc r0.x, r0.y
  + adds_prev r0.z, c254.x
    mul r0.y, r0.z, r0.x
  + adds r1.x, r0.xx
    sge r0.w, r0.y, -r0.y
  + rcp r0.y, c0.w
    mad r0.w, r1.x, r0.w, -r0.x
    rcp r0.x, r0.w
    exec
    mul r0.yz, r0.z, r0.xxy
    frcs r0.x, r0.y
    mul r0.x, r0.w, r0.x
    trunc r3.xy, r0.xz
    add r0.xw, r3.xy, r3.xy
    sge r3.z, r0.x, -r0.x
    exec
    mul r0.xyz, r3.xzy, c254.xy
    vfetch r1.xwyz, r0.x, color7
    serialize
    subsc r2.y, -c255.x, -r0.y
    rcp r2.x, r2.y
    mul r2.x, r3.x, r2.x
    frcs r2.x, r2.x
    exec
    mul r2.x, r2.y, r2.x
    truncs r2.x, r2.x
    cndeq r2.z, r2.x, r1.x, r1.z
    add r2.xy, r2.x, c254.zw
    cndeq r1.x, r2.y, r1.w, r2.z
    cndeq r1.z, r2.x, r1.y, r1.x
    exec
    vfetch r1.xy__, r1.z, texcoord
    vfetch r2, r1.z, position
    alloc position
    exec
    movas r0._, r0.z
    dp4 oPos.x, r2.wzxy, c[1+a0].wzxy
    dp4 oPos.y, r2.wzxy, c[2+a0].wzxy
    dp4 oPos.z, r2.wzxy, c[3+a0].wzxy
    dp4 oPos.w, r2.wzxy, c[4+a0].wzxy
    alloc interpolators
    exece
    movas r0._, r0.w
    mov o2.xy, r1.xy
    mov o0, c[97+a0]
    mov o1, c[98+a0]

// PDB hint 4e4a0000-8b3c8cb5-fa15f69a

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VInstancedPosition3dTextColorCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VInstancedPosition3dTextColorCxform[] =
{
    0x102a1101, 0x000001e0, 0x0000022c, 0x00000024, 0x000000a8, 0x0000016c, 
    0x00000194, 0x00000000, 0x00000000, 0x50c76f39, 0x00000079, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56496e73, 0x74616e63, 0x6564506f, 0x73697469, 0x6f6e3364, 0x54657874, 
    0x436f6c6f, 0x72437866, 0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x000000c0, 0x0000001c, 0x000000b3, 0xfffe0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x000000ac, 0x00000058, 0x00020000, 0x00010000, 0x00000064, 
    0x00000000, 0x00000074, 0x00020001, 0x00600000, 0x00000080, 0x00000000, 
    0x00000090, 0x00020061, 0x00300000, 0x0000009c, 0x00000000, 0x696e7374, 
    0x53697a65, 0x00ababab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76666d75, 0x6e69666f, 0x726d7300, 0x00030003, 0x00040004, 0x00180000, 
    0x00000000, 0x7666756e, 0x69666f72, 0x6d7300ab, 0x00010003, 0x00010004, 
    0x00300000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000001ec, 0x00200003, 0x00000000, 0x00000000, 0x00002863, 0x00000001, 
    0x00000003, 0x00000003, 0x00000290, 0x0007a012, 0x0010501d, 0x0020001e, 
    0x0000f050, 0x0001f151, 0x00023252, 0x00001026, 0x00001027, 0x00001025, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f000000, 0x40800000, 0xc0400000, 0xc0000000, 
    0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x00006005, 0x600b1200, 
    0x12000000, 0x20246011, 0x60171200, 0x12000000, 0x3005201d, 0x00001200, 
    0xc2000000, 0x0000501f, 0x00001200, 0xc4000000, 0x00004024, 0x00002200, 
    0x00000000, 0x14020000, 0x001b6c6c, 0x2000fe00, 0x04410000, 0x00b1006c, 
    0xc90000fe, 0x00120100, 0x00c66c6c, 0xe1000000, 0x4c280000, 0x02b1b11b, 
    0xc6000000, 0xc8080000, 0x016c1b6c, 0xeb010000, 0x4c100000, 0x0000001b, 
    0xe2000000, 0xc8060000, 0x00c6bc00, 0xe1000000, 0x2c100000, 0x000000b1, 
    0xe2000000, 0xc8010000, 0x001b6c00, 0xe1000000, 0xc8030003, 0x00c40000, 
    0xe9000000, 0xc8090000, 0x00b0b000, 0xe0030300, 0xc8040003, 0x026c6c00, 
    0xe6000000, 0xc8070000, 0x00b4b000, 0xa103fe00, 0x05f81000, 0x00000458, 
    0x00000000, 0xb8200200, 0x01000041, 0xc20000ff, 0x4c100200, 0x000000b1, 
    0xe2000002, 0xc8010002, 0x006c6c00, 0xe1030200, 0x2c100200, 0x0000006c, 
    0xe2000002, 0xc8010002, 0x00b16c00, 0xe1020200, 0x30100200, 0x0000006c, 
    0xe2000002, 0xc8040002, 0x006c6cc6, 0xec020101, 0xc8030002, 0x006c1a00, 
    0xa002fe00, 0xc8010001, 0x00b11bc6, 0xec020102, 0xc8040001, 0x006cb16c, 
    0xec020101, 0x85f81020, 0x00000fc8, 0x00000000, 0x85f82020, 0x00000688, 
    0x00000000, 0x5c000000, 0x000000c6, 0xe2000000, 0xc801803e, 0xa0a7a700, 
    0xaf020100, 0xc802803e, 0xa0a7a700, 0xaf020200, 0xc804803e, 0xa0a7a700, 
    0xaf020300, 0xc808803e, 0xa0a7a700, 0xaf020400, 0x5c000000, 0x0000001b, 
    0xe2000000, 0xc8038002, 0x00b0b000, 0xe2010100, 0xc80f8000, 0xe0000000, 
    0x22616100, 0xc80f8001, 0xe0000000, 0x22626200, 0x4e4a0000, 0x8b3c8cb5, 
    0xfa15f69a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUV.hlsl.h /Vn
//    pBinary_X360_FYUV /XZi ..\..\..\..\..\Src\Render\\X360\Shaders\FYUV.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exece
    mad r1.xyz, r2.zzx, c254.xxy, c255.yzx
    mul r0.xy, r2.xy, c254.zw
    dp2add r0.z, r2.zy, c253.xy, c255.w
    add r0.xyw, r1.zxy, r0.zxy
    addsc r0.z, c253.z, r0.x
    mov oC0.xyz1, r0.yzw

// PDB hint 4e4a0000-afbb1ddd-ec844690

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUV.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUV[] =
{
    0x102a1100, 0x00000130, 0x000000d0, 0x00000024, 0x00000088, 0x000000e4, 
    0x0000010c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00030000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00030000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000090, 0x10000200, 0x00000004, 0x00000000, 
    0x00000821, 0x00010001, 0x00000001, 0x00003050, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 0x00000000, 
    0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 0xbf5fc943, 
    0xbf8af158, 0x00000000, 0x00153002, 0x00001200, 0xc4000000, 0x00006005, 
    0x00002200, 0x00000000, 0x10282001, 0x1f1ffffb, 0x00004000, 0x10182001, 
    0x1f1fffdf, 0x00004000, 0x10082001, 0x1f1ffeff, 0x00004000, 0xc8070001, 
    0x0066bc65, 0x8b02feff, 0xc8030000, 0x00b01a00, 0xa102fe00, 0xc8040000, 
    0x00b2b01b, 0x9102fdff, 0xc80b0000, 0x00bebe00, 0xe0010000, 0xb0400000, 
    0x000000c0, 0xc20000fd, 0xc88fc000, 0x00151500, 0xe2000000, 0x4e4a0000, 
    0xafbb1ddd, 0xec844690
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVMul.hlsl.h /Vn
//    pBinary_X360_FYUVMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exece
    mad r1.xyz, r2.zzx, c254.xxy, c255.yzx
    mul r0.xy, r2.xy, c254.zw
    dp2add r0.z, r2.zy, c253.xy, c255.w
    add r0.xyw, r1.zxy, r0.zxy
    addsc r0.z, c253.z, r0.x
    mov oC0.xyz1, r0.yzw

// PDB hint 4e4a0000-ec14f297-b9c54563

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVMul[] =
{
    0x102a1100, 0x00000134, 0x000000d0, 0x00000024, 0x0000008c, 0x000000e8, 
    0x00000110, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000090, 0x10000200, 0x00000004, 
    0x00000000, 0x00000821, 0x00010001, 0x00000001, 0x00003050, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 
    0x00000000, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 
    0xbf5fc943, 0xbf8af158, 0x00000000, 0x00153002, 0x00001200, 0xc4000000, 
    0x00006005, 0x00002200, 0x00000000, 0x10282001, 0x1f1ffffb, 0x00004000, 
    0x10182001, 0x1f1fffdf, 0x00004000, 0x10082001, 0x1f1ffeff, 0x00004000, 
    0xc8070001, 0x0066bc65, 0x8b02feff, 0xc8030000, 0x00b01a00, 0xa102fe00, 
    0xc8040000, 0x00b2b01b, 0x9102fdff, 0xc80b0000, 0x00bebe00, 0xe0010000, 
    0xb0400000, 0x000000c0, 0xc20000fd, 0xc88fc000, 0x00151500, 0xe2000000, 
    0x4e4a0000, 0xec14f297, 0xb9c54563
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, -0.87416476, -1.08549023, 0.408094168, 0.123733327
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 1.16400003, -0.39199999, 0, 0


    exec
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exece
    mul r3, r2.zxxy, c254
    add r0.xyz, r3.xxy, c253.xyz
    add oC0.xz, r0.xy, r3.zw
    dp2add r0.x, r2.zy, c255.xy, r0.z
    add oC0.y, r0.x, c253.w
  + movs oC0.w, r1.w

// PDB hint 4e4a0000-1a6808f1-fcc1c46f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVEAlpha[] =
{
    0x102a1100, 0x00000138, 0x000000c4, 0x00000024, 0x0000008c, 0x000000e8, 
    0x00000110, 0x00000000, 0x00000000, 0x50c76f39, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x45416c70, 0x68612e68, 0x6c736c2e, 0x75706462, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000084, 0x10000300, 0x00000008, 
    0x00000000, 0x00001842, 0x00010003, 0x00000001, 0x00003050, 0x0000f1a0, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xbf5fc943, 0xbf8af158, 
    0x3ed0f1b8, 0x3dfd67e6, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 
    0x3f94fdf4, 0xbec8b439, 0x00000000, 0x00000000, 0x00153002, 0x00001200, 
    0xc4000000, 0x00005005, 0x00002200, 0x00000000, 0x10282001, 0x1f1ffffb, 
    0x00004000, 0x10182001, 0x1f1fffdf, 0x00004000, 0x10082001, 0x1f1ffeff, 
    0x00004000, 0xc80f0103, 0x00ae0000, 0xa102fe00, 0xc8070100, 0x00bcc000, 
    0xa003fd00, 0xc8058000, 0x00b01a00, 0xe0000300, 0xc8010100, 0x00b2b0c6, 
    0xb102ff00, 0x14828000, 0x006c1b1b, 0xa000fd01, 0x4e4a0000, 0x1a6808f1, 
    0xfcc1c46f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FYUVEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exece
    movs r2.w, c253.x
    dp2add r0.x, r2.zx, c254.xy, c253.y
    dp2add r0.y, r2.zy, c254.xz, c254.w
    dp4 r0.z, c255, r2.xzyw
    mul oC0.xyz, r0.xzy, r1.w
  + movs oC0.w, r1.w

// PDB hint 4e4a0000-47d4729a-c960817a

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVEAlphaMul[] =
{
    0x102a1100, 0x0000013c, 0x000000c4, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x45416c70, 0x68614d75, 0x6c2e686c, 0x736c2e75, 0x70646200, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000084, 0x10000200, 
    0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 0x00003050, 
    0x0000f1a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 
    0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00153002, 
    0x00001200, 0xc4000000, 0x00005005, 0x00002200, 0x00000000, 0x10282001, 
    0x1f1ffffb, 0x00004000, 0x10182001, 0x1f1fffdf, 0x00004000, 0x10082001, 
    0x1f1ffeff, 0x00004000, 0x14800201, 0x0000006c, 0xc20101fd, 0xc8010100, 
    0x006eb0b1, 0x9102fefd, 0xc8020100, 0x00b2c41b, 0x9102fefe, 0xc8040100, 
    0x00003400, 0x6fff0200, 0x14878000, 0x00b41b1b, 0xe1000101, 0x4e4a0000, 
    0x47d4729a, 0xc960817a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxform.hlsl.h /Vn
//    pBinary_X360_FYUVCxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxform.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r3.w___, r2.xy, tf2
    tfetch2D r3._w__, r2.xy, tf1
    tfetch2D r3.__w_, r2.xy, tf0
    alloc colors
    exece
    movs r3.w, c253.x
    add oC0.w, r1.w, r0.w
    dp2add r2.x, r3.zx, c254.xy, c253.y
    dp2add r2.y, r3.zy, c254.xz, c254.w
    dp4 r2.z, c255, r3.xzyw
    mad oC0.xyz, r2.xzy, r1.xyz, r0.xyz

// PDB hint 4e4a0000-c17397ab-c1357ef6

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxform[] =
{
    0x102a1100, 0x0000013c, 0x000000d0, 0x00000024, 0x0000008c, 0x000000e8, 
    0x00000110, 0x00000000, 0x00000000, 0x50c76f39, 0x00000060, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d2e68, 0x6c736c2e, 0x75706462, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000090, 0x10000300, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 
    0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00153002, 
    0x00001200, 0xc4000000, 0x00006005, 0x00002200, 0x00000000, 0x10283041, 
    0x1f1ffffb, 0x00004000, 0x10183041, 0x1f1fffdf, 0x00004000, 0x10083041, 
    0x1f1ffeff, 0x00004000, 0x14800300, 0x0000006c, 0xc20000fd, 0xc8088000, 
    0x001b1b00, 0xe0010000, 0xc8010002, 0x006eb0b1, 0x9103fefd, 0xc8020002, 
    0x00b2c41b, 0x9103fefe, 0xc8040002, 0x00003400, 0x6fff0300, 0xc8078000, 
    0x00b4c0c0, 0xeb020100, 0x4e4a0000, 0xc17397ab, 0xc1357ef6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformMul.hlsl.h /Vn
//    pBinary_X360_FYUVCxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r3.w___, r2.xy, tf2
    tfetch2D r3._w__, r2.xy, tf1
    tfetch2D r3.__w_, r2.xy, tf0
    alloc colors
    exec
    add r2.w, r1.w, r0.w
  + movs r3.w, c253.x
    dp2add r2.x, r3.zx, c254.xy, c253.y
    dp2add r2.y, r3.zy, c254.xz, c254.w
    dp4 r2.z, c255, r3.xzyw
    mad r0.xyz, r2.xzy, r1.xyz, r0.xyz
    mul r2.xyz, r0.xyz, r2.w
    exece
    mov oC0, r2

// PDB hint 4e4a0000-21bb42ce-ae7fa8ec

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformMul[] =
{
    0x102a1100, 0x00000140, 0x000000dc, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4d75, 0x6c2e686c, 0x736c2e75, 0x70646200, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x0000009c, 0x10000300, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 
    0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 
    0x00153002, 0x00001200, 0xc4000000, 0x00006005, 0x100b1200, 0x22000000, 
    0x10283041, 0x1f1ffffb, 0x00004000, 0x10183041, 0x1f1fffdf, 0x00004000, 
    0x10083041, 0x1f1ffeff, 0x00004000, 0x14880302, 0x001b1b6c, 0xc00100fd, 
    0xc8010002, 0x006eb0b1, 0x9103fefd, 0xc8020002, 0x00b2c41b, 0x9103fefe, 
    0xc8040002, 0x00003400, 0x6fff0300, 0xc8070000, 0x00b4c0c0, 0xeb020100, 
    0xc8070002, 0x00c01b00, 0xe1000200, 0xc80f8000, 0x00000000, 0xe2020200, 
    0x4e4a0000, 0x21bb42ce, 0xae7fa8ec
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVCxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exece
    add r2.x, r1.w, r0.w
  + movs r4.w, c253.x
    mul oC0.w, r2.x, r3.w
    dp2add r3.x, r4.zx, c254.xy, c253.y
    dp2add r3.y, r4.zy, c254.xz, c254.w
    dp4 r3.z, c255, r4.xzyw
    mad oC0.xyz, r3.xzy, r1.xyz, r0.xyz

// PDB hint 4e4a0000-bd47cf5a-0d0a13e2

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformEAlpha[] =
{
    0x102a1100, 0x00000148, 0x000000d0, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4541, 0x6c706861, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000090, 
    0x10000400, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 
    0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 
    0xbec8b439, 0x3f0825d9, 0x00153002, 0x00001200, 0xc4000000, 0x00006005, 
    0x00002200, 0x00000000, 0x10284041, 0x1f1ffffb, 0x00004000, 0x10184041, 
    0x1f1fffdf, 0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 0x14810402, 
    0x001b1b6c, 0xc00100fd, 0xc8088000, 0x006c1b00, 0xe1020300, 0xc8010303, 
    0x006eb0b1, 0x9104fefd, 0xc8020303, 0x00b2c41b, 0x9104fefe, 0xc8040303, 
    0x00003400, 0x6fff0400, 0xc8078000, 0x00b4c0c0, 0xeb030100, 0x4e4a0000, 
    0xbd47cf5a, 0x0d0a13e2
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FYUVCxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exec
    add r2.x, r1.w, r0.w
    mul r3.w, r2.x, r3.w
  + movs r4.w, c253.x
    dp2add r3.x, r4.zx, c254.xy, c253.y
    dp2add r3.y, r4.zy, c254.xz, c254.w
    dp4 r3.z, c255, r4.xzyw
    mad r3.xyz, r3.xzy, r1.xyz, r0.xyz
    exece
    mul r3.xyz, r3.w, r3.xyz
    mov oC0, r3

// PDB hint 4e4a0000-a3626c28-5d9f087c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformEAlphaMul[] =
{
    0x102a1100, 0x0000014c, 0x000000e8, 0x00000024, 0x00000098, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4541, 0x6c706861, 0x4d756c2e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00030000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00030000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000a8, 0x10000400, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 
    0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 
    0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00153002, 0x00001200, 0xc4000000, 
    0x00006005, 0x200b1200, 0x22000000, 0x10284041, 0x1f1ffffb, 0x00004000, 
    0x10184041, 0x1f1fffdf, 0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 
    0xc8010302, 0x001b1b00, 0xe0010000, 0x14880403, 0x006c1b6c, 0xc10203fd, 
    0xc8010303, 0x006eb0b1, 0x9104fefd, 0xc8020303, 0x00b2c41b, 0x9104fefe, 
    0xc8040303, 0x00003400, 0x6fff0400, 0xc8070303, 0x00b4c0c0, 0xeb030100, 
    0xc8070303, 0x001bc000, 0xe1030300, 0xc80f8000, 0x00000000, 0xe2030300, 
    0x4e4a0000, 0xa3626c28, 0x5d9f087c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAc.hlsl.h /Vn
//    pBinary_X360_FYUVCxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAc.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exec
    mul r0, r0, r1.w
    add oC0.w, r0.w, r1.w
    mad r3.yzw, r4.zzzx, c254.xxxy, c255.yyzx
    mul r2.xy, r4.xy, c254.zw
  + muls r3.x, r1.wx
    dp2add r2.z, r4.zy, c253.xy, c255.w
    add r2.xyw, r3.yzw, r2.xyz
  + muls r3.y, r1.wy
    exece
    add r2.z, r2.w, c253.z
  + muls r3.z, r1.wz
    mad oC0.xyz, r3.xyz, r2.xzy, r0.xyz

// PDB hint 4e4a0000-bf62d65b-024e1539

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformAc[] =
{
    0x102a1100, 0x00000140, 0x000000e8, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4163, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000a8, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 0x00000000, 0x3f94fdf4, 0xbf5020c5, 
    0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 0xbf5fc943, 0xbf8af158, 0x00000000, 
    0x00153002, 0x00001200, 0xc4000000, 0x00006005, 0x200b1200, 0x22000000, 
    0x10284041, 0x1f1ffffb, 0x00004000, 0x10184041, 0x1f1fffdf, 0x00004000, 
    0x10084041, 0x1f1ffeff, 0x00004000, 0xc80f0000, 0x00001b00, 0xe1000100, 
    0xc8088000, 0x001b1b00, 0xe0000100, 0xc80e0003, 0x0046ac41, 0x8b04feff, 
    0x08130302, 0x00b01a1c, 0xa104fe01, 0xc8040002, 0x00b2b01b, 0x9104fdff, 
    0x082b0302, 0x0015c011, 0xe0030201, 0x08440302, 0x001bc616, 0xa002fd01, 
    0xc8078000, 0x00c0b4c0, 0xeb030200, 0x4e4a0000, 0xbf62d65b, 0x024e1539
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcMul.hlsl.h /Vn
//    pBinary_X360_FYUVCxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r5.w___, r2.xy, tf2
    tfetch2D r5._w__, r2.xy, tf1
    tfetch2D r5.__w_, r2.xy, tf0
    alloc colors
    exec
    mul r3.xyz, r1.w, r1.xyz
    mul r0, r0, r1.w
    mad r4.xyz, r5.zzx, c254.xxy, c255.yzx
    mul r2.xy, r5.xy, c254.zw
    dp2add r2.z, r5.zy, c253.xy, c255.w
    add r2.xyw, r4.xyz, r2.xyz
  + movs r0._, r0.w
    exece
    add r2.z, r2.w, c253.z
  + adds_prev r0.w, r1.w
    mad r0.xyz, r3.xyz, r2.xzy, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-9e432972-0f257083

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformAcMul[] =
{
    0x102a1100, 0x00000144, 0x00000100, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4163, 0x4d756c2e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000c0, 
    0x10000500, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 0x00000000, 0x3f94fdf4, 
    0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 0xbf5fc943, 0xbf8af158, 
    0x00000000, 0x00153002, 0x00001200, 0xc4000000, 0x00006005, 0x400b1200, 
    0x22000000, 0x10285041, 0x1f1ffffb, 0x00004000, 0x10185041, 0x1f1fffdf, 
    0x00004000, 0x10085041, 0x1f1ffeff, 0x00004000, 0xc8070003, 0x001bc000, 
    0xe1010100, 0xc80f0000, 0x00001b00, 0xe1000100, 0xc8070004, 0x0066bc65, 
    0x8b05feff, 0xc8030002, 0x00b01a00, 0xa105fe00, 0xc8040002, 0x00b2b01b, 
    0x9105fdff, 0x140b0002, 0x00c0c01b, 0xe0040200, 0x04840002, 0x001bc61b, 
    0xa002fd01, 0xc8070000, 0x00c0b4c0, 0xeb030200, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x9e432972, 
    0x0f257083
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVCxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exec
    mul r0, r0, r1.w
    add r2.x, r0.w, r1.w
    mul oC0.w, r2.x, r3.w
    mad r2.yzw, r4.zzzx, c254.xxxy, c255.yyzx
    mul r3.xy, r4.xy, c254.zw
  + muls r2.x, r1.wx
    dp2add r3.z, r4.zy, c253.xy, c255.w
    exece
    add r3.xyw, r2.yzw, r3.xyz
  + muls r2.y, r1.wy
    add r3.z, r3.w, c253.z
  + muls r2.z, r1.wz
    mad oC0.xyz, r2.xyz, r3.xzy, r0.xyz

// PDB hint 4e4a0000-f16664f1-5746a8b1

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformAcEAlpha[] =
{
    0x102a1100, 0x00000148, 0x000000f4, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4163, 0x45416c70, 0x68612e68, 0x6c736c2e, 
    0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000b4, 
    0x10000400, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 0x00000000, 
    0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 0xbf5fc943, 
    0xbf8af158, 0x00000000, 0x00153002, 0x00001200, 0xc4000000, 0x00006005, 
    0x300b1200, 0x22000000, 0x10284041, 0x1f1ffffb, 0x00004000, 0x10184041, 
    0x1f1fffdf, 0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 0xc80f0300, 
    0x00001b00, 0xe1000100, 0xc8010302, 0x001b1b00, 0xe0000100, 0xc8088000, 
    0x006c1b00, 0xe1020300, 0xc80e0302, 0x0046ac41, 0x8b04feff, 0x08130203, 
    0x00b01a1c, 0xa104fe01, 0xc8040303, 0x00b2b01b, 0x9104fdff, 0x082b0203, 
    0x0015c011, 0xe0020301, 0x08440203, 0x001bc616, 0xa003fd01, 0xc8078000, 
    0x00c0b4c0, 0xeb020300, 0x4e4a0000, 0xf16664f1, 0x5746a8b1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FYUVCxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVCxformAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=6
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r6.w___, r2.xy, tf2
    tfetch2D r6._w__, r2.xy, tf1
    tfetch2D r6.__w_, r2.xy, tf0
    alloc colors
    exec
    mul r4.xyz, r1.w, r1.xyz
    mad r4.w, r0.w, r1.w, r1.w
    mad r5.xyz, r6.zzx, c254.xxy, c255.yzx
    mul r2.xy, r6.xy, c254.zw
    dp2add r2.z, r6.zy, c253.xy, c255.w
    add r2.xyw, r5.xyz, r2.xyz
    exece
    add r2.z, r2.w, c253.z
  + movs r3._, r4.w
    mul r2.xyz, r4.xyz, r2.xzy
  + muls_prev r3.w, r3.w
    mad r3.xyz, r0.xyz, r1.w, r2.xyz
    mul r3.xyz, r3.w, r3.xyz
    mov oC0, r3

// PDB hint 4e4a0000-8c77fcc7-ea33752c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVCxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVCxformAcEAlphaMul[] =
{
    0x102a1100, 0x0000014c, 0x0000010c, 0x00000024, 0x00000098, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4378666f, 0x726d4163, 0x45416c70, 0x68614d75, 0x6c2e686c, 
    0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00030000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00030000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000cc, 0x10000600, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 
    0x00000000, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 
    0xbf5fc943, 0xbf8af158, 0x00000000, 0x00153002, 0x00001200, 0xc4000000, 
    0x00006005, 0x500b1200, 0x22000000, 0x10286041, 0x1f1ffffb, 0x00004000, 
    0x10186041, 0x1f1fffdf, 0x00004000, 0x10086041, 0x1f1ffeff, 0x00004000, 
    0xc8070304, 0x001bc000, 0xe1010100, 0xc8080304, 0x001b1b1b, 0xeb000101, 
    0xc8070305, 0x0066bc65, 0x8b06feff, 0xc8030302, 0x00b01a00, 0xa106fe00, 
    0xc8040302, 0x00b2b01b, 0x9106fdff, 0xc80b0302, 0x00c0c000, 0xe0050200, 
    0x14040302, 0x001bc61b, 0xa002fd04, 0x0c870302, 0x00c0b41b, 0xe1040203, 
    0xc8070303, 0x00c01bc0, 0xeb000102, 0xc8070303, 0x001bc000, 0xe1030300, 
    0xc80f8000, 0x00000000, 0xe2030300, 0x4e4a0000, 0x8c77fcc7, 0xea33752c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVA.hlsl.h /Vn
//    pBinary_X360_FYUVA /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVA.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, -0.87416476, -1.08549023, 0.408094168, 0.123733327
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 1.16400003, -0.39199999, 0, 0


    exec
    tfetch2D r1.___w, r0.xy, tf3
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exece
    mul r0, r2.zxyx, c254.xzwy
    add r1.xyz, r0.xxw, c253.xyz
    dp2add r0.x, r2.zy, c255.xy, r1.z
    add r1.xz, r1.xy, r0.yz
  + addsc r1.y, c253.w, r0.x
    mov oC0, r1

// PDB hint 4e4a0000-68fb8e2f-05708c20

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVA.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVA[] =
{
    0x102a1100, 0x00000130, 0x000000d0, 0x00000024, 0x00000088, 0x000000e4, 
    0x0000010c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x412e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00040000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000090, 0x10000200, 0x00000004, 0x00000000, 
    0x00000821, 0x00010001, 0x00000001, 0x00003050, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0xbf5fc943, 0xbf8af158, 0x3ed0f1b8, 0x3dfd67e6, 
    0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3f94fdf4, 0xbec8b439, 
    0x00000000, 0x00000000, 0x00554002, 0x00001200, 0xc4000000, 0x00005006, 
    0x00002200, 0x00000000, 0x10381001, 0x1f1ff7ff, 0x00004000, 0x10282001, 
    0x1f1ffffb, 0x00004000, 0x10182001, 0x1f1fffdf, 0x00004000, 0x10082001, 
    0x1f1ffeff, 0x00004000, 0xc80f0000, 0x007e9400, 0xa102fe00, 0xc8070001, 
    0x001cc000, 0xa000fd00, 0xc8010000, 0x00b2b0c6, 0xb102ff01, 0xb0250101, 
    0x00b0c500, 0xc00100fd, 0xc80f8000, 0x00000000, 0xe2010100, 0x4e4a0000, 
    0x68fb8e2f, 0x05708c20
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAMul.hlsl.h /Vn
//    pBinary_X360_FYUVAMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r1.___w, r0.xy, tf3
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    alloc colors
    exec
    mad r1.xyz, r2.zzx, c254.xxy, c255.yzx
    mul r0.xy, r2.xy, c254.zw
    dp2add r0.z, r2.zy, c253.xy, c255.w
    add r0.xyz, r1.zxy, r0.zxy
    addsc r0.w, c253.z, r0.x
    mul r1.xyz, r0.ywz, r1.w
    exece
    mov oC0, r1

// PDB hint 4e4a0000-0b6404b8-a233c25a

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVAMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVAMul[] =
{
    0x102a1100, 0x00000134, 0x000000e8, 0x00000024, 0x0000008c, 0x000000e8, 
    0x00000110, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x414d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000000a8, 0x10000200, 0x00000004, 
    0x00000000, 0x00000821, 0x00010001, 0x00000001, 0x00003050, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f94fdf4, 0xbec8b439, 0x3dfd67e6, 
    0x00000000, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 0x40011687, 0x3ed0f1b8, 
    0xbf5fc943, 0xbf8af158, 0x00000000, 0x00554002, 0x00001200, 0xc4000000, 
    0x00006006, 0x100c1200, 0x22000000, 0x10381001, 0x1f1ff7ff, 0x00004000, 
    0x10282001, 0x1f1ffffb, 0x00004000, 0x10182001, 0x1f1fffdf, 0x00004000, 
    0x10082001, 0x1f1ffeff, 0x00004000, 0xc8070001, 0x0066bc65, 0x8b02feff, 
    0xc8030000, 0x00b01a00, 0xa102fe00, 0xc8040000, 0x00b2b01b, 0x9102fdff, 
    0xc8070000, 0x00bebe00, 0xe0010000, 0xb0800000, 0x000000c0, 0xc20000fd, 
    0xc8070001, 0x00c91b00, 0xe1000100, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0x0b6404b8, 0xa233c25a
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAInv.hlsl.h /Vn
//    pBinary_X360_FYUVAInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r0.w___, r0.xy, tf3
    alloc colors
    exece
    mov oC0, r0.x

// PDB hint 4e4a0000-aa72b5e6-8b9dd6f7

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVAInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVAInv[] =
{
    0x102a1100, 0x0000010c, 0x0000003c, 0x00000024, 0x0000008c, 0x00000000, 
    0x000000e8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41496e76, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000003c, 
    0x10000000, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 
    0x00003050, 0x00011002, 0x00001200, 0xc4000000, 0x00001003, 0x00002200, 
    0x00000000, 0x10380001, 0x1f1ffffb, 0x00004000, 0xc80f8000, 0x006c6c00, 
    0xe2000000, 0x4e4a0000, 0xaa72b5e6, 0x8b9dd6f7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVAEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, -0.87416476, -1.08549023, 0.408094168, 0.123733327
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 1.16400003, -0.39199999, 0, 0


    exec
    tfetch2D r2.w___, r0.xy, tf2
    tfetch2D r2._w__, r0.xy, tf1
    tfetch2D r2.__w_, r0.xy, tf0
    tfetch2D r0.___w, r0.xy, tf3
    alloc colors
    exece
    mul r3, r2.zxxy, c254
    add r0.xyz, r3.xxy, c253.xyz
  + movs r1._, r0.w
    add oC0.xz, r0.xy, r3.zw
    dp2add r0.x, r2.zy, c255.xy, r0.z
    add oC0.y, r0.x, c253.w
  + muls_prev oC0.w, r1.w

// PDB hint 4e4a0000-fe387106-50600700

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVAEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVAEAlpha[] =
{
    0x102a1100, 0x0000013c, 0x000000d0, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4145416c, 0x7068612e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000090, 0x10000300, 
    0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 0x00003050, 
    0x0000f1a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xbf5fc943, 
    0xbf8af158, 0x3ed0f1b8, 0x3dfd67e6, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 
    0x40011687, 0x3f94fdf4, 0xbec8b439, 0x00000000, 0x00000000, 0x00554002, 
    0x00001200, 0xc4000000, 0x00005006, 0x00002200, 0x00000000, 0x10282001, 
    0x1f1ffffb, 0x00004000, 0x10182001, 0x1f1fffdf, 0x00004000, 0x10082001, 
    0x1f1ffeff, 0x00004000, 0x10380001, 0x1f1ff7ff, 0x00004000, 0xc80f0103, 
    0x00ae0000, 0xa102fe00, 0x14070100, 0x00bcc01b, 0xa003fd00, 0xc8058000, 
    0x00b01a00, 0xe0000300, 0xc8010100, 0x00b2b0c6, 0xb102ff00, 0x0c828000, 
    0x006c1b1b, 0xa000fd01, 0x4e4a0000, 0xfe387106, 0x50600700
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FYUVAEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 1.16400003, -0.39199999, 0.123733327, 0
def c254, 1.16400003, -0.813000023, 1.59599996, 2.01699996
def c255, 0.408094168, -0.87416476, -1.08549023, 0


    exec
    tfetch2D r3.w___, r0.xy, tf2
    tfetch2D r3._w__, r0.xy, tf1
    tfetch2D r3.__w_, r0.xy, tf0
    tfetch2D r0.__w_, r0.xy, tf3
    alloc colors
    exec
    mad r2.xyz, r3.zzx, c254.xxy, c255.yzx
    mul r0.xy, r3.xy, c254.zw
    dp2add r0.w, r3.zy, c253.xy, c255.w
    add r0.xyw, r2.xyz, r0.xyw
  + movs r1._, r0.z
    add r0.z, r0.w, c253.z
  + muls_prev r1.w, r1.w
    mul r1.xyz, r1.w, r0.xzy
    exece
    mov oC0, r1

// PDB hint 4e4a0000-6ef8407f-b729fd87

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVAEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVAEAlphaMul[] =
{
    0x102a1100, 0x0000013c, 0x000000e8, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4145416c, 0x7068614d, 0x756c2e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000a8, 0x10000300, 
    0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000001, 0x00003050, 
    0x0000f1a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f94fdf4, 
    0xbec8b439, 0x3dfd67e6, 0x00000000, 0x3f94fdf4, 0xbf5020c5, 0x3fcc49ba, 
    0x40011687, 0x3ed0f1b8, 0xbf5fc943, 0xbf8af158, 0x00000000, 0x00554002, 
    0x00001200, 0xc4000000, 0x00006006, 0x100c1200, 0x22000000, 0x10283001, 
    0x1f1ffffb, 0x00004000, 0x10183001, 0x1f1fffdf, 0x00004000, 0x10083001, 
    0x1f1ffeff, 0x00004000, 0x10380001, 0x1f1ffeff, 0x00004000, 0xc8070102, 
    0x0066bc65, 0x8b03feff, 0xc8030100, 0x00b01a00, 0xa103fe00, 0xc8080100, 
    0x00b2b01b, 0x9103fdff, 0x140b0100, 0x00c010c6, 0xe0020000, 0x0c840100, 
    0x001bc61b, 0xa000fd01, 0xc8070101, 0x001bb400, 0xe1010000, 0xc80f8000, 
    0x00000000, 0xe2010100, 0x4e4a0000, 0x6ef8407f, 0xb729fd87
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FYUVAEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVAEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r0.w___, r0.xy, tf3
    alloc colors
    exece
    mul oC0, r0.x, r1.w

// PDB hint 4e4a0000-5ab5ed22-53e78818

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVAEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVAEAlphaInv[] =
{
    0x102a1100, 0x00000114, 0x0000003c, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x4145416c, 0x70686149, 0x6e762e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x0000003c, 0x10000100, 0x00000008, 0x00000000, 0x00001842, 0x00010003, 
    0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 
    0x00001003, 0x00002200, 0x00000000, 0x10380001, 0x1f1ffffb, 0x00004000, 
    0xc80f8000, 0x006c1b00, 0xe1000100, 0x4e4a0000, 0x5ab5ed22, 0x53e78818
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxform.hlsl.h /Vn
//    pBinary_X360_FYUVACxform /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxform.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r3.___w, r2.xy, tf3
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exece
    movs r4.w, c253.x
    dp2add r3.x, r4.zx, c254.xy, c253.y
    dp2add r3.y, r4.zy, c254.xz, c254.w
    dp4 r3.z, c255, r4.xzyw
    mad oC0, r3.xzyw, r1, r0

// PDB hint 4e4a0000-552b3561-57fbf52b

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxform.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxform[] =
{
    0x102a1100, 0x00000140, 0x000000d0, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d2e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000090, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 
    0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 
    0x00554002, 0x00001200, 0xc4000000, 0x00005006, 0x00002200, 0x00000000, 
    0x10383041, 0x1f1ff7ff, 0x00004000, 0x10284041, 0x1f1ffffb, 0x00004000, 
    0x10184041, 0x1f1fffdf, 0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 
    0x14800400, 0x0000006c, 0xc20000fd, 0xc8010003, 0x006eb0b1, 0x9104fefd, 
    0xc8020003, 0x00b2c41b, 0x9104fefe, 0xc8040003, 0x00003400, 0x6fff0400, 
    0xc80f8000, 0x00340000, 0xeb030100, 0x4e4a0000, 0x552b3561, 0x57fbf52b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformMul.hlsl.h /Vn
//    pBinary_X360_FYUVACxformMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r3.___w, r2.xy, tf3
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    alloc colors
    exec
    movs r4.w, c253.x
    dp2add r3.x, r4.zx, c254.xy, c253.y
    dp2add r3.y, r4.zy, c254.xz, c254.w
    dp4 r3.z, c255, r4.xzyw
    mad r2.xyz, r3.xzy, r1.xyz, r0.xyz
    mad r0.w, r3.w, r1.w, r0.w
    exece
    mul r0.xyz, r2.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-4489c0bb-f1280c5c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformMul[] =
{
    0x102a1100, 0x00000140, 0x000000f4, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d4d, 0x756c2e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000b4, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 
    0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 
    0x00554002, 0x00001200, 0xc4000000, 0x00006006, 0x200c1200, 0x22000000, 
    0x10383041, 0x1f1ff7ff, 0x00004000, 0x10284041, 0x1f1ffffb, 0x00004000, 
    0x10184041, 0x1f1fffdf, 0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 
    0x14800400, 0x0000006c, 0xc20000fd, 0xc8010003, 0x006eb0b1, 0x9104fefd, 
    0xc8020003, 0x00b2c41b, 0x9104fefe, 0xc8040003, 0x00003400, 0x6fff0400, 
    0xc8070002, 0x00b4c0c0, 0xeb030100, 0xc8080000, 0x001b1b1b, 0xeb030100, 
    0xc8070000, 0x00c01b00, 0xe1020000, 0xc80f8000, 0x00000000, 0xe2000000, 
    0x4e4a0000, 0x4489c0bb, 0xf1280c5c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformInv.hlsl.h /Vn
//    pBinary_X360_FYUVACxformInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2.w___, r2.xy, tf3
    alloc colors
    exece
    mad oC0, r2.x, r1.w, r0.w

// PDB hint 4e4a0000-2d894458-62e82af7

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformInv[] =
{
    0x102a1100, 0x00000118, 0x0000003c, 0x00000024, 0x00000090, 0x00000000, 
    0x000000ec, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d49, 0x6e762e68, 0x6c736c2e, 0x75706462, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x0000003c, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 0x00001200, 
    0xc4000000, 0x00001003, 0x00002200, 0x00000000, 0x10382041, 0x1f1ffffb, 
    0x00004000, 0xc80f8000, 0x006c1b1b, 0xeb020100, 0x4e4a0000, 0x2d894458, 
    0x62e82af7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVACxformEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.___w, r2.xy, tf3
    tfetch2D r5.w___, r2.xy, tf2
    tfetch2D r5._w__, r2.xy, tf1
    tfetch2D r5.__w_, r2.xy, tf0
    alloc colors
    exec
    movs r5.w, c253.x
    dp2add r4.x, r5.zx, c254.xy, c253.y
    dp2add r4.y, r5.zy, c254.xz, c254.w
    dp4 r4.z, c255, r5.xzyw
    mad oC0.xyz, r4.xzy, r1.xyz, r0.xyz
    mad r0.x, r4.w, r1.w, r0.w
    exece
    mul oC0.w, r0.x, r3.w

// PDB hint 4e4a0000-c12b7699-4e3eb6d3

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformEAlpha[] =
{
    0x102a1100, 0x00000148, 0x000000e8, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000067, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d45, 0x416c7068, 0x612e686c, 0x736c2e75, 
    0x70646200, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000a8, 
    0x10000500, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 
    0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 
    0xbec8b439, 0x3f0825d9, 0x00554002, 0x00001200, 0xc4000000, 0x00006006, 
    0x100c1200, 0x22000000, 0x10384041, 0x1f1ff7ff, 0x00004000, 0x10285041, 
    0x1f1ffffb, 0x00004000, 0x10185041, 0x1f1fffdf, 0x00004000, 0x10085041, 
    0x1f1ffeff, 0x00004000, 0x14800503, 0x0000006c, 0xc20303fd, 0xc8010304, 
    0x006eb0b1, 0x9105fefd, 0xc8020304, 0x00b2c41b, 0x9105fefe, 0xc8040304, 
    0x00003400, 0x6fff0500, 0xc8078000, 0x00b4c0c0, 0xeb040100, 0xc8010300, 
    0x001b1b1b, 0xeb040100, 0xc8088000, 0x006c1b00, 0xe1000300, 0x4e4a0000, 
    0xc12b7699, 0x4e3eb6d3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlphaMul.hlsl.h /Vn
//    pBinary_X360_FYUVACxformEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.___w, r2.xy, tf3
    tfetch2D r5.w___, r2.xy, tf2
    tfetch2D r5._w__, r2.xy, tf1
    tfetch2D r5.__w_, r2.xy, tf0
    alloc colors
    exec
    movs r5.w, c253.x
    dp2add r4.x, r5.zx, c254.xy, c253.y
    dp2add r4.y, r5.zy, c254.xz, c254.w
    dp4 r4.z, c255, r5.xzyw
    mad r0, r4.wxzy, r1.wxyz, r0.wxyz
    mul r3.w, r0.x, r3.w
    exece
    mul r3.xyz, r3.w, r0.yzw
    mov oC0, r3

// PDB hint 4e4a0000-8fbb6188-23fbe103

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformEAlphaMul[] =
{
    0x102a1100, 0x0000014c, 0x000000f4, 0x00000024, 0x00000098, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d45, 0x416c7068, 0x614d756c, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00040000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000b4, 0x10000500, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 
    0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 
    0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00554002, 0x00001200, 0xc4000000, 
    0x00006006, 0x200c1200, 0x22000000, 0x10384041, 0x1f1ff7ff, 0x00004000, 
    0x10285041, 0x1f1ffffb, 0x00004000, 0x10185041, 0x1f1fffdf, 0x00004000, 
    0x10085041, 0x1f1ffeff, 0x00004000, 0x14800503, 0x0000006c, 0xc20303fd, 
    0xc8010304, 0x006eb0b1, 0x9105fefd, 0xc8020304, 0x00b2c41b, 0x9105fefe, 
    0xc8040304, 0x00003400, 0x6fff0500, 0xc80f0300, 0x008fffff, 0xeb040100, 
    0xc8080303, 0x006c1b00, 0xe1000300, 0xc8070303, 0x001b1500, 0xe1030000, 
    0xc80f8000, 0x00000000, 0xe2030300, 0x4e4a0000, 0x8fbb6188, 0x23fbe103
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlphaInv.hlsl.h /Vn
//    pBinary_X360_FYUVACxformEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2.w___, r2.xy, tf3
    alloc colors
    exece
    mad r0.x, r2.x, r1.w, r0.w
    mul oC0, r0.x, r3.w

// PDB hint 4e4a0000-6922bbe8-17598256

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformEAlphaInv[] =
{
    0x102a1100, 0x00000124, 0x00000048, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d45, 0x416c7068, 0x61496e76, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00040000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000048, 0x10000300, 0x00000008, 0x00000000, 
    0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00002003, 0x00002200, 
    0x00000000, 0x10382041, 0x1f1ffffb, 0x00004000, 0xc8010300, 0x006c1b1b, 
    0xeb020100, 0xc80f8000, 0x006c1b00, 0xe1000300, 0x4e4a0000, 0x6922bbe8, 
    0x17598256
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAc.hlsl.h /Vn
//    pBinary_X360_FYUVACxformAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAc.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    tfetch2D r3.w___, r2.xy, tf3
    alloc colors
    exec
    mul r2.xyz, r1.w, r1.xyz
  + movs r4.w, c253.x
    mul r2.w, r3.x, r1.w
  + movs r0._, r0.x
    mul r0.yzw, r2.w, r0.yyzw
  + muls_prev r0.x, r1.w
    dp2add r1.x, r4.zx, c254.xy, c253.y
    dp2add r1.y, r4.zy, c254.xz, c254.w
    dp4 r1.z, c255, r4.xzyw
  + movs r0._, r0.x
    exece
    mul r2.xyz, r2.xyz, r1.xzy
  + muls_prev r0.x, r3.x
    add oC0, r2, r0

// PDB hint 4e4a0000-2003d45b-875fbab9

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAc[] =
{
    0x102a1100, 0x00000140, 0x000000f4, 0x00000024, 0x00000090, 0x000000ec, 
    0x00000114, 0x00000000, 0x00000000, 0x50c76f39, 0x00000063, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x632e686c, 0x736c2e75, 0x70646200, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000b4, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 0x3fcc49ba, 
    0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 
    0x00554002, 0x00001200, 0xc4000000, 0x00006006, 0x200c1200, 0x22000000, 
    0x10284041, 0x1f1ffffb, 0x00004000, 0x10184041, 0x1f1fffdf, 0x00004000, 
    0x10084041, 0x1f1ffeff, 0x00004000, 0x10383041, 0x1f1ffffb, 0x00004000, 
    0x14870402, 0x001bc06c, 0xc10101fd, 0x14080002, 0x006c1b6c, 0xe1030100, 
    0x0c1e0000, 0x001b011b, 0xe1020001, 0xc8010001, 0x006eb0b1, 0x9104fefd, 
    0xc8020001, 0x00b2c41b, 0x9104fefe, 0x14040001, 0x0000346c, 0x6fff0400, 
    0x0c170002, 0x00c0b46c, 0xe1020103, 0xc80f8000, 0x00000000, 0xe0020000, 
    0x4e4a0000, 0x2003d45b, 0x875fbab9
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcMul.hlsl.h /Vn
//    pBinary_X360_FYUVACxformAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r4.w___, r2.xy, tf2
    tfetch2D r4._w__, r2.xy, tf1
    tfetch2D r4.__w_, r2.xy, tf0
    tfetch2D r2.___w, r2.xy, tf3
    alloc colors
    exec
    mul r3.w, r0.x, r1.w
  + movs r4.w, c253.x
    mul r3.xyz, r1.w, r1.xyz
  + movs r0._, r2.w
    dp2add r2.x, r4.zx, c254.xy, c253.y
    dp2add r2.y, r4.zy, c254.xz, c254.w
    dp4 r2.z, c255, r4.xzyw
  + muls_prev r1.x, r1.w
    mul r1.yzw, r1.x, r0.yyzw
  + movs r0._, r3.w
    exece
    add r0.w, r1.x, r1.w
  + muls_prev r1.x, r2.w
    mad r0.xyz, r3.xyz, r2.xzy, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-f50ec360-603e30cd

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAcMul[] =
{
    0x102a1100, 0x00000144, 0x0000010c, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x634d756c, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000000cc, 
    0x10000400, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 0x00000000, 0x3f94fdf4, 
    0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 0x3f94fdf4, 0xbec8b439, 
    0x3f0825d9, 0x00554002, 0x00001200, 0xc4000000, 0x00006006, 0x400c1200, 
    0x22000000, 0x10284041, 0x1f1ffffb, 0x00004000, 0x10184041, 0x1f1fffdf, 
    0x00004000, 0x10084041, 0x1f1ffeff, 0x00004000, 0x10382041, 0x1f1ff7ff, 
    0x00004000, 0x14880403, 0x006c1b6c, 0xc10001fd, 0x14070003, 0x001bc01b, 
    0xe1010102, 0xc8010002, 0x006eb0b1, 0x9104fefd, 0xc8020002, 0x00b2c41b, 
    0x9104fefe, 0x0c140102, 0x0000341b, 0x6fff0401, 0x140e0001, 0x006c011b, 
    0xe1010003, 0x0c180100, 0x006c1b1b, 0xe0010102, 0xc8070000, 0x00c0b4c0, 
    0xeb030201, 0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 0x00000000, 
    0xe2000000, 0x4e4a0000, 0xf50ec360, 0x603e30cd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcInv.hlsl.h /Vn
//    pBinary_X360_FYUVACxformAcInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy


    exec
    tfetch2D r2.w___, r2.xy, tf3
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    mul r0.x, r0.x, r2.x
    mad oC0, r2.x, r1.w, r0.x

// PDB hint 4e4a0000-9fb64c20-0e39b3cf

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAcInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAcInv[] =
{
    0x102a1100, 0x0000011c, 0x00000054, 0x00000024, 0x00000094, 0x00000000, 
    0x000000f0, 0x00000000, 0x00000000, 0x50c76f39, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x63496e76, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00040000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00040000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000054, 0x10000200, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00011002, 
    0x00001200, 0xc4000000, 0x00003003, 0x00002200, 0x00000000, 0x10382041, 
    0x1f1ffffb, 0x00004000, 0xc8010000, 0x001b1b00, 0xe1000100, 0xc8010000, 
    0x006c6c00, 0xe1000200, 0xc80f8000, 0x006c1b6c, 0xeb020100, 0x4e4a0000, 
    0x9fb64c20, 0x0e39b3cf
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlpha.hlsl.h /Vn
//    pBinary_X360_FYUVACxformAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r5.w___, r2.xy, tf2
    tfetch2D r5._w__, r2.xy, tf1
    tfetch2D r5.__w_, r2.xy, tf0
    tfetch2D r2.___w, r2.xy, tf3
    alloc colors
    exec
    mul r4.w, r0.x, r1.w
  + movs r5.w, c253.x
    mul r4.xyz, r1.w, r1.xyz
  + movs r3._, r2.w
    dp2add r2.x, r5.zx, c254.xy, c253.y
    dp2add r2.y, r5.zy, c254.xz, c254.w
    dp4 r2.z, c255, r5.xzyw
  + muls_prev r1.x, r1.w
    mul r0.yzw, r1.x, r0.yyzw
  + movs r3._, r4.w
    exece
    add r1.x, r1.x, r0.w
  + muls_prev r0.x, r2.w
    mul oC0.w, r1.x, r3.w
    mad oC0.xyz, r4.xyz, r2.xzy, r0.xyz

// PDB hint 4e4a0000-96362494-38f4df09

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAcEAlpha[] =
{
    0x102a1100, 0x0000014c, 0x00000100, 0x00000024, 0x00000098, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x6345416c, 0x7068612e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00040000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000c0, 0x10000500, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 
    0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 
    0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00554002, 0x00001200, 0xc4000000, 
    0x00006006, 0x300c1200, 0x22000000, 0x10285041, 0x1f1ffffb, 0x00004000, 
    0x10185041, 0x1f1fffdf, 0x00004000, 0x10085041, 0x1f1ffeff, 0x00004000, 
    0x10382041, 0x1f1ff7ff, 0x00004000, 0x14880504, 0x006c1b6c, 0xc10001fd, 
    0x14070304, 0x001bc01b, 0xe1010102, 0xc8010302, 0x006eb0b1, 0x9105fefd, 
    0xc8020302, 0x00b2c41b, 0x9105fefe, 0x0c140102, 0x0000341b, 0x6fff0501, 
    0x140e0300, 0x006c011b, 0xe1010004, 0x0c110001, 0x006c1b1b, 0xe0010002, 
    0xc8088000, 0x006c1b00, 0xe1010300, 0xc8078000, 0x00c0b4c0, 0xeb040200, 
    0x4e4a0000, 0x96362494, 0x38f4df09
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FYUVACxformAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 1, -0.87416476, 0, 0
def c254, 1.16400003, 1.59599996, 2.01699996, -1.08549023
def c255, -0.813000023, 1.16400003, -0.39199999, 0.531827509


    exec
    tfetch2D r5.w___, r2.xy, tf2
    tfetch2D r5._w__, r2.xy, tf1
    tfetch2D r5.__w_, r2.xy, tf0
    tfetch2D r4.w___, r2.xy, tf3
    alloc colors
    exec
    mul r2.yzw, r1.w, r1.xxyz
  + movs r5.w, c253.x
    mul r2.x, r4.x, r1.w
  + movs r3._, r0.x
    mul r0.yzw, r2.x, r0.yyzw
  + muls_prev r0.x, r1.w
    dp2add r1.x, r5.zx, c254.xy, c253.y
    dp2add r1.y, r5.zy, c254.xz, c254.w
    dp4 r1.z, c255, r5.xzyw
  + movs r3._, r0.x
    exece
    mul r2.yzw, r2.yyzw, r1.xxzy
  + muls_prev r0.x, r4.x
    add r0, r2, r0.wxyz
    mul r3.w, r0.x, r3.w
    mul r3.xyz, r3.w, r0.yzw
    mov oC0, r3

// PDB hint 4e4a0000-30528f40-fcc22271

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAcEAlphaMul[] =
{
    0x102a1100, 0x0000014c, 0x00000118, 0x00000024, 0x00000098, 0x000000f4, 
    0x0000011c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x6345416c, 0x7068614d, 0x756c2e68, 
    0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00040000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000000d8, 0x10000500, 0x00000008, 0x00000000, 0x00003884, 0x0007000f, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x0000f3a0, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0xbf5fc943, 0x00000000, 
    0x00000000, 0x3f94fdf4, 0x3fcc49ba, 0x40011687, 0xbf8af158, 0xbf5020c5, 
    0x3f94fdf4, 0xbec8b439, 0x3f0825d9, 0x00554002, 0x00001200, 0xc4000000, 
    0x00006006, 0x500c1200, 0x22000000, 0x10285041, 0x1f1ffffb, 0x00004000, 
    0x10185041, 0x1f1fffdf, 0x00004000, 0x10085041, 0x1f1ffeff, 0x00004000, 
    0x10384041, 0x1f1ffffb, 0x00004000, 0x148e0502, 0x001bfc6c, 0xc10101fd, 
    0x14010302, 0x006c1b6c, 0xe1040100, 0x0c1e0000, 0x006c011b, 0xe1020001, 
    0xc8010301, 0x006eb0b1, 0x9105fefd, 0xc8020301, 0x00b2c41b, 0x9105fefe, 
    0x14040301, 0x0000346c, 0x6fff0500, 0x0c1e0002, 0x00018c6c, 0xe1020104, 
    0xc80f0300, 0x0000ff00, 0xe0020000, 0xc8080303, 0x006c1b00, 0xe1000300, 
    0xc8070303, 0x001b1500, 0xe1030000, 0xc80f8000, 0x00000000, 0xe2030300, 
    0x4e4a0000, 0x30528f40, 0xfcc22271
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlphaInv.hlsl.h
//    /Vn pBinary_X360_FYUVACxformAcEAlphaInv /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FYUVACxformAcEAlphaInv.hlsl
//
//
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
defextern const tex[3], sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy
dcl_color_centroid r3


    exec
    tfetch2D r2.w___, r2.xy, tf3
    alloc colors
    exece
    mul r0.x, r0.w, r1.w
    mul r0.x, r0.x, r2.x
    mad r0.x, r2.x, r1.w, r0.x
    mul oC0, r0.x, r3.w

// PDB hint 4e4a0000-ba96eff5-842d0e06

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FYUVACxformAcEAlphaInv.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FYUVACxformAcEAlphaInv[] =
{
    0x102a1100, 0x00000124, 0x00000060, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46595556, 0x41437866, 0x6f726d41, 0x6345416c, 0x70686149, 0x6e762e68, 
    0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00040000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00040000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x00000060, 0x10000300, 0x00000008, 0x00000000, 
    0x00003884, 0x0007000f, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x0000f3a0, 0x00011002, 0x00001200, 0xc4000000, 0x00004003, 0x00002200, 
    0x00000000, 0x10382041, 0x1f1ffffb, 0x00004000, 0xc8010300, 0x001b1b00, 
    0xe1000100, 0xc8010300, 0x006c6c00, 0xe1000200, 0xc8010300, 0x006c1b6c, 
    0xeb020100, 0xc80f8000, 0x006c1b00, 0xe1000300, 0x4e4a0000, 0xba96eff5, 
    0x842d0e06
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAc.hlsl.h /Vn
//    pBinary_X360_FTexTGCMatrixAc /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAc.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, matrix_columns, [4, 4], c1-4
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r2, r0.xy, tf0
    alloc colors
    exece
    dp4 r1.x, r2.wzxy, c1.wzxy
    dp4 r1.y, r2.wzxy, c2.wzxy
    dp4 r1.z, r2.wzxy, c3.wzxy
  + movs r0.x, r2.w
    dp4 r1.w, r2.wzxy, c4.wzxy
  + addsc r0.x, c0.w, r0.x
    mad oC0, r0.x, c0, r1

// PDB hint 4e4a0000-b59e36f6-84a6e530

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCMatrixAc.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCMatrixAc[] =
{
    0x102a1100, 0x0000016c, 0x0000006c, 0x00000024, 0x00000094, 0x00000000, 
    0x00000148, 0x00000000, 0x00000000, 0x50c76f39, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x5447434d, 0x61747269, 0x7841632e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x000000b0, 0x0000001c, 0x000000a3, 0xffff0300, 0x00000003, 
    0x0000001c, 0x00000000, 0x0000009c, 0x00000058, 0x00020000, 0x00010000, 
    0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00040000, 0x00000078, 
    0x00000000, 0x00000088, 0x00030000, 0x00010000, 0x0000008c, 0x00000000, 
    0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x63786d75, 0x6c00abab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x0000006c, 
    0x10000200, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 
    0x00003050, 0x00011002, 0x00001200, 0xc4000000, 0x00005003, 0x00002200, 
    0x00000000, 0x10082001, 0x1f1ff688, 0x00004000, 0xc8010001, 0x00a7a700, 
    0xaf020100, 0xc8020001, 0x00a7a700, 0xaf020200, 0x14140001, 0x00a7a71b, 
    0xaf020302, 0xb0180001, 0x00a7a700, 0x8f020400, 0xc80f8000, 0x006c0000, 
    0xab000001, 0x4e4a0000, 0xb59e36f6, 0x84a6e530
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcMul.hlsl.h /Vn
//    pBinary_X360_FTexTGCMatrixAcMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcMul.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, matrix_columns, [4, 4], c1-4
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy


    exec
    tfetch2D r2, r0.xy, tf0
    alloc colors
    exec
    dp4 r1.x, r2.wzxy, c1.wzxy
    dp4 r1.y, r2.wzxy, c2.wzxy
    dp4 r1.z, r2.wzxy, c3.wzxy
  + movs r0.x, r2.w
    dp4 r0.y, r2.wzxy, c4.wzxy
  + addsc r0.x, c0.w, r0.x
    mad r0.w, r0.x, c0.w, r0.y
    mad r0.xyz, r0.x, c0.xyz, r1.xyz
    exece
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-7ec68232-62dc311b

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCMatrixAcMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCMatrixAcMul[] =
{
    0x102a1100, 0x0000016c, 0x00000090, 0x00000024, 0x00000094, 0x00000000, 
    0x00000148, 0x00000000, 0x00000000, 0x50c76f39, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x5447434d, 0x61747269, 0x7841634d, 0x756c2e68, 0x6c736c2e, 
    0x75706462, 0x000000b0, 0x0000001c, 0x000000a3, 0xffff0300, 0x00000003, 
    0x0000001c, 0x00000000, 0x0000009c, 0x00000058, 0x00020000, 0x00010000, 
    0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00040000, 0x00000078, 
    0x00000000, 0x00000088, 0x00030000, 0x00010000, 0x0000008c, 0x00000000, 
    0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x63786d75, 0x6c00abab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000090, 
    0x10000200, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 0x00000001, 
    0x00003050, 0x00011002, 0x00001200, 0xc4000000, 0x00006003, 0x20091200, 
    0x22000000, 0x10082001, 0x1f1ff688, 0x00004000, 0xc8010001, 0x00a7a700, 
    0xaf020100, 0xc8020001, 0x00a7a700, 0xaf020200, 0x14140001, 0x00a7a71b, 
    0xaf020302, 0xb0120000, 0x00a7a700, 0x8f020400, 0xc8080000, 0x006c1bb1, 
    0xab000000, 0xc8070000, 0x006cc0c0, 0xab000001, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x7ec68232, 
    0x62dc311b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcEAlpha.hlsl.h /Vn
//    pBinary_X360_FTexTGCMatrixAcEAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcEAlpha.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, matrix_columns, [4, 4], c1-4
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r2, r0.xy, tf0
    alloc colors
    exec
    dp4 r0.x, r2.wzxy, c1.wzxy
    dp4 r0.y, r2.wzxy, c2.wzxy
    dp4 r0.z, r2.wzxy, c3.wzxy
  + movs r1.x, r2.w
    dp4 r2.x, r2.wzxy, c4.wzxy
  + addsc r0.w, c0.w, r1.x
    mad r2.x, r0.w, c0.w, r2.x
    mul oC0.w, r2.x, r1.w
    exece
    mad oC0.xyz, r0.w, c0.xyz, r0.xyz

// PDB hint 4e4a0000-999b7910-46289561

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCMatrixAcEAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCMatrixAcEAlpha[] =
{
    0x102a1100, 0x00000174, 0x00000084, 0x00000024, 0x00000098, 0x00000000, 
    0x0000014c, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006b, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x5447434d, 0x61747269, 0x78416345, 0x416c7068, 0x612e686c, 
    0x736c2e75, 0x70646200, 0x000000b0, 0x0000001c, 0x000000a3, 0xffff0300, 
    0x00000003, 0x0000001c, 0x00000000, 0x0000009c, 0x00000058, 0x00020000, 
    0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020001, 0x00040000, 
    0x00000078, 0x00000000, 0x00000088, 0x00030000, 0x00010000, 0x0000008c, 
    0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 0x00010000, 
    0x00000000, 0x63786d75, 0x6c00abab, 0x00030003, 0x00040004, 0x00010000, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x00000084, 0x10000200, 0x00000008, 0x00000000, 0x00001842, 0x00010003, 
    0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 0xc4000000, 
    0x00006003, 0x10091200, 0x22000000, 0x10082001, 0x1f1ff688, 0x00004000, 
    0xc8010100, 0x00a7a700, 0xaf020100, 0xc8020100, 0x00a7a700, 0xaf020200, 
    0x14140100, 0x00a7a71b, 0xaf020302, 0xb4810002, 0x00a7a700, 0x8f020400, 
    0xc8010102, 0x001b1b6c, 0xab000002, 0xc8088000, 0x006c1b00, 0xe1020100, 
    0xc8078000, 0x001bc0c0, 0xab000000, 0x4e4a0000, 0x999b7910, 0x46289561
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcEAlphaMul.hlsl.h
//    /Vn pBinary_X360_FTexTGCMatrixAcEAlphaMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FTexTGCMatrixAcEAlphaMul.hlsl
//
//
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const cxadd, float, vector, [1, 4], c0
defextern const cxmul, float, matrix_columns, [4, 4], c1-4
defextern const tex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1


    exec
    tfetch2D r2, r0.xy, tf0
    alloc colors
    exec
    dp4 r0.x, r2.wzxy, c1.wzxy
    dp4 r0.y, r2.wzxy, c2.wzxy
    dp4 r0.z, r2.wzxy, c3.wzxy
  + movs r1.x, r2.w
    dp4 r0.w, r2.wzxy, c4.wzxy
  + addsc r2.x, c0.w, r1.x
    mad r0, r2.x, c0.wxyz, r0.wxyz
    mul r1.w, r0.x, r1.w
    exece
    mul r1.xyz, r1.w, r0.yzw
    mov oC0, r1

// PDB hint 4e4a0000-fba02084-4987b0bc

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FTexTGCMatrixAcEAlphaMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FTexTGCMatrixAcEAlphaMul[] =
{
    0x102a1100, 0x00000178, 0x00000090, 0x00000024, 0x0000009c, 0x00000000, 
    0x00000150, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46546578, 0x5447434d, 0x61747269, 0x78416345, 0x416c7068, 0x614d756c, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000b0, 0x0000001c, 0x000000a3, 
    0xffff0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000009c, 0x00000058, 
    0x00020000, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020001, 
    0x00040000, 0x00000078, 0x00000000, 0x00000088, 0x00030000, 0x00010000, 
    0x0000008c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c00abab, 0x00030003, 0x00040004, 
    0x00010000, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000090, 0x10000200, 0x00000008, 0x00000000, 0x00001842, 
    0x00010003, 0x00000001, 0x00003050, 0x0000f1a0, 0x00011002, 0x00001200, 
    0xc4000000, 0x00006003, 0x20091200, 0x22000000, 0x10082001, 0x1f1ff688, 
    0x00004000, 0xc8010100, 0x00a7a700, 0xaf020100, 0xc8020100, 0x00a7a700, 
    0xaf020200, 0x14140100, 0x00a7a71b, 0xaf020302, 0xb4180200, 0x00a7a700, 
    0x8f020400, 0xc80f0100, 0x006cffff, 0xab020000, 0xc8080101, 0x006c1b00, 
    0xe1000100, 0xc8070101, 0x001b1500, 0xe1010000, 0xc80f8000, 0x00000000, 
    0xe2010100, 0x4e4a0000, 0xfba02084, 0x4987b0bc
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox1Blur.hlsl.h /Vn
//    pBinary_X360_FBox1Blur /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox1Blur.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L5
label L2
    exec    // PredicateClean=false
    mad r4.xy, r2.z, c1.yx, r2.yx
    tfetch2D r4, r4.yx, tf0, UseComputedLOD=false
    serialize
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    add r3, r4, r3
  + setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L6
label L5
    exec
    sgt r3, -r0_abs.x, c255.y
label L6
    exec
    movs r2.x, r1.w
    alloc colors
    exece
    mul r1.xyz, r1.xyz, c0.w
  + mulsc r1.w, c0.w, r2.x
    mul r0, r1.w, r0
    mul r1.xyz, r1.xyz, r2.x
    mul r0, r0, r3.w
    mad oC0, r1, r3, r0

// PDB hint 4e4a0000-3045a83d-50e508c6

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox1Blur.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox1Blur[] =
{
    0x102a1100, 0x00000184, 0x00000130, 0x00000024, 0x0000008c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x31426c75, 0x722e686c, 0x736c2e75, 0x70646200, 0x000000a0, 
    0x0000001c, 0x00000094, 0xffff0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x0000008d, 0x00000058, 0x00020000, 0x00010000, 0x00000060, 0x00000000, 
    0x00000070, 0x00030000, 0x00010000, 0x00000074, 0x00000000, 0x00000084, 
    0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000000f0, 0x10000400, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002005, 
    0x40051000, 0xb0000000, 0x00245007, 0x40021000, 0xb0000000, 0x00002006, 
    0x100cb000, 0x12000000, 0x0000100d, 0x00001200, 0xc4000000, 0x0000500e, 
    0x00002200, 0x00000000, 0x14480202, 0x036c6c6c, 0x06000000, 0x700f0003, 
    0x046cb11b, 0xa580ff02, 0xc8030004, 0x00c66d6d, 0xab020102, 0x44084081, 
    0x0f1ff688, 0x00004000, 0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 
    0x006cc600, 0x66000200, 0x6c0f0003, 0x0000001b, 0xe0040302, 0xc80f0003, 
    0x046cb100, 0xa580ff00, 0x14100200, 0x0000001b, 0xe2000001, 0xa8870101, 
    0x00c01b00, 0xa1010000, 0xc80f0000, 0x001b0000, 0xe1010000, 0xc8070001, 
    0x00c06c00, 0xe1010200, 0xc80f0000, 0x00001b00, 0xe1000300, 0xc80f8000, 
    0x00000000, 0xeb010300, 0x4e4a0000, 0x3045a83d, 0x50e508c6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox1BlurMul.hlsl.h /Vn
//    pBinary_X360_FBox1BlurMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox1BlurMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L5
label L2
    exec    // PredicateClean=false
    mad r4.xy, r2.z, c1.yx, r2.yx
    tfetch2D r4, r4.yx, tf0, UseComputedLOD=false
    serialize
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    add r3, r4, r3
  + setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L6
label L5
    exec
    sgt r3, -r0_abs.x, c255.y
label L6
    alloc colors
    exec
    mul r2, r1, c0.w
    mul r1.xyz, r2.xyz, r1.w
    mul r0, r2.w, r0
    mul r0, r0, r3.w
    mad r0.xyz, r1.xyz, r3.xyz, r0.xyz
    mad r0.w, r2.w, r3.w, r0.w
    exece
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-2bc6db2e-6fe8a946

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox1BlurMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox1BlurMul[] =
{
    0x102a1100, 0x00000188, 0x00000148, 0x00000024, 0x00000090, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f39, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x31426c75, 0x724d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x000000a0, 0x0000001c, 0x00000094, 0xffff0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x0000008d, 0x00000058, 0x00020000, 0x00010000, 0x00000060, 
    0x00000000, 0x00000070, 0x00030000, 0x00010000, 0x00000074, 0x00000000, 
    0x00000084, 0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x74657873, 0x63616c65, 
    0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000108, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 
    0x00002005, 0x40051000, 0xb0000000, 0x00245007, 0x40021000, 0xb0000000, 
    0x00002006, 0x100cb000, 0x12000000, 0x00000000, 0x600dc400, 0x12000000, 
    0x00002013, 0x00002200, 0x00000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x700f0003, 0x046cb11b, 0xa580ff02, 0xc8030004, 0x00c66d6d, 0xab020102, 
    0x44084081, 0x0f1ff688, 0x00004000, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c0f0003, 0x0000001b, 0xe0040302, 
    0xc80f0003, 0x046cb100, 0xa580ff00, 0xc80f0002, 0x00001b00, 0xa1010000, 
    0xc8070001, 0x00c01b00, 0xe1020100, 0xc80f0000, 0x001b0000, 0xe1020000, 
    0xc80f0000, 0x00001b00, 0xe1000300, 0xc8070000, 0x00c0c0c0, 0xeb010300, 
    0xc8080000, 0x001b1b1b, 0xeb020300, 0xc8070000, 0x00c01b00, 0xe1000000, 
    0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x2bc6db2e, 0x6fe8a946
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Blur.hlsl.h /Vn
//    pBinary_X360_FBox2Blur /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Blur.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r4.x, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r4.x
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    mad r4.xy, r2.zw, c1.xy, r2.xy
    tfetch2D r5, r4.xy, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r4.x, c0.y, r2.w
    add r3, r5, r3
  + setp_eq r0._, r4.x
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgt r3, -r0_abs.x, c255.y
label L10
    exec
    movs r2.x, r1.w
    alloc colors
    exece
    mul r1.xyz, r1.xyz, c0.w
  + mulsc r1.w, c0.w, r2.x
    mul r0, r1.w, r0
    mul r1.xyz, r1.xyz, r2.x
    mul r0, r0, r3.w
    mad oC0, r1, r3, r0

// PDB hint 4e4a0000-51199774-576bb419

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2Blur.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2Blur[] =
{
    0x102a1100, 0x00000184, 0x00000184, 0x00000024, 0x0000008c, 0x00000130, 
    0x00000158, 0x00000000, 0x00000000, 0x50c76f39, 0x0000005f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32426c75, 0x722e686c, 0x736c2e75, 0x70646200, 0x000000a0, 
    0x0000001c, 0x00000094, 0xffff0300, 0x00000003, 0x0000001c, 0x00000000, 
    0x0000008d, 0x00000058, 0x00020000, 0x00010000, 0x00000060, 0x00000000, 
    0x00000070, 0x00030000, 0x00010000, 0x00000074, 0x00000000, 0x00000084, 
    0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000144, 0x10000500, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002007, 
    0x40091000, 0xb0000000, 0x00002009, 0x40061000, 0xb0000000, 0x0024500b, 
    0x40041000, 0xb0000000, 0x00003010, 0x40021000, 0xb0000000, 0x0000200a, 
    0x1013b000, 0x12000000, 0x00001014, 0x00001200, 0xc4000000, 0x00005015, 
    0x00002200, 0x00000000, 0x14480202, 0x036c6c6c, 0x06000000, 0x700f0003, 
    0x046cb11b, 0xa580ff02, 0xc8010004, 0x02b1b100, 0x26000000, 0x70080002, 
    0x06b1b16c, 0x22000004, 0xc8030004, 0x001ab0b0, 0xab020102, 0x10085081, 
    0x0f1ff688, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8010004, 
    0x00b11b00, 0x66000200, 0x6c0f0003, 0x0000006c, 0xe0050304, 0xb0400200, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 
    0x0000001b, 0xe2000002, 0xc80f0003, 0x046cb100, 0xa580ff00, 0x14100200, 
    0x0000001b, 0xe2000001, 0xa8870101, 0x00c01b00, 0xa1010000, 0xc80f0000, 
    0x001b0000, 0xe1010000, 0xc8070001, 0x00c06c00, 0xe1010200, 0xc80f0000, 
    0x00001b00, 0xe1000300, 0xc80f8000, 0x00000000, 0xeb010300, 0x4e4a0000, 
    0x51199774, 0x576bb419
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2BlurMul.hlsl.h /Vn
//    pBinary_X360_FBox2BlurMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2BlurMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r4.x, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r4.x
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    mad r4.xy, r2.zw, c1.xy, r2.xy
    tfetch2D r5, r4.xy, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r4.x, c0.y, r2.w
    add r3, r5, r3
  + setp_eq r0._, r4.x
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgt r3, -r0_abs.x, c255.y
label L10
    alloc colors
    exec
    mul r2, r1, c0.w
    mul r1.xyz, r2.xyz, r1.w
    mul r0, r2.w, r0
    mul r0, r0, r3.w
    mad r0.xyz, r1.xyz, r3.xyz, r0.xyz
    mad r0.w, r2.w, r3.w, r0.w
    exece
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-ed49a3dd-6173ede6

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2BlurMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2BlurMul[] =
{
    0x102a1100, 0x00000188, 0x0000019c, 0x00000024, 0x00000090, 0x00000134, 
    0x0000015c, 0x00000000, 0x00000000, 0x50c76f39, 0x00000062, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32426c75, 0x724d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x000000a0, 0x0000001c, 0x00000094, 0xffff0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x0000008d, 0x00000058, 0x00020000, 0x00010000, 0x00000060, 
    0x00000000, 0x00000070, 0x00030000, 0x00010000, 0x00000074, 0x00000000, 
    0x00000084, 0x00020001, 0x00010000, 0x00000060, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x74657873, 0x63616c65, 
    0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x0000015c, 0x10000500, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 
    0x00002007, 0x40091000, 0xb0000000, 0x00002009, 0x40061000, 0xb0000000, 
    0x0024500b, 0x40041000, 0xb0000000, 0x00003010, 0x40021000, 0xb0000000, 
    0x0000200a, 0x1013b000, 0x12000000, 0x00000000, 0x6014c400, 0x12000000, 
    0x0000201a, 0x00002200, 0x00000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x700f0003, 0x046cb11b, 0xa580ff02, 0xc8010004, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b16c, 0x22000004, 0xc8030004, 0x001ab0b0, 0xab020102, 
    0x10085081, 0x0f1ff688, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 
    0xc8010004, 0x00b11b00, 0x66000200, 0x6c0f0003, 0x0000006c, 0xe0050304, 
    0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 
    0x6c000000, 0x0000001b, 0xe2000002, 0xc80f0003, 0x046cb100, 0xa580ff00, 
    0xc80f0002, 0x00001b00, 0xa1010000, 0xc8070001, 0x00c01b00, 0xe1020100, 
    0xc80f0000, 0x001b0000, 0xe1020000, 0xc80f0000, 0x00001b00, 0xe1000300, 
    0xc8070000, 0x00c0c0c0, 0xeb010300, 0xc8080000, 0x001b1b1b, 0xeb020300, 
    0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 
    0x4e4a0000, 0xed49a3dd, 0x6173ede6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Shadow.hlsl.h /Vn
//    pBinary_X360_FBox2Shadow /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Shadow.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r2.z, -r0_abs.x
    mov r3.y, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r2.w, c0.y, -c0.y
    mov r3.z, -c0.y
  + setp_ne r0._, r2.w
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.xw, r3.yz, c1.xy
    mad r3.xw, r3.xw, c4.xy, r2.xy
    tfetch2D r3.w___, r3.xw, tf1, UseComputedLOD=false
    serialize
    addsc r3.z, c255.x, r3.z
    sge r2.w, c0.y, r3.z
    add r2.z, r3.x, r2.z
  + setp_eq r0._, r2.w
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r3.y, c255.x, r3.y
    sge r2.w, c0.x, r3.y
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r2.z, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r3, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    add r2.x, -r3.w, c255.x
  + mulsc r2.y, c0.w, r2.z
    mul r2.x, r2.y, r2.x
  + movs r0._, r0.x
    mul_sat r2.x, r2.x, c0.z
  + muls_prev r0.x, r1.w
    mad r3, r2.x, c2, r3
    mul r2.x, r0.x, r3.w
    mul r1.xyz, r1.w, r1.xyz
  + movs r0._, r3.w
    exece
    mul r3.xyz, r1.xyz, r3.xyz
  + muls_prev r3.w, r1.w
    mul r2.yzw, r3.w, r0.yyzw
    add oC0, r3, r2

// PDB hint 4e4a0000-cdd0c395-52525f5e

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2Shadow.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2Shadow[] =
{
    0x102a1100, 0x000001fc, 0x000001cc, 0x00000024, 0x00000090, 0x000001a8, 
    0x000001d0, 0x00000000, 0x00000000, 0x50c76f39, 0x00000061, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f772e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 0x00000007, 0x0000001c, 
    0x00000000, 0x00000101, 0x000000a8, 0x00020000, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000c0, 0x00020001, 0x00010000, 0x000000b0, 0x00000000, 
    0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 0x00000000, 0x000000ce, 
    0x00030000, 0x00010000, 0x000000d8, 0x00000000, 0x000000e8, 0x00020003, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 0x00030001, 0x00010000, 
    0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 0x00010000, 0x000000b0, 
    0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 0x00010000, 
    0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 0x72007372, 0x63746578, 
    0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 
    0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x0000018c, 0x10000300, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002007, 
    0x40091000, 0xb0000000, 0x00002009, 0x40061000, 0xb0000000, 0x0090600b, 
    0x40041000, 0xb0000000, 0x00003011, 0x40021000, 0xb0000000, 0x0000200a, 
    0x1014b000, 0x12000000, 0x00042015, 0x00001200, 0xc4000000, 0x00006017, 
    0x301d1200, 0x22000000, 0x20480202, 0x036c6c6c, 0x26000080, 0x70020003, 
    0x066c6c1b, 0x22000002, 0xc8080002, 0x02b1b100, 0x26000000, 0x70040003, 
    0x06b1b11b, 0x22000002, 0xc8090003, 0x00c5b000, 0xa0030100, 0xc8090003, 
    0x0018b0b0, 0xab030402, 0x30183061, 0x0f1ffffb, 0x00004000, 0xb4400300, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x00b1c600, 0x66000300, 0x6c040002, 
    0x006cc61b, 0xe0030202, 0xb4200300, 0x00000041, 0xe20000ff, 0xc8080002, 
    0x006cb100, 0x66000300, 0x6c000000, 0x0000001b, 0xe2000002, 0x20400200, 
    0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 0xa1020300, 0x10083041, 
    0x0f1ff688, 0x00004000, 0xa8210202, 0x041b6c02, 0xa003ff00, 0x14010002, 
    0x00b16c6c, 0xe1020200, 0x0d110002, 0x006cc61b, 0xa1020001, 0xc80f0003, 
    0x006c0000, 0xab020203, 0xc8010002, 0x006c1b00, 0xe1000300, 0x14070001, 
    0x001bc01b, 0xe1010103, 0x0c870303, 0x00c0c01b, 0xe1010301, 0xc80e0002, 
    0x001b0100, 0xe1030000, 0xc80f8000, 0x00000000, 0xe0030200, 0x4e4a0000, 
    0xcdd0c395, 0x52525f5e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowMul.hlsl.h /Vn
//    pBinary_X360_FBox2ShadowMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r2.z, -r0_abs.x
    mov r3.y, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r2.w, c0.y, -c0.y
    mov r3.z, -c0.y
  + setp_ne r0._, r2.w
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.xw, r3.yz, c1.xy
    mad r3.xw, r3.xw, c4.xy, r2.xy
    tfetch2D r3.w___, r3.xw, tf1, UseComputedLOD=false
    serialize
    addsc r3.z, c255.x, r3.z
    sge r2.w, c0.y, r3.z
    add r2.z, r3.x, r2.z
  + setp_eq r0._, r2.w
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r3.y, c255.x, r3.y
    sge r2.w, c0.x, r3.y
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r2.z, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    subsc r2.x, c255.x, r4.w
    mul r3.xyz, r1.w, r1.xyz
  + mulsc r1.x, c0.w, r2.z
    mul r1.x, r1.x, r2.x
    mul_sat r1.x, r1.x, c0.z
  + movs r0._, r0.x
    mad r2, r1.x, c2, r4
    mul r0.x, r2.w, r1.w
  + muls_prev r1.x, r1.w
    exece
    mul r1.yzw, r0.x, r0.yyzw
  + movs r0._, r1.x
    add r0.w, r0.x, r1.w
  + muls_prev r1.x, r2.w
    mad r0.xyz, r3.xyz, r2.xyz, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-a7f51e59-dd5db7fd

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowMul[] =
{
    0x102a1100, 0x000001fc, 0x000001e4, 0x00000024, 0x00000090, 0x000001a8, 
    0x000001d0, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f774d, 0x756c2e68, 0x6c736c2e, 0x75706462, 
    0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 0x00000007, 0x0000001c, 
    0x00000000, 0x00000101, 0x000000a8, 0x00020000, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000c0, 0x00020001, 0x00010000, 0x000000b0, 0x00000000, 
    0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 0x00000000, 0x000000ce, 
    0x00030000, 0x00010000, 0x000000d8, 0x00000000, 0x000000e8, 0x00020003, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 0x00030001, 0x00010000, 
    0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 0x00010000, 0x000000b0, 
    0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 0x00010000, 
    0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 0x72007372, 0x63746578, 
    0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 
    0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000001a4, 0x10000400, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002007, 
    0x40091000, 0xb0000000, 0x00002009, 0x40061000, 0xb0000000, 0x0090600b, 
    0x40041000, 0xb0000000, 0x00003011, 0x40021000, 0xb0000000, 0x0000200a, 
    0x1014b000, 0x12000000, 0x00042015, 0x00001200, 0xc4000000, 0x00006017, 
    0x501d1200, 0x22000000, 0x20480202, 0x036c6c6c, 0x26000080, 0x70020003, 
    0x066c6c1b, 0x22000002, 0xc8080002, 0x02b1b100, 0x26000000, 0x70040003, 
    0x06b1b11b, 0x22000002, 0xc8090003, 0x00c5b000, 0xa0030100, 0xc8090003, 
    0x0018b0b0, 0xab030402, 0x30183061, 0x0f1ffffb, 0x00004000, 0xb4400300, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x00b1c600, 0x66000300, 0x6c040002, 
    0x006cc61b, 0xe0030202, 0xb4200300, 0x00000041, 0xe20000ff, 0xc8080002, 
    0x006cb100, 0x66000300, 0x6c000000, 0x0000001b, 0xe2000002, 0x20400200, 
    0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 0xa1020300, 0x10084041, 
    0x0f1ff688, 0x00004000, 0xb8100200, 0x00000047, 0xc20000ff, 0xa8170103, 
    0x001bc002, 0xe1010100, 0xc8010001, 0x006c6c00, 0xe1010200, 0x15010001, 
    0x006cc66c, 0xa1010000, 0xc80f0002, 0x006c0000, 0xab010204, 0x0c110100, 
    0x001b1b1b, 0xe1020101, 0x140e0001, 0x006c016c, 0xe1000001, 0x0c180100, 
    0x006c1b1b, 0xe0000102, 0xc8070000, 0x00c0c0c0, 0xeb030201, 0xc8070000, 
    0x00c01b00, 0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 
    0xa7f51e59, 0xdd5db7fd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowKnockout.hlsl.h /Vn
//    pBinary_X360_FBox2ShadowKnockout /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowKnockout.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r2.w___, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    add r2.x, -r2.x, c255.x
  + mulsc r2.y, c0.w, r3.x
    mul r2.x, r2.y, r2.x
    mulsc_sat r2.x, c0.z, r2.x
    mul r2.yzw, r2.x, c2.xxyz
    mul r3.xyz, r2.yzw, r1.xyz
  + mulsc r3.w, c2.w, r2.x
    mul r1, r3.xwyz, r1.w
    exece
    mad oC0, r1.y, r0, r1.xzwy

// PDB hint 4e4a0000-ec9195e1-5e22720f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowKnockout.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowKnockout[] =
{
    0x102a1100, 0x00000204, 0x000001b4, 0x00000024, 0x00000098, 0x000001b0, 
    0x000001d8, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f774b, 0x6e6f636b, 0x6f75742e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 
    0x00000007, 0x0000001c, 0x00000000, 0x00000101, 0x000000a8, 0x00020000, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000c0, 0x00020001, 0x00010000, 
    0x000000b0, 0x00000000, 0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000ce, 0x00030000, 0x00010000, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00020003, 0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 
    0x00030001, 0x00010000, 0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 
    0x00010000, 0x000000b0, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007372, 0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x73726374, 0x65787363, 0x616c6500, 0x74657800, 0x74657873, 
    0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000174, 
    0x10000300, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 
    0x00000000, 0x00002007, 0x40091000, 0xb0000000, 0x00002009, 0x40061000, 
    0xb0000000, 0x0090600b, 0x40041000, 0xb0000000, 0x00003011, 0x40021000, 
    0xb0000000, 0x0000200a, 0x1014b000, 0x12000000, 0x00042015, 0x00001200, 
    0xc4000000, 0x00006017, 0x101d1200, 0x22000000, 0x20180302, 0x036c6c6c, 
    0x26000080, 0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 
    0xa0020100, 0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 0x0f1ffeff, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 
    0x66000200, 0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 
    0xa1020300, 0x10082041, 0x0f1ffffb, 0x00004000, 0xac210202, 0x046c6c00, 
    0xa002ff00, 0xc8010002, 0x00b16c00, 0xe1020200, 0xaa100200, 0x000000c0, 
    0xe2000000, 0xc80e0002, 0x006cfc00, 0xa1020200, 0xa8870303, 0x0015c000, 
    0xe1020102, 0xc80f0001, 0x00f81b00, 0xe1030100, 0xc80f8000, 0x00b10094, 
    0xeb010001, 0x4e4a0000, 0xec9195e1, 0x5e22720f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowKnockoutMul.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowKnockoutMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowKnockoutMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r2.w___, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    add r2.x, -r2.x, c255.x
  + mulsc r2.y, c0.w, r3.x
    mul r2.x, r2.y, r2.x
    mulsc_sat r2.x, c0.z, r2.x
    mul r2, r2.x, c2
    mul r2, r2, r1
    mul r0, r2.w, r0
    exece
    add r0.w, r2.w, r0.w
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-2ca2cc6c-a40f60ce

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowKnockoutMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowKnockoutMul[] =
{
    0x102a1100, 0x00000204, 0x000001d8, 0x00000024, 0x00000098, 0x000001b0, 
    0x000001d8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006c, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f774b, 0x6e6f636b, 0x6f75744d, 0x756c2e68, 
    0x6c736c2e, 0x75706462, 0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 
    0x00000007, 0x0000001c, 0x00000000, 0x00000101, 0x000000a8, 0x00020000, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000c0, 0x00020001, 0x00010000, 
    0x000000b0, 0x00000000, 0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000ce, 0x00030000, 0x00010000, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00020003, 0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 
    0x00030001, 0x00010000, 0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 
    0x00010000, 0x000000b0, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007372, 0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x73726374, 0x65787363, 0x616c6500, 0x74657800, 0x74657873, 
    0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000198, 
    0x10000300, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 
    0x00000000, 0x00002007, 0x40091000, 0xb0000000, 0x00002009, 0x40061000, 
    0xb0000000, 0x0090600b, 0x40041000, 0xb0000000, 0x00003011, 0x40021000, 
    0xb0000000, 0x0000200a, 0x1014b000, 0x12000000, 0x00042015, 0x00001200, 
    0xc4000000, 0x00006017, 0x401d1200, 0x22000000, 0x20180302, 0x036c6c6c, 
    0x26000080, 0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 
    0xa0020100, 0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 0x0f1ffeff, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 
    0x66000200, 0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 
    0xa1020300, 0x10082041, 0x0f1ffffb, 0x00004000, 0xac210202, 0x046c6c00, 
    0xa002ff00, 0xc8010002, 0x00b16c00, 0xe1020200, 0xaa100200, 0x000000c0, 
    0xe2000000, 0xc80f0002, 0x006c0000, 0xa1020200, 0xc80f0002, 0x00000000, 
    0xe1020100, 0xc80f0000, 0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 
    0xe0020000, 0xc8070000, 0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x2ca2cc6c, 
    0xa40f60ce
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadow.hlsl.h /Vn
//    pBinary_X360_FBox2InnerShadow /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadow.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    add r5, -r4, c2
    mad r2.x, -r3.x, c0.w, r4.w
    mul r3, r4.w, r1
  + mulsc_sat r2.x, c0.z, r2.x
    mad r2, r2.x, r5, r4
    mul r3.xyz, r3.xyz, r2.xyz
  + movs r0._, r3.w
    mul r1.xyz, r3.xyz, r1.w
  + muls_prev r1.w, r2.w
    exece
    mad oC0, r1.w, r0, r1

// PDB hint 4e4a0000-5e2a99bb-bf33c89f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadow.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadow[] =
{
    0x102a1100, 0x00000200, 0x000001b4, 0x00000024, 0x00000094, 0x000001ac, 
    0x000001d4, 0x00000000, 0x00000000, 0x50c76f39, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 0x00000007, 
    0x0000001c, 0x00000000, 0x00000101, 0x000000a8, 0x00020000, 0x00010000, 
    0x000000b0, 0x00000000, 0x000000c0, 0x00020001, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 0x00000000, 
    0x000000ce, 0x00030000, 0x00010000, 0x000000d8, 0x00000000, 0x000000e8, 
    0x00020003, 0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 0x00030001, 
    0x00010000, 0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 0x00010000, 
    0x000000b0, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 0x72007372, 
    0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x73726374, 0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 
    0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000174, 0x10000500, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 
    0x00002007, 0x40091000, 0xb0000000, 0x00002009, 0x40061000, 0xb0000000, 
    0x0090600b, 0x40041000, 0xb0000000, 0x00003011, 0x40021000, 0xb0000000, 
    0x0000200a, 0x1014b000, 0x12000000, 0x00042015, 0x00001200, 0xc4000000, 
    0x00006017, 0x101d1200, 0x22000000, 0x20180302, 0x036c6c6c, 0x26000080, 
    0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 0xa0020100, 
    0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 0x0f1ffeff, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 0x66000200, 
    0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 0xa1020300, 
    0x10084041, 0x0f1ff688, 0x00004000, 0xc80f0005, 0x04000000, 0xa0040200, 
    0xc8010002, 0x046c1b1b, 0xab030004, 0xaa1f0203, 0x001b00c0, 0xe1040100, 
    0xc80f0002, 0x006c0000, 0xeb020504, 0x14070003, 0x00c0c01b, 0xe1030203, 
    0x0c870101, 0x00c01b1b, 0xe1030102, 0xc80f8000, 0x001b0000, 0xeb010001, 
    0x4e4a0000, 0x5e2a99bb, 0xbf33c89f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowMul.hlsl.h /Vn
//    pBinary_X360_FBox2InnerShadowMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    add r5, -r4, c2
    mad r2.x, -r3.x, c0.w, r4.w
    mul r3, r4.w, r1
  + mulsc_sat r2.x, c0.z, r2.x
    mad r2, r2.x, r5, r4
    mul r2, r3, r2
    mul r0, r2.w, r0
    exece
    add r0.w, r2.w, r0.w
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-2a635b65-7fa7fc86

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowMul[] =
{
    0x102a1100, 0x00000204, 0x000001d8, 0x00000024, 0x00000098, 0x000001b0, 
    0x000001d8, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x4d756c2e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000114, 0x0000001c, 0x00000108, 0xffff0300, 
    0x00000007, 0x0000001c, 0x00000000, 0x00000101, 0x000000a8, 0x00020000, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000c0, 0x00020001, 0x00010000, 
    0x000000b0, 0x00000000, 0x000000c7, 0x00020002, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000ce, 0x00030000, 0x00010000, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00020003, 0x00010000, 0x000000b0, 0x00000000, 0x000000f4, 
    0x00030001, 0x00010000, 0x000000d8, 0x00000000, 0x000000f8, 0x00020004, 
    0x00010000, 0x000000b0, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007372, 0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x73726374, 0x65787363, 0x616c6500, 0x74657800, 0x74657873, 
    0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000198, 
    0x10000500, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 
    0x00000000, 0x00002007, 0x40091000, 0xb0000000, 0x00002009, 0x40061000, 
    0xb0000000, 0x0090600b, 0x40041000, 0xb0000000, 0x00003011, 0x40021000, 
    0xb0000000, 0x0000200a, 0x1014b000, 0x12000000, 0x00042015, 0x00001200, 
    0xc4000000, 0x00006017, 0x401d1200, 0x22000000, 0x20180302, 0x036c6c6c, 
    0x26000080, 0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 
    0xa0020100, 0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 0x0f1ffeff, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 
    0x66000200, 0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 
    0xa1020300, 0x10084041, 0x0f1ff688, 0x00004000, 0xc80f0005, 0x04000000, 
    0xa0040200, 0xc8010002, 0x046c1b1b, 0xab030004, 0xaa1f0203, 0x001b00c0, 
    0xe1040100, 0xc80f0002, 0x006c0000, 0xeb020504, 0xc80f0002, 0x00000000, 
    0xe1030200, 0xc80f0000, 0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 
    0xe0020000, 0xc8070000, 0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x2a635b65, 
    0x7fa7fc86
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowKnockout.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowKnockout /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowKnockout.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mad r2.x, -r3.x, c0.w, r4.w
    add r3, -r4, c2
  + mulsc_sat r2.y, c0.z, r2.x
    mad r3, r2.y, r3, r4
    subsc r2.x, c255.x, r2.y
    mul r2, r2.x, r4
  + movs r0._, r0.x
    mul r2, r2, r4.w
  + muls_prev r0.x, r1.w
    exece
    mad r3, r3, r4.w, -r2
    mul r2.x, r0.x, r3.w
    mul r1.xyz, r1.w, r1.xyz
  + movs r0._, r3.w
    mul r3.xyz, r1.xyz, r3.xyz
  + muls_prev r3.w, r1.w
    mul r2.yzw, r3.w, r0.yyzw
    add oC0, r3, r2

// PDB hint 4e4a0000-5f4531b0-b5f56d69

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowKnockout.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowKnockout[] =
{
    0x102a1100, 0x00000208, 0x000001f0, 0x00000024, 0x0000009c, 0x000001b4, 
    0x000001dc, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x4b6e6f63, 0x6b6f7574, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000114, 0x0000001c, 0x00000108, 
    0xffff0300, 0x00000007, 0x0000001c, 0x00000000, 0x00000101, 0x000000a8, 
    0x00020000, 0x00010000, 0x000000b0, 0x00000000, 0x000000c0, 0x00020001, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000c7, 0x00020002, 0x00010000, 
    0x000000b0, 0x00000000, 0x000000ce, 0x00030000, 0x00010000, 0x000000d8, 
    0x00000000, 0x000000e8, 0x00020003, 0x00010000, 0x000000b0, 0x00000000, 
    0x000000f4, 0x00030001, 0x00010000, 0x000000d8, 0x00000000, 0x000000f8, 
    0x00020004, 0x00010000, 0x000000b0, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007372, 0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 0x74657800, 
    0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 
    0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000001b0, 0x10000400, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 
    0x00000000, 0x00000000, 0x00002007, 0x40091000, 0xb0000000, 0x00002009, 
    0x40061000, 0xb0000000, 0x0090600b, 0x40041000, 0xb0000000, 0x00003011, 
    0x40021000, 0xb0000000, 0x0000200a, 0x1014b000, 0x12000000, 0x00042015, 
    0x00001200, 0xc4000000, 0x00006017, 0x601d1200, 0x22000000, 0x20180302, 
    0x036c6c6c, 0x26000080, 0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 
    0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 
    0x0016bc00, 0xa0020100, 0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 
    0x0f1ffeff, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 
    0x00b11b00, 0x66000200, 0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 
    0x0000001b, 0xe2000002, 0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 
    0x00b0b000, 0xa1020300, 0x10084041, 0x0f1ff688, 0x00004000, 0xc8010002, 
    0x046c1b1b, 0xab030004, 0xaa2f0203, 0x040000c0, 0xa0040200, 0xc80f0003, 
    0x00b10000, 0xeb020304, 0xb8100200, 0x00000041, 0xe20000ff, 0x140f0002, 
    0x006c006c, 0xe1020400, 0x0c1f0002, 0x00001b1b, 0xe1020401, 0xc80f0003, 
    0x01001b00, 0xeb030402, 0xc8010002, 0x006c1b00, 0xe1000300, 0x14070001, 
    0x001bc01b, 0xe1010103, 0x0c870303, 0x00c0c01b, 0xe1010301, 0xc80e0002, 
    0x001b0100, 0xe1030000, 0xc80f8000, 0x00000000, 0xe0030200, 0x4e4a0000, 
    0x5f4531b0, 0xb5f56d69
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowKnockoutMul.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowKnockoutMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowKnockoutMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c4.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    exec
    mul r2.xy, r2.xy, c3.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r3.w, r0.x, r1.w
    add r2, -r4, c2
  + movs r0._, r1.w
    mad r0.x, -r3.x, c0.w, r4.w
    mul_sat r0.x, r0.x, c0.z
  + muls_prev r3.x, r1.x
    mad r5, r0.x, r2, r4
    add r0.x, -r0.x, c255.x
  + movs r0._, r1.w
    exec
    mul r2, r0.x, r4
  + muls_prev r3.y, r1.y
    mul r2, r2, r4.w
  + movs r0._, r1.w
    mad r2, r5, r4.w, -r2
    mul r0.x, r2.w, r1.w
  + muls_prev r3.z, r1.z
    mul r1.yzw, r0.x, r0.yyzw
  + movs r0._, r3.w
    add r0.w, r0.x, r1.w
  + muls_prev r1.x, r2.w
    exece
    mad r0.xyz, r3.xyz, r2.xyz, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-8b16d3fd-f0a5cbfd

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowKnockoutMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowKnockoutMul[] =
{
    0x102a1100, 0x0000020c, 0x00000220, 0x00000024, 0x000000a0, 0x000001b8, 
    0x000001e0, 0x00000000, 0x00000000, 0x50c76f39, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x4b6e6f63, 0x6b6f7574, 
    0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000114, 0x0000001c, 
    0x00000108, 0xffff0300, 0x00000007, 0x0000001c, 0x00000000, 0x00000101, 
    0x000000a8, 0x00020000, 0x00010000, 0x000000b0, 0x00000000, 0x000000c0, 
    0x00020001, 0x00010000, 0x000000b0, 0x00000000, 0x000000c7, 0x00020002, 
    0x00010000, 0x000000b0, 0x00000000, 0x000000ce, 0x00030000, 0x00010000, 
    0x000000d8, 0x00000000, 0x000000e8, 0x00020003, 0x00010000, 0x000000b0, 
    0x00000000, 0x000000f4, 0x00030001, 0x00010000, 0x000000d8, 0x00000000, 
    0x000000f8, 0x00020004, 0x00010000, 0x000000b0, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 
    0x65740073, 0x636f6c6f, 0x72007372, 0x63746578, 0x00ababab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 
    0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001e0, 0x10000500, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x40091000, 0xb0000000, 
    0x0000200a, 0x40061000, 0xb0000000, 0x0090600c, 0x40041000, 0xb0000000, 
    0x00003012, 0x40021000, 0xb0000000, 0x0000200a, 0x1015b000, 0x12000000, 
    0x00042016, 0x00001200, 0xc4000000, 0x00006018, 0x601e1200, 0x12000000, 
    0x00003024, 0x00002200, 0x00000000, 0x20180302, 0x036c6c6c, 0x26000080, 
    0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 0xa0020100, 
    0xc8060003, 0x00c1bcbc, 0xab030402, 0x64183061, 0x0f1ffeff, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 0x66000200, 
    0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0x20100300, 0x0100006c, 0xe2000080, 0xc8030002, 0x00b0b000, 0xa1020300, 
    0x10084041, 0x0f1ff688, 0x00004000, 0xc8080003, 0x006c1b00, 0xe1000100, 
    0x140f0002, 0x0400001b, 0xa0040201, 0xc8010000, 0x046c1b1b, 0xab030004, 
    0x0d110300, 0x006cc66c, 0xa1000001, 0xc80f0005, 0x006c0000, 0xeb000204, 
    0x14010000, 0x046c6c1b, 0xa000ff01, 0x0c2f0302, 0x006c00b1, 0xe1000401, 
    0x140f0002, 0x00001b1b, 0xe1020401, 0xc80f0002, 0x01001b00, 0xeb050402, 
    0x0c410300, 0x001b1bc6, 0xe1020101, 0x140e0001, 0x006c011b, 0xe1000003, 
    0x0c180100, 0x006c1b1b, 0xe0000102, 0xc8070000, 0x00c0c0c0, 0xeb030201, 
    0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 
    0x4e4a0000, 0x8b16d3fd, 0xf0a5cbfd
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Shadowonly.hlsl.h /Vn
//    pBinary_X360_FBox2Shadowonly /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2Shadowonly.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   texscale     c3       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c3.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    alloc colors
    exece
    muls r2.x, c0.zw
    mul_sat r2.x, r2.x, r3.x
    mul r2.yzw, r2.x, c2.xxyz
    mul r3.xyz, r2.yzw, r1.xyz
  + mulsc r3.w, c2.w, r2.x
    mul r1, r3.xwyz, r1.w
    mad oC0, r1.y, r0, r1.xzwy

// PDB hint 4e4a0000-2e0020bd-4b1d6df3

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2Shadowonly.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2Shadowonly[] =
{
    0x102a1100, 0x000001c4, 0x00000184, 0x00000024, 0x00000094, 0x00000170, 
    0x00000198, 0x00000000, 0x00000000, 0x50c76f39, 0x00000065, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f776f, 0x6e6c792e, 0x686c736c, 0x2e757064, 
    0x62000000, 0x000000d8, 0x0000001c, 0x000000cc, 0xffff0300, 0x00000005, 
    0x0000001c, 0x00000000, 0x000000c5, 0x00000080, 0x00020000, 0x00010000, 
    0x00000088, 0x00000000, 0x00000098, 0x00020001, 0x00010000, 0x00000088, 
    0x00000000, 0x0000009f, 0x00020002, 0x00010000, 0x00000088, 0x00000000, 
    0x000000a6, 0x00030000, 0x00010000, 0x000000ac, 0x00000000, 0x000000bc, 
    0x00020003, 0x00010000, 0x00000088, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007465, 0x7800abab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000144, 0x10000300, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002006, 0x40091000, 0xb0000000, 
    0x00002008, 0x40061000, 0xb0000000, 0x0090600a, 0x40041000, 0xb0000000, 
    0x00003010, 0x40021000, 0xb0000000, 0x0000200a, 0x1013b000, 0x12000000, 
    0x00000000, 0x6014c400, 0x22000000, 0x20180302, 0x036c6c6c, 0x26000080, 
    0x70040002, 0x066c6c1b, 0x22000002, 0xc8020003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1b1, 0x22000003, 0xc8060003, 0x0016bc00, 0xa0020100, 
    0xc8060003, 0x00c1bcbc, 0xab030302, 0x64083061, 0x0f1ffeff, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8020003, 0x00b11b00, 0x66000200, 
    0x6c010003, 0x00c66cb1, 0xe0030303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0x20100300, 0x0100006c, 0xe2000080, 0x08100200, 0x000000cb, 0xc2000000, 
    0xc9010002, 0x006c6c00, 0xe1020300, 0xc80e0002, 0x006cfc00, 0xa1020200, 
    0xa8870303, 0x0015c000, 0xe1020102, 0xc80f0001, 0x00f81b00, 0xe1030100, 
    0xc80f8000, 0x00b10094, 0xeb010001, 0x4e4a0000, 0x2e0020bd, 0x4b1d6df3
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyMul.hlsl.h /Vn
//    pBinary_X360_FBox2ShadowonlyMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   texscale     c3       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + sgts r3.x, -r0_abs.x
    mov r2.z, -c0.x
  + setp_ne r0._, r2.w
(!p0) jmp L9
label L2
    exec    // PredicateClean=false
    sge r3.y, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.y
(!p0) jmp L6
label L4
    exec    // PredicateClean=false
    add r3.yz, r2.zzw, c1.xxy
    mad r3.yz, r3.yyz, c3.xxy, r2.xxy
    tfetch2D r3.__w_, r3.yz, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    sge r3.y, c0.y, r2.w
    add r3.x, r3.z, r3.x
  + setp_eq r0._, r3.y
(!p0) jmp L4
label L6
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L10
label L9
    exec
    sgts r3.x, -r0_abs.x
label L10
    alloc colors
    exec
    muls r2.x, c0.zw
    mul_sat r2.x, r2.x, r3.x
    mul r2, r2.x, c2
    mul r2, r2, r1
    mul r0, r2.w, r0
    add r0.w, r2.w, r0.w
    exece
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-6bb02019-07fe7cb6

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowonlyMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowonlyMul[] =
{
    0x102a1100, 0x000001c4, 0x000001b4, 0x00000024, 0x00000094, 0x00000170, 
    0x00000198, 0x00000000, 0x00000000, 0x50c76f39, 0x00000068, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f776f, 0x6e6c794d, 0x756c2e68, 0x6c736c2e, 
    0x75706462, 0x000000d8, 0x0000001c, 0x000000cc, 0xffff0300, 0x00000005, 
    0x0000001c, 0x00000000, 0x000000c5, 0x00000080, 0x00020000, 0x00010000, 
    0x00000088, 0x00000000, 0x00000098, 0x00020001, 0x00010000, 0x00000088, 
    0x00000000, 0x0000009f, 0x00020002, 0x00010000, 0x00000088, 0x00000000, 
    0x000000a6, 0x00030000, 0x00010000, 0x000000ac, 0x00000000, 0x000000bc, 
    0x00020003, 0x00010000, 0x00000088, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007465, 0x7800abab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x00000174, 0x10000300, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002007, 0x40091000, 0xb0000000, 
    0x00002009, 0x40061000, 0xb0000000, 0x0090600b, 0x40041000, 0xb0000000, 
    0x00003011, 0x40021000, 0xb0000000, 0x0000200a, 0x1014b000, 0x12000000, 
    0x00000000, 0x6015c400, 0x12000000, 0x0000301b, 0x00002200, 0x00000000, 
    0x20180302, 0x036c6c6c, 0x26000080, 0x70040002, 0x066c6c1b, 0x22000002, 
    0xc8020003, 0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1b1, 0x22000003, 
    0xc8060003, 0x0016bc00, 0xa0020100, 0xc8060003, 0x00c1bcbc, 0xab030302, 
    0x64083061, 0x0f1ffeff, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 
    0xc8020003, 0x00b11b00, 0x66000200, 0x6c010003, 0x00c66cb1, 0xe0030303, 
    0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 
    0x6c000000, 0x0000001b, 0xe2000002, 0x20100300, 0x0100006c, 0xe2000080, 
    0x08100200, 0x000000cb, 0xc2000000, 0xc9010002, 0x006c6c00, 0xe1020300, 
    0xc80f0002, 0x006c0000, 0xa1020200, 0xc80f0002, 0x00000000, 0xe1020100, 
    0xc80f0000, 0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 0xe0020000, 
    0xc8070000, 0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 0xe1000000, 
    0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x6bb02019, 0x07fe7cb6
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlight.hlsl.h /Vn
//    pBinary_X360_FBox2ShadowHighlight /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlight.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r0.x, r0.x, r1.w
    mul r2.x, -c0.z, c0.w
  + muls r2.y, c0.zw
    mad r2.zw, -r2.y, r3.xxxy, c255.x
    mad r2.xy, r2.x, r3.yx, c255.x
    add_sat r2.xz, r2.wz, -r2.yx
  + movs r2.y, r4.w
    mul r3, r2.x, c3
  + subsc r2.x, c255.x, r2.y
    exec
    mad r3, r2.z, c2, r3
    mad r3, r3, r2.x, r4
    mul r2.x, r0.x, r3.w
    mul r1.xyz, r1.w, r1.xyz
  + movs r0._, r3.w
    mul r3.xyz, r1.xyz, r3.xyz
  + muls_prev r3.w, r1.w
    mul r2.yzw, r3.w, r0.yyzw
    exece
    add oC0, r3, r2

// PDB hint 4e4a0000-c8ea184d-1267a013

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowHighlight.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowHighlight[] =
{
    0x102a1100, 0x00000220, 0x00000220, 0x00000024, 0x00000098, 0x000001cc, 
    0x000001f4, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f7748, 0x6967686c, 0x69676874, 0x2e686c73, 
    0x6c2e7570, 0x64620000, 0x00000130, 0x0000001c, 0x00000124, 0xffff0300, 
    0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 0x000000bc, 0x00020000, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 0x00020001, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000db, 0x00020002, 0x00010000, 0x000000c4, 
    0x00000000, 0x000000e2, 0x00020003, 0x00010000, 0x000000c4, 0x00000000, 
    0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 0x00000000, 0x00000104, 
    0x00020004, 0x00010000, 0x000000c4, 0x00000000, 0x00000110, 0x00030001, 
    0x00010000, 0x000000f4, 0x00000000, 0x00000114, 0x00020005, 0x00010000, 
    0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 0x72007363, 
    0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 0x74657800, 
    0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 
    0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x000001e0, 0x10000400, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 
    0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 
    0x00000000, 0x00000000, 0x00002008, 0x400a1000, 0xb0000000, 0x0000200a, 
    0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 0x10000000, 0x00004004, 
    0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 0xb0000000, 0x00001017, 
    0x20181200, 0x12000004, 0x00000000, 0x601ac400, 0x12000000, 0x00006020, 
    0x10261200, 0x22000000, 0x14480202, 0x036c6c6c, 0x06000000, 0x70030003, 
    0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 0x70080002, 
    0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 0xc80c0003, 
    0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 0xab040502, 0x10184081, 
    0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 0x00004000, 0xb0800200, 
    0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 0x6c030003, 
    0x00b0b0c6, 0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 
    0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 0xc8030003, 
    0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 0xa1020400, 0x10084041, 
    0x0f1ff688, 0x00004000, 0xc8010000, 0x006c1b00, 0xe1000100, 0x08210202, 
    0x04c61bcb, 0x01000000, 0xc80c0002, 0x04b1ac6c, 0xcb0203ff, 0xc8030002, 
    0x006c6d6c, 0xcb0203ff, 0x15250202, 0x02c76d1b, 0xe0020204, 0xb81f0203, 
    0x006c0041, 0xa10203ff, 0xc80f0003, 0x00c60000, 0xab020203, 0xc80f0003, 
    0x00006c00, 0xeb030204, 0xc8010002, 0x006c1b00, 0xe1000300, 0x14070001, 
    0x001bc01b, 0xe1010103, 0x0c870303, 0x00c0c01b, 0xe1010301, 0xc80e0002, 
    0x001b0100, 0xe1030000, 0xc80f8000, 0x00000000, 0xe0030200, 0x4e4a0000, 
    0xc8ea184d, 0x1267a013
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightMul.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowHighlightMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r3.z, r0.x, r1.w
    mul r0.x, -c0.z, c0.w
    mul r4.xyz, r1.w, r1.xyz
  + muls r1.x, c0.zw
    mad r5.xy, -r1.x, r3.yx, c255.x
    mad r1.xy, r0.x, r3.xy, c255.x
    add_sat r1.xz, r5.xy, -r1.xy
  + movs r1.y, r2.w
    exec
    mul r5, r1.z, c3
  + subsc r0.x, c255.x, r1.y
    mad r5, r1.x, c2, r5
    mad r2, r5, r0.x, r2
    mul r0.x, r2.w, r1.w
    mul r1.yzw, r0.x, r0.yyzw
  + movs r0._, r3.z
    add r0.w, r0.x, r1.w
  + muls_prev r1.x, r2.w
    exece
    mad r0.xyz, r4.xyz, r2.xyz, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-81944407-59ac8bd1

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowHighlightMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowHighlightMul[] =
{
    0x102a1100, 0x00000224, 0x00000238, 0x00000024, 0x0000009c, 0x000001d0, 
    0x000001f8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006d, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f7748, 0x6967686c, 0x69676874, 0x4d756c2e, 
    0x686c736c, 0x2e757064, 0x62000000, 0x00000130, 0x0000001c, 0x00000124, 
    0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 0x000000bc, 
    0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 0x00020001, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 0x000000c4, 
    0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 0x00000000, 
    0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 0x00000110, 
    0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 0x00020005, 
    0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 
    0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001f8, 0x10000500, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 0xb0000000, 
    0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 0x10000000, 
    0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 0xb0000000, 
    0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 0x12000000, 
    0x00006020, 0x30261200, 0x22000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 
    0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 0xab040502, 
    0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 
    0x6c030003, 0x006db0c6, 0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 0xa1020400, 
    0x10082041, 0x0f1ff688, 0x00004000, 0xc8040003, 0x006c1b00, 0xe1000100, 
    0xc8010000, 0x04c61b00, 0x21000000, 0x08170104, 0x001bc0cb, 0xc1010100, 
    0xc8030005, 0x046c6d6c, 0xcb0103ff, 0xc8030001, 0x006cb06c, 0xcb0003ff, 
    0x15250101, 0x02b0b01b, 0xe0050102, 0xbc1f0005, 0x00c60041, 0x810103ff, 
    0xc80f0005, 0x006c0000, 0xab010205, 0xc80f0002, 0x00006c00, 0xeb050002, 
    0xc8010000, 0x001b1b00, 0xe1020100, 0x140e0001, 0x006c01c6, 0xe1000003, 
    0x0c180100, 0x006c1b1b, 0xe0000102, 0xc8070000, 0x00c0c0c0, 0xeb040201, 
    0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 
    0x4e4a0000, 0x81944407, 0x59ac8bd1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightKnockout.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowHighlightKnockout /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightKnockout.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2._w__, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.z, c0.zw
    mad r3.zw, -r2.z, r3.xxxy, c255.x
    mad r2.xz, r2.x, r3.yx, c255.x
    add_sat r4.xy, r3.zw, -r2.xz
  + subsc r2.x, c255.x, r2.y
    mul r3, r2.x, r1
    mul r2, r4.y, c3
    exece
    mad r2, r4.x, c2, r2
    mul r3.xyz, r3.xyz, r2.xyz
  + movs r0._, r3.w
    mul r1.xyz, r3.xyz, r1.w
  + muls_prev r1.w, r2.w
    mad oC0, r1.w, r0, r1

// PDB hint 4e4a0000-345a6ea6-eaa8f0aa

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowHighlightKnockout.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowHighlightKnockout[] =
{
    0x102a1100, 0x00000228, 0x000001fc, 0x00000024, 0x000000a0, 0x000001d4, 
    0x000001fc, 0x00000000, 0x00000000, 0x50c76f39, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f7748, 0x6967686c, 0x69676874, 0x4b6e6f63, 
    0x6b6f7574, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000130, 0x0000001c, 
    0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 
    0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 
    0x00020001, 0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 
    0x00000000, 0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 
    0x00000110, 0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 
    0x00020005, 0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 
    0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 
    0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000001bc, 0x10000400, 0x00000004, 0x00000000, 
    0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 
    0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 
    0x10000000, 0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 
    0xb0000000, 0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 
    0x12000000, 0x00004020, 0x00002200, 0x00000000, 0x14480202, 0x036c6c6c, 
    0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 
    0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 
    0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 
    0x66000200, 0x6c030003, 0x00b0b0c6, 0xe0040303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 
    0xa1020400, 0x10082041, 0x0f1fffdf, 0x00004000, 0x08410202, 0x04c61bcb, 
    0x01000000, 0xc80c0003, 0x04c6ac6c, 0xcb0203ff, 0xc8050002, 0x006c6d6c, 
    0xcb0203ff, 0xb9130204, 0x021ac441, 0xe00302ff, 0xc80f0003, 0x006c0000, 
    0xe1020100, 0xc80f0002, 0x00b10000, 0xa1040300, 0xc80f0002, 0x006c0000, 
    0xab040202, 0x14070003, 0x00c0c01b, 0xe1030203, 0x0c870101, 0x00c01b1b, 
    0xe1030102, 0xc80f8000, 0x001b0000, 0xeb010001, 0x4e4a0000, 0x345a6ea6, 
    0xeaa8f0aa
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightKnockoutMul.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowHighlightKnockoutMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowHighlightKnockoutMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2._w__, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.z, c0.zw
    mad r3.zw, -r2.z, r3.yyyx, c255.x
    mad r2.xz, r2.x, r3.xy, c255.x
    add_sat r4.xy, r3.zw, -r2.xz
  + subsc r2.x, c255.x, r2.y
    mul r3, r2.x, r1
    mul r2, r4.y, c3
    exec
    mad r2, r4.x, c2, r2
    mul r2, r3, r2
    mul r0, r2.w, r0
    add r0.w, r2.w, r0.w
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    exece
    mov oC0, r0

// PDB hint 4e4a0000-f7b9a642-c9a497e5

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowHighlightKnockoutMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowHighlightKnockoutMul[] =
{
    0x102a1100, 0x0000022c, 0x00000220, 0x00000024, 0x000000a4, 0x000001d8, 
    0x00000200, 0x00000000, 0x00000000, 0x50c76f39, 0x00000075, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f7748, 0x6967686c, 0x69676874, 0x4b6e6f63, 
    0x6b6f7574, 0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000130, 
    0x0000001c, 0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 
    0x0000011d, 0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 0x00000000, 
    0x000000d4, 0x00020001, 0x00010000, 0x000000c4, 0x00000000, 0x000000db, 
    0x00020002, 0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 0x00010000, 
    0x000000f4, 0x00000000, 0x00000104, 0x00020004, 0x00010000, 0x000000c4, 
    0x00000000, 0x00000110, 0x00030001, 0x00010000, 0x000000f4, 0x00000000, 
    0x00000114, 0x00020005, 0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 
    0x65740073, 0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 
    0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 
    0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000001e0, 0x10000400, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002008, 
    0x400a1000, 0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 
    0x20121200, 0x10000000, 0x00004004, 0x3014b000, 0x10000000, 0x00004002, 
    0x200bb000, 0xb0000000, 0x00001017, 0x20181200, 0x12000004, 0x00000000, 
    0x601ac400, 0x12000000, 0x00006020, 0x10261200, 0x22000000, 0x14480202, 
    0x036c6c6c, 0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 
    0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 
    0x001ab000, 0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 
    0x00b0b0b0, 0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 
    0x0f1fffdf, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 
    0x00b11b00, 0x66000200, 0x6c030003, 0x006db0c6, 0xe0040303, 0xb0400200, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 
    0x0000001b, 0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 
    0x00b0b000, 0xa1020400, 0x10082041, 0x0f1fffdf, 0x00004000, 0x08410202, 
    0x04c61bcb, 0x01000000, 0xc80c0003, 0x04c6716c, 0xcb0203ff, 0xc8050002, 
    0x006cb06c, 0xcb0203ff, 0xb9130204, 0x021ac441, 0xe00302ff, 0xc80f0003, 
    0x006c0000, 0xe1020100, 0xc80f0002, 0x00b10000, 0xa1040300, 0xc80f0002, 
    0x006c0000, 0xab040202, 0xc80f0002, 0x00000000, 0xe1030200, 0xc80f0000, 
    0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 0xe0020000, 0xc8070000, 
    0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 0xe1000000, 0xc80f8000, 
    0x00000000, 0xe2000000, 0x4e4a0000, 0xf7b9a642, 0xc9a497e5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlight.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowHighlight /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlight.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r5.x, -c0.z, c0.w
    mul r4, r2.w, r1
  + muls r1.x, c0.zw
    mad r3.zw, -r1.x, r3.xxxy, c255.x
    mad r1.xy, r5.x, r3.yx, c255.x
    add_sat r1.xy, r3.wz, -r1.yx
    subsc r3.x, c255.x, r1.y
    exec
    add r3.x, r3.x, -r1.x
    mul r2, r3.x, r2
    mad r2, r1.x, c3, r2
    mad r2, r1.y, c2, r2
    mul r3.xyz, r4.xyz, r2.xyz
  + movs r0._, r4.w
    mul r1.xyz, r3.xyz, r1.w
  + muls_prev r1.w, r2.w
    exece
    mad oC0, r1.w, r0, r1

// PDB hint 4e4a0000-3320a7d8-ae86dc2c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowHighlight.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowHighlight[] =
{
    0x102a1100, 0x00000224, 0x00000220, 0x00000024, 0x0000009c, 0x000001d0, 
    0x000001f8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006f, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x48696768, 0x6c696768, 
    0x742e686c, 0x736c2e75, 0x70646200, 0x00000130, 0x0000001c, 0x00000124, 
    0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 0x000000bc, 
    0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 0x00020001, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 0x000000c4, 
    0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 0x00000000, 
    0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 0x00000110, 
    0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 0x00020005, 
    0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 
    0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001e0, 0x10000500, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 0xb0000000, 
    0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 0x10000000, 
    0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 0xb0000000, 
    0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 0x12000000, 
    0x00006020, 0x10261200, 0x22000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 
    0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 0xab040502, 
    0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 
    0x6c030003, 0x00b0b0c6, 0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 0xa1020400, 
    0x10082041, 0x0f1ff688, 0x00004000, 0xc8010005, 0x04c61b00, 0x21000000, 
    0x081f0104, 0x001b00cb, 0xc1020100, 0xc80c0003, 0x046cac6c, 0xcb0103ff, 
    0xc8030001, 0x006c6d6c, 0xcb0503ff, 0xc9030001, 0x02c76d00, 0xe0030100, 
    0xbc100300, 0x00000041, 0xc20000ff, 0xc8010003, 0x026c6c00, 0xe0030100, 
    0xc80f0002, 0x006c0000, 0xe1030200, 0xc80f0002, 0x006c0000, 0xab010302, 
    0xc80f0002, 0x00b10000, 0xab010202, 0x14070003, 0x00c0c01b, 0xe1040204, 
    0x0c870101, 0x00c01b1b, 0xe1030102, 0xc80f8000, 0x001b0000, 0xeb010001, 
    0x4e4a0000, 0x3320a7d8, 0xae86dc2c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightMul.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowHighlightMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r5.x, -c0.z, c0.w
    mul r4, r2.w, r1
  + muls r1.x, c0.zw
    mad r3.zw, -r1.x, r3.yyyx, c255.x
    mad r1.xy, r5.x, r3.xy, c255.x
    add_sat r1.xy, r3.wz, -r1.yx
    subsc r3.x, c255.x, r1.y
    exec
    add r3.x, r3.x, -r1.x
    mul r2, r3.x, r2
    mad r2, r1.x, c3, r2
    mad r2, r1.y, c2, r2
    mul r2, r4, r2
    mul r0, r2.w, r0
    exece
    add r0.w, r2.w, r0.w
    mad r0.xyz, r2.xyz, r1.w, r0.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-6678aad0-3e0946a5

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowHighlightMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowHighlightMul[] =
{
    0x102a1100, 0x00000228, 0x00000244, 0x00000024, 0x000000a0, 0x000001d4, 
    0x000001fc, 0x00000000, 0x00000000, 0x50c76f39, 0x00000072, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x48696768, 0x6c696768, 
    0x744d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000130, 0x0000001c, 
    0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 
    0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 
    0x00020001, 0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 
    0x00000000, 0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 
    0x00000110, 0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 
    0x00020005, 0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 
    0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 
    0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000204, 0x10000500, 0x00000004, 0x00000000, 
    0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 
    0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 
    0x10000000, 0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 
    0xb0000000, 0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 
    0x12000000, 0x00006020, 0x40261200, 0x22000000, 0x14480202, 0x036c6c6c, 
    0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 
    0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 
    0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 
    0x66000200, 0x6c030003, 0x006db0c6, 0xe0040303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 
    0xa1020400, 0x10082041, 0x0f1ff688, 0x00004000, 0xc8010005, 0x04c61b00, 
    0x21000000, 0x081f0104, 0x001b00cb, 0xc1020100, 0xc80c0003, 0x046c716c, 
    0xcb0103ff, 0xc8030001, 0x006cb06c, 0xcb0503ff, 0xc9030001, 0x02c76d00, 
    0xe0030100, 0xbc100300, 0x00000041, 0xc20000ff, 0xc8010003, 0x026c6c00, 
    0xe0030100, 0xc80f0002, 0x006c0000, 0xe1030200, 0xc80f0002, 0x006c0000, 
    0xab010302, 0xc80f0002, 0x00b10000, 0xab010202, 0xc80f0002, 0x00000000, 
    0xe1040200, 0xc80f0000, 0x001b0000, 0xe1020000, 0xc8080000, 0x001b1b00, 
    0xe0020000, 0xc8070000, 0x00c01bc0, 0xeb020100, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x6678aad0, 
    0x3e0946a5
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightKnockout.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowHighlightKnockout /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightKnockout.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=6
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r5, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.y, c0.zw
    mad r2.zw, -r2.y, r3.xxxy, c255.x
    mad r2.xy, r2.x, r3.yx, c255.x
    add_sat r2.xy, r2.wz, -r2.yx
    subsc r2.z, c255.x, r2.y
    add r2.z, r2.z, -r2.x
    exec
    mul r6, r2.z, r5
  + movs r0._, r0.x
    mul r4, r6.xzyw, r5.w
  + muls_prev r3.w, r1.w
    mad r6, r2.x, c3, r6
    mad r2, r2.y, c2, r6
    mad r2, r2, r5.w, -r4.xzyw
    mul r3.xyz, r1.w, r1.xyz
  + movs r0._, r2.w
    exece
    mul r2, r3, r2
  + muls_prev r0.x, r1.w
    mad oC0.yz, r0.x, r0.yyz, r2.yyz
    mad oC0.w, r0.x, r0.w, r0.x
    adds oC0.x, r2.xw

// PDB hint 4e4a0000-e6c71606-ad564101

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowHighlightKnockout.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowHighlightKnockout[] =
{
    0x102a1100, 0x0000022c, 0x00000244, 0x00000024, 0x000000a4, 0x000001d8, 
    0x00000200, 0x00000000, 0x00000000, 0x50c76f39, 0x00000077, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x48696768, 0x6c696768, 
    0x744b6e6f, 0x636b6f75, 0x742e686c, 0x736c2e75, 0x70646200, 0x00000130, 
    0x0000001c, 0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 
    0x0000011d, 0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 0x00000000, 
    0x000000d4, 0x00020001, 0x00010000, 0x000000c4, 0x00000000, 0x000000db, 
    0x00020002, 0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 0x00010000, 
    0x000000f4, 0x00000000, 0x00000104, 0x00020004, 0x00010000, 0x000000c4, 
    0x00000000, 0x00000110, 0x00030001, 0x00010000, 0x000000f4, 0x00000000, 
    0x00000114, 0x00020005, 0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 
    0x65740073, 0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 
    0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 
    0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 
    0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x00000204, 0x10000600, 0x00000004, 
    0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002008, 
    0x400a1000, 0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 
    0x20121200, 0x10000000, 0x00004004, 0x3014b000, 0x10000000, 0x00004002, 
    0x200bb000, 0xb0000000, 0x00001017, 0x20181200, 0x12000004, 0x00000000, 
    0x601ac400, 0x12000000, 0x00006020, 0x40261200, 0x22000000, 0x14480202, 
    0x036c6c6c, 0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 
    0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 
    0x001ab000, 0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 
    0x00b0b0b0, 0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 
    0x0f1fffdf, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 
    0x00b11b00, 0x66000200, 0x6c030003, 0x00b0b0c6, 0xe0040303, 0xb0400200, 
    0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 
    0x0000001b, 0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 
    0x00b0b000, 0xa1020400, 0x10085041, 0x0f1ff688, 0x00004000, 0x08210202, 
    0x04c61bcb, 0x01000000, 0xc80c0002, 0x04b1ac6c, 0xcb0203ff, 0xc8030002, 
    0x006c6d6c, 0xcb0203ff, 0xc9030002, 0x02c76d00, 0xe0020200, 0xb8400200, 
    0x00000041, 0xe20000ff, 0xc8040002, 0x02c66c00, 0xe0020200, 0x140f0006, 
    0x00c6006c, 0xe1020500, 0x0c8f0304, 0x00341b1b, 0xe1060501, 0xc80f0006, 
    0x006c0000, 0xab020306, 0xc80f0002, 0x00b10000, 0xab020206, 0xc80f0002, 
    0x01001b34, 0xeb020504, 0x14070003, 0x001bc01b, 0xe1010102, 0x0c1f0002, 
    0x0000001b, 0xe1030201, 0xc8068000, 0x006cc1c1, 0xeb000002, 0xc8088000, 
    0x006c1b6c, 0xeb000000, 0x00108000, 0x0000006b, 0xe2000002, 0x4e4a0000, 
    0xe6c71606, 0xad564101
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightKnockoutMul.hlsl.h
//    /Vn pBinary_X360_FBox2InnerShadowHighlightKnockoutMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2InnerShadowHighlightKnockoutMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=6
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r5, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.y, c0.zw
    mad r2.zw, -r2.y, r3.yyyx, c255.x
    mad r2.xy, r2.x, r3.xy, c255.x
    add_sat r2.xy, r2.wz, -r2.yx
    subsc r2.z, c255.x, r2.y
    add r2.z, r2.z, -r2.x
    exec
    mul r6, r2.z, r5
  + movs r0._, r0.x
    mul r4, r6.xzyw, r5.w
  + muls_prev r3.w, r1.w
    mad r6, r2.x, c3, r6
    mad r2, r2.y, c2, r6
    mad r2, r2, r5.w, -r4.xzyw
    mul r3.xyz, r1.w, r1.xyz
  + movs r0._, r2.w
    exece
    mul r2, r3, r2
  + muls_prev r0.x, r1.w
    mad r1.w, r0.x, r0.w, r0.x
    mad r0.yz, r0.x, r0.yyz, r2.yyz
    adds r0.x, r2.xw
    mul r1.xyz, r0.xyz, r1.w
    mov oC0, r1

// PDB hint 4e4a0000-f1a24a42-03f6b3a1

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2InnerShadowHighlightKnockoutMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2InnerShadowHighlightKnockoutMul[] =
{
    0x102a1100, 0x00000230, 0x0000025c, 0x00000024, 0x000000a8, 0x000001dc, 
    0x00000204, 0x00000000, 0x00000000, 0x50c76f39, 0x0000007a, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32496e6e, 0x65725368, 0x61646f77, 0x48696768, 0x6c696768, 
    0x744b6e6f, 0x636b6f75, 0x744d756c, 0x2e686c73, 0x6c2e7570, 0x64620000, 
    0x00000130, 0x0000001c, 0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 
    0x00000000, 0x0000011d, 0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 
    0x00000000, 0x000000d4, 0x00020001, 0x00010000, 0x000000c4, 0x00000000, 
    0x000000db, 0x00020002, 0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 
    0x00020003, 0x00010000, 0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 
    0x00010000, 0x000000f4, 0x00000000, 0x00000104, 0x00020004, 0x00010000, 
    0x000000c4, 0x00000000, 0x00000110, 0x00030001, 0x00010000, 0x000000f4, 
    0x00000000, 0x00000114, 0x00020005, 0x00010000, 0x000000c4, 0x00000000, 
    0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x6f666673, 0x65740073, 0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 
    0x63746578, 0x00ababab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 
    0x73726374, 0x65787363, 0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 
    0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x0000021c, 0x10000600, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 
    0x00002008, 0x400a1000, 0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 
    0x0940600c, 0x20121200, 0x10000000, 0x00004004, 0x3014b000, 0x10000000, 
    0x00004002, 0x200bb000, 0xb0000000, 0x00001017, 0x20181200, 0x12000004, 
    0x00000000, 0x601ac400, 0x12000000, 0x00006020, 0x60261200, 0x22000000, 
    0x14480202, 0x036c6c6c, 0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 
    0xc8040003, 0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 
    0xc8030004, 0x001ab000, 0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 
    0xc8030004, 0x00b0b0b0, 0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 
    0xb8184061, 0x0f1fffdf, 0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 
    0xc8040003, 0x00b11b00, 0x66000200, 0x6c030003, 0x006db0c6, 0xe0040303, 
    0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 
    0x6c000000, 0x0000001b, 0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 
    0xc8030002, 0x00b0b000, 0xa1020400, 0x10085041, 0x0f1ff688, 0x00004000, 
    0x08210202, 0x04c61bcb, 0x01000000, 0xc80c0002, 0x04b1716c, 0xcb0203ff, 
    0xc8030002, 0x006cb06c, 0xcb0203ff, 0xc9030002, 0x02c76d00, 0xe0020200, 
    0xb8400200, 0x00000041, 0xe20000ff, 0xc8040002, 0x02c66c00, 0xe0020200, 
    0x140f0006, 0x00c6006c, 0xe1020500, 0x0c8f0304, 0x00341b1b, 0xe1060501, 
    0xc80f0006, 0x006c0000, 0xab020306, 0xc80f0002, 0x00b10000, 0xab020206, 
    0xc80f0002, 0x01001b34, 0xeb020504, 0x14070003, 0x001bc01b, 0xe1010102, 
    0x0c1f0002, 0x0000001b, 0xe1030201, 0xc8080001, 0x006c1b6c, 0xeb000000, 
    0xc8060000, 0x006cc1c1, 0xeb000002, 0x00100000, 0x0000006b, 0xe2000002, 
    0xc8070001, 0x00c01b00, 0xe1000100, 0xc80f8000, 0x00000000, 0xe2010100, 
    0x4e4a0000, 0xf1a24a42, 0x03f6b3a1
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2FullShadowHighlight.hlsl.h
//    /Vn pBinary_X360_FBox2FullShadowHighlight /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2FullShadowHighlight.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r4, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.y, c0.zw
    mad r2.zw, -r2.y, r3.xxxy, c255.x
    mad r2.xy, r2.x, r3.yx, c255.x
    add_sat r2.xy, r2.wz, -r2.yx
    subsc r2.z, c255.x, r2.y
    add r2.z, r2.z, -r2.x
  + movs r0._, r0.x
    exec
    mul r3, r2.z, r4
  + muls_prev r0.x, r1.w
    mad r3, r2.x, c3, r3
    mad r3, r2.y, c2, r3
    mul r2.x, r0.x, r3.w
    mul r1.xyz, r1.w, r1.xyz
  + movs r0._, r3.w
    mul r3.xyz, r1.xyz, r3.xyz
  + muls_prev r3.w, r1.w
    exece
    mul r2.yzw, r3.w, r0.yyzw
    add oC0, r3, r2

// PDB hint 4e4a0000-87a023f1-cb34f08c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2FullShadowHighlight.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2FullShadowHighlight[] =
{
    0x102a1100, 0x00000224, 0x0000022c, 0x00000024, 0x0000009c, 0x000001d0, 
    0x000001f8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x3246756c, 0x6c536861, 0x646f7748, 0x6967686c, 0x69676874, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000130, 0x0000001c, 0x00000124, 
    0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 0x000000bc, 
    0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 0x00020001, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 0x000000c4, 
    0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 0x00000000, 
    0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 0x00000110, 
    0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 0x00020005, 
    0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 0x636f6c6f, 
    0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 0x616c6500, 
    0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 
    0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000001ec, 0x10000400, 0x00000004, 0x00000000, 0x00002863, 
    0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 0xb0000000, 
    0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 0x10000000, 
    0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 0xb0000000, 
    0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 0x12000000, 
    0x00006020, 0x20261200, 0x22000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 
    0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 0xab040502, 
    0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 
    0x6c030003, 0x00b0b0c6, 0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 0xa1020400, 
    0x10084041, 0x0f1ff688, 0x00004000, 0x08210202, 0x04c61bcb, 0x01000000, 
    0xc80c0002, 0x04b1ac6c, 0xcb0203ff, 0xc8030002, 0x006c6d6c, 0xcb0203ff, 
    0xc9030002, 0x02c76d00, 0xe0020200, 0xb8400200, 0x00000041, 0xe20000ff, 
    0x14040002, 0x02c66c6c, 0xe0020200, 0x0c1f0003, 0x00c6001b, 0xe1020401, 
    0xc80f0003, 0x006c0000, 0xab020303, 0xc80f0003, 0x00b10000, 0xab020203, 
    0xc8010002, 0x006c1b00, 0xe1000300, 0x14070001, 0x001bc01b, 0xe1010103, 
    0x0c870303, 0x00c0c01b, 0xe1010301, 0xc80e0002, 0x001b0100, 0xe1030000, 
    0xc80f8000, 0x00000000, 0xe0030200, 0x4e4a0000, 0x87a023f1, 0xcb34f08c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2FullShadowHighlightMul.hlsl.h
//    /Vn pBinary_X360_FBox2FullShadowHighlightMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2FullShadowHighlightMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const srctexscale, float, vector, [1, 4], c4
defextern const tex, sampler2d, object, [1, 1], s1
defextern const texscale, float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c5.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c5.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf1, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf1, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    exec
    mul r2.xy, r2.xy, c4.xy
    tfetch2D r2, r2.xy, tf0, UseComputedLOD=false
    alloc colors
    exec
    mul r4.w, -c0.z, c0.w
    mul r4.xyz, r1.w, r1.xyz
  + muls r1.x, c0.zw
    mad r3.zw, -r1.x, r3.yyyx, c255.x
    mad r1.xy, r4.w, r3.xy, c255.x
    add_sat r1.xy, r3.wz, -r1.yx
    subsc r1.z, c255.x, r1.y
    exec
    add r1.z, r1.z, -r1.x
    mul r2, r1.z, r2
  + movs r0._, r0.x
    mad r2, r1.x, c3, r2
    mad r2, r1.y, c2, r2
    mul r0.x, r2.w, r1.w
  + muls_prev r1.x, r1.w
    mul r1.yzw, r0.x, r0.yyzw
  + movs r0._, r1.x
    exece
    add r0.w, r0.x, r1.w
  + muls_prev r1.x, r2.w
    mad r0.xyz, r4.xyz, r2.xyz, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    mov oC0, r0

// PDB hint 4e4a0000-c55f1172-09bed86f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2FullShadowHighlightMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2FullShadowHighlightMul[] =
{
    0x102a1100, 0x00000228, 0x00000244, 0x00000024, 0x000000a0, 0x000001d4, 
    0x000001fc, 0x00000000, 0x00000000, 0x50c76f39, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x3246756c, 0x6c536861, 0x646f7748, 0x6967686c, 0x69676874, 
    0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x00000130, 0x0000001c, 
    0x00000124, 0xffff0300, 0x00000008, 0x0000001c, 0x00000000, 0x0000011d, 
    0x000000bc, 0x00020000, 0x00010000, 0x000000c4, 0x00000000, 0x000000d4, 
    0x00020001, 0x00010000, 0x000000c4, 0x00000000, 0x000000db, 0x00020002, 
    0x00010000, 0x000000c4, 0x00000000, 0x000000e2, 0x00020003, 0x00010000, 
    0x000000c4, 0x00000000, 0x000000ea, 0x00030000, 0x00010000, 0x000000f4, 
    0x00000000, 0x00000104, 0x00020004, 0x00010000, 0x000000c4, 0x00000000, 
    0x00000110, 0x00030001, 0x00010000, 0x000000f4, 0x00000000, 0x00000114, 
    0x00020005, 0x00010000, 0x000000c4, 0x00000000, 0x6673697a, 0x6500abab, 
    0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 0x65740073, 
    0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007372, 0x63746578, 0x00ababab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x73726374, 0x65787363, 
    0x616c6500, 0x74657800, 0x74657873, 0x63616c65, 0x0070735f, 0x335f3000, 
    0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000204, 0x10000400, 0x00000004, 0x00000000, 
    0x00002863, 0x00070007, 0x00000001, 0x0000f050, 0x0000f151, 0x00003252, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00002008, 0x400a1000, 
    0xb0000000, 0x0000200a, 0x40071000, 0xb0000000, 0x0940600c, 0x20121200, 
    0x10000000, 0x00004004, 0x3014b000, 0x10000000, 0x00004002, 0x200bb000, 
    0xb0000000, 0x00001017, 0x20181200, 0x12000004, 0x00000000, 0x601ac400, 
    0x12000000, 0x00006020, 0x40261200, 0x22000000, 0x14480202, 0x036c6c6c, 
    0x06000000, 0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 
    0x26000000, 0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 
    0xa0020100, 0xc80c0003, 0x04acacac, 0xab040502, 0xc8030004, 0x00b0b0b0, 
    0xab040502, 0x10184081, 0x0f1ffffb, 0x00004000, 0xb8184061, 0x0f1fffdf, 
    0x00004000, 0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 
    0x66000200, 0x6c030003, 0x006db0c6, 0xe0040303, 0xb0400200, 0x00000042, 
    0xe20000ff, 0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 
    0xe2000002, 0xc8030003, 0x046cb100, 0xa580ff00, 0xc8030002, 0x00b0b000, 
    0xa1020400, 0x10082041, 0x0f1ff688, 0x00004000, 0xc8080004, 0x04c61b00, 
    0x21000000, 0x08170104, 0x001bc0cb, 0xc1010100, 0xc80c0003, 0x046c716c, 
    0xcb0103ff, 0xc8030001, 0x001bb06c, 0xcb0403ff, 0xc9030001, 0x02c76d00, 
    0xe0030100, 0xbc400100, 0x00000041, 0xc20000ff, 0xc8040001, 0x02c66c00, 
    0xe0010100, 0x140f0002, 0x00c6006c, 0xe1010200, 0xc80f0002, 0x006c0000, 
    0xab010302, 0xc80f0002, 0x00b10000, 0xab010202, 0x0c110100, 0x001b1b1b, 
    0xe1020101, 0x140e0001, 0x006c016c, 0xe1000001, 0x0c180100, 0x006c1b1b, 
    0xe0000102, 0xc8070000, 0x00c0c0c0, 0xeb040201, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0xc55f1172, 
    0x09bed86f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyHighlight.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowonlyHighlight /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyHighlight.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   texscale     c4       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c4.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c4.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf0, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.xy, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    alloc colors
    exec
    mul r2.x, -c0.z, c0.w
  + muls r2.y, c0.zw
    mad r2.zw, -r2.y, r3.xxxy, c255.x
    mad r2.xy, r2.x, r3.yx, c255.x
    add_sat r3.xy, r2.zw, -r2.xy
  + movs r0._, r0.x
    mul r2, r3.y, c3
  + muls_prev r0.x, r1.w
    mad r3, r3.x, c2, r2
    exece
    mul r2.x, r0.x, r3.w
    mul r1.xyz, r1.w, r1.xyz
  + movs r0._, r3.w
    mul r3.xyz, r1.xyz, r3.xyz
  + muls_prev r3.w, r1.w
    mul r2.yzw, r3.w, r0.yyzw
    add oC0, r3, r2

// PDB hint 4e4a0000-17549af7-d162790d

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowonlyHighlight.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowonlyHighlight[] =
{
    0x102a1100, 0x000001e8, 0x000001e4, 0x00000024, 0x0000009c, 0x00000194, 
    0x000001bc, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f776f, 0x6e6c7948, 0x6967686c, 0x69676874, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x000000f4, 0x0000001c, 0x000000e8, 
    0xffff0300, 0x00000006, 0x0000001c, 0x00000000, 0x000000e1, 0x00000094, 
    0x00020000, 0x00010000, 0x0000009c, 0x00000000, 0x000000ac, 0x00020001, 
    0x00010000, 0x0000009c, 0x00000000, 0x000000b3, 0x00020002, 0x00010000, 
    0x0000009c, 0x00000000, 0x000000ba, 0x00020003, 0x00010000, 0x0000009c, 
    0x00000000, 0x000000c2, 0x00030000, 0x00010000, 0x000000c8, 0x00000000, 
    0x000000d8, 0x00020004, 0x00010000, 0x0000009c, 0x00000000, 0x6673697a, 
    0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 0x6f666673, 
    0x65740073, 0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007465, 0x7800abab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x74657873, 0x63616c65, 
    0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001a4, 0x10000400, 
    0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 0x0000f050, 
    0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 
    0x00002007, 0x400a1000, 0xb0000000, 0x00002009, 0x40071000, 0xb0000000, 
    0x0940600b, 0x20111200, 0x10000000, 0x00004004, 0x3013b000, 0x10000000, 
    0x00004002, 0x200bb000, 0xb0000000, 0x00001016, 0x00001200, 0xc4000000, 
    0x00006017, 0x501d1200, 0x22000000, 0x14480202, 0x036c6c6c, 0x06000000, 
    0x70030003, 0x046cb11b, 0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 
    0x70080002, 0x06b1b1c6, 0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 
    0xc80c0003, 0x04acacac, 0xab040402, 0xc8030004, 0x00b0b0b0, 0xab040402, 
    0x10084081, 0x0f1ffffb, 0x00004000, 0xb8084061, 0x0f1fffdf, 0x00004000, 
    0xb0800200, 0x00000043, 0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 
    0x6c030003, 0x00b0b0c6, 0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 
    0xc8080002, 0x006cc600, 0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 
    0xc8030003, 0x046cb100, 0xa580ff00, 0x08210202, 0x04c61bcb, 0x01000000, 
    0xc80c0002, 0x04b1ac6c, 0xcb0203ff, 0xc8030002, 0x006c6d6c, 0xcb0203ff, 
    0x15030003, 0x021ab06c, 0xe0020200, 0x0c1f0002, 0x00b1001b, 0xa1030301, 
    0xc80f0003, 0x006c0000, 0xab030202, 0xc8010002, 0x006c1b00, 0xe1000300, 
    0x14070001, 0x001bc01b, 0xe1010103, 0x0c870303, 0x00c0c01b, 0xe1010301, 
    0xc80e0002, 0x001b0100, 0xe1030000, 0xc80f8000, 0x00000000, 0xe0030200, 
    0x4e4a0000, 0x17549af7, 0xd162790d
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyHighlightMul.hlsl.h
//    /Vn pBinary_X360_FBox2ShadowonlyHighlightMul /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FBox2ShadowonlyHighlightMul.hlsl
//
//
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   texscale     c4       1
//   tex          s0       1
//

// Shader type: pixel 

xps_3_0
defextern const fsize, float, vector, [1, 4], c0
defextern const offset, float, vector, [1, 4], c1
defextern const scolor, float, vector, [1, 4], c2
defextern const scolor2, float, vector, [1, 4], c3
defextern const tex, sampler2d, object, [1, 1], s0
defextern const texscale, float, vector, [1, 4], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec    // PredicateClean=false
    sge r2.w, c0.x, -c0.x
  + movs r2.z, -c0.x
    sgt r3.xy, -r0_abs.x, c255.y
  + setp_ne r0._, r2.w
(!p0) jmp L10
label L2
    exec    // PredicateClean=false
    sge r3.z, c0.y, -c0.y
    mov r2.w, -c0.y
  + setp_ne r0._, r3.z
(!p0) jmp L7
label L4
    exec
    add r4.xy, r2.zw, c1.xy
    mad r3.zw, -r4.xxxy, c4.xxxy, r2.xxxy
    mad r4.xy, r4.xy, c4.xy, r2.xy
    tfetch2D r4.w___, r4.xy, tf0, UseComputedLOD=false
    tfetch2D r4._w__, r3.zw, tf0, UseComputedLOD=false
    serialize
    addsc r2.w, c255.x, r2.w
    exec    // PredicateClean=false
    sge r3.z, c0.y, r2.w
    add r3.xy, r4.yx, r3.xy
  + setp_eq r0._, r3.z
(!p0) jmp L4
label L7
    exec    // PredicateClean=false
    addsc r2.z, c255.x, r2.z
    sge r2.w, c0.x, r2.z
    setp_eq r0._, r2.w
(!p0) jmp L2
    jmp L11
label L10
    exec
    sgt r3.xy, -r0_abs.x, c255.y
label L11
    alloc colors
    exec
    mul r2.z, -c0.z, c0.w
    mul r4.xyz, r1.w, r1.xyz
  + muls r1.x, c0.zw
    mad r2.xy, -r1.x, r3.yx, c255.x
    mad r1.xy, r2.z, r3.xy, c255.x
    add_sat r1.xy, r2.xy, -r1.xy
    mul r2, r1.y, c3
  + movs r0._, r0.x
    exec
    mad r2, r1.x, c2, r2
    mul r0.x, r2.w, r1.w
  + muls_prev r1.x, r1.w
    mul r1.yzw, r0.x, r0.yyzw
  + movs r0._, r1.x
    add r0.w, r0.x, r1.w
  + muls_prev r1.x, r2.w
    mad r0.xyz, r4.xyz, r2.xyz, r1.xyz
    mul r0.xyz, r0.xyz, r0.w
    exece
    mov oC0, r0

// PDB hint 4e4a0000-61c1f855-486c6141

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FBox2ShadowonlyHighlightMul.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FBox2ShadowonlyHighlightMul[] =
{
    0x102a1100, 0x000001ec, 0x00000208, 0x00000024, 0x000000a0, 0x00000198, 
    0x000001c0, 0x00000000, 0x00000000, 0x50c76f39, 0x00000071, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46426f78, 0x32536861, 0x646f776f, 0x6e6c7948, 0x6967686c, 0x69676874, 
    0x4d756c2e, 0x686c736c, 0x2e757064, 0x62000000, 0x000000f4, 0x0000001c, 
    0x000000e8, 0xffff0300, 0x00000006, 0x0000001c, 0x00000000, 0x000000e1, 
    0x00000094, 0x00020000, 0x00010000, 0x0000009c, 0x00000000, 0x000000ac, 
    0x00020001, 0x00010000, 0x0000009c, 0x00000000, 0x000000b3, 0x00020002, 
    0x00010000, 0x0000009c, 0x00000000, 0x000000ba, 0x00020003, 0x00010000, 
    0x0000009c, 0x00000000, 0x000000c2, 0x00030000, 0x00010000, 0x000000c8, 
    0x00000000, 0x000000d8, 0x00020004, 0x00010000, 0x0000009c, 0x00000000, 
    0x6673697a, 0x6500abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x6f666673, 0x65740073, 0x636f6c6f, 0x72007363, 0x6f6c6f72, 0x32007465, 
    0x7800abab, 0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x74657873, 
    0x63616c65, 0x0070735f, 0x335f3000, 0x322e302e, 0x32313131, 0x392e3000, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000001c8, 
    0x10000400, 0x00000004, 0x00000000, 0x00002863, 0x00070007, 0x00000001, 
    0x0000f050, 0x0000f151, 0x00003252, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 
    0x00000000, 0x00002008, 0x400a1000, 0xb0000000, 0x0000200a, 0x40071000, 
    0xb0000000, 0x0940600c, 0x20121200, 0x10000000, 0x00004004, 0x3014b000, 
    0x10000000, 0x00004002, 0x200bb000, 0xb0000000, 0x00001017, 0x00001200, 
    0xc4000000, 0x00006018, 0x601e1200, 0x12000000, 0x00001024, 0x00002200, 
    0x00000000, 0x14480202, 0x036c6c6c, 0x06000000, 0x70030003, 0x046cb11b, 
    0xa580ff02, 0xc8040003, 0x02b1b100, 0x26000000, 0x70080002, 0x06b1b1c6, 
    0x22000003, 0xc8030004, 0x001ab000, 0xa0020100, 0xc80c0003, 0x04acacac, 
    0xab040402, 0xc8030004, 0x00b0b0b0, 0xab040402, 0x10084081, 0x0f1ffffb, 
    0x00004000, 0xb8084061, 0x0f1fffdf, 0x00004000, 0xb0800200, 0x00000043, 
    0xe20000ff, 0xc8040003, 0x00b11b00, 0x66000200, 0x6c030003, 0x006db0c6, 
    0xe0040303, 0xb0400200, 0x00000042, 0xe20000ff, 0xc8080002, 0x006cc600, 
    0x66000200, 0x6c000000, 0x0000001b, 0xe2000002, 0xc8030003, 0x046cb100, 
    0xa580ff00, 0xc8040002, 0x04c61b00, 0x21000000, 0x08170104, 0x001bc0cb, 
    0xc1010100, 0xc8030002, 0x046c6d6c, 0xcb0103ff, 0xc8030001, 0x00c6b06c, 
    0xcb0203ff, 0xc9030001, 0x02b0b000, 0xe0020100, 0x140f0002, 0x00b1006c, 
    0xa1010300, 0xc80f0002, 0x006c0000, 0xab010202, 0x0c110100, 0x001b1b1b, 
    0xe1020101, 0x140e0001, 0x006c016c, 0xe1000001, 0x0c180100, 0x006c1b1b, 
    0xe0000102, 0xc8070000, 0x00c0c0c0, 0xeb040201, 0xc8070000, 0x00c01b00, 
    0xe1000000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x61c1f855, 
    0x486c6141
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VDrawableCopyPixels.hlsl.h /Vn
//    pBinary_X360_VDrawableCopyPixels /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VDrawableCopyPixels.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       4
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
defextern const texgen[2], float, vector, [1, 4], c4
defextern const texgen[3], float, vector, [1, 4], c5
config AutoSerialize=false
config AutoResource=false
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy
    dp4 o1.x, r0.wzxy, c4.wzxy
    dp4 o1.y, r0.wzxy, c5.wzxy

// PDB hint 4e4a0000-309cd147-21b8469f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VDrawableCopyPixels.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VDrawableCopyPixels[] =
{
    0x102a1101, 0x00000164, 0x00000084, 0x00000024, 0x00000098, 0x00000000, 
    0x00000120, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c732e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000084, 0x0000001c, 0x00000077, 0xfffe0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x00000070, 0x00000044, 0x00020000, 
    0x00020000, 0x00000048, 0x00000000, 0x00000058, 0x00020002, 0x00040000, 
    0x00000060, 0x00000000, 0x6d767000, 0x00010003, 0x00010004, 0x00020000, 
    0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 0x00040000, 
    0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000084, 0x00110000, 0x00000000, 0x00000000, 0x00001042, 
    0x00000001, 0x00000001, 0x00000004, 0x00000290, 0x00000003, 0x00003050, 
    0x00023151, 0x00000006, 0x00001007, 0x00000008, 0x00001009, 0x10011003, 
    0x00001200, 0xc2000000, 0x00002004, 0x00001200, 0xc4000000, 0x00004006, 
    0x00002200, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 
    0x00a7a700, 0xaf000000, 0xc802803e, 0x00a7a700, 0xaf000100, 0xc8018000, 
    0x00a7a700, 0xaf000200, 0xc8028000, 0x00a7a700, 0xaf000300, 0xc8018001, 
    0x00a7a700, 0xaf000400, 0xc8028001, 0x00a7a700, 0xaf000500, 0x4e4a0000, 
    0x309cd147, 0x21b8469f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixels.hlsl.h /Vn
//    pBinary_X360_FDrawableCopyPixels /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixels.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=1
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy


    exec
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exece
    mov oC0, r0

// PDB hint 4e4a0000-feba5471-6b43829e

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixels.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixels[] =
{
    0x102a1100, 0x0000011c, 0x0000003c, 0x00000024, 0x00000098, 0x00000000, 
    0x000000f4, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c732e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 
    0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 
    0x00020000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 
    0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000003c, 0x10000100, 0x00000004, 0x00000000, 
    0x00001042, 0x00030003, 0x00000001, 0x00003050, 0x00003151, 0x00011002, 
    0x00001200, 0xc4000000, 0x00001003, 0x00002200, 0x00000000, 0x10180021, 
    0x1f1ff688, 0x00004000, 0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 
    0xfeba5471, 0x6b43829e
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsMergeAlpha.hlsl.h
//    /Vn pBinary_X360_FDrawableCopyPixelsMergeAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsMergeAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec
    tfetch2D r0, r0.xy, tf0
    tfetch2D r1, r1.xy, tf1
    alloc colors
    exece
    subsc r2.x, c255.x, r1.w
    mad r0.w, r2.x, r0.w, r1.w
    add r1.xyz, r1.xyz, -r0.xyz
  + rcp r2.x, r0.w
    mul r1.w, r2.x, r1.w
    mad r0.xyz, r1.w, r1.xyz, r0.xyz
    mov oC0, r0

// PDB hint 4e4a0000-7fbf491a-98c60639

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixelsMergeAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixelsMergeAlpha[] =
{
    0x102a1100, 0x0000014c, 0x000000c4, 0x00000024, 0x000000a0, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f39, 0x00000073, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c734d, 0x65726765, 
    0x416c7068, 0x612e686c, 0x736c2e75, 0x70646200, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000084, 0x10000200, 0x00000004, 0x00000000, 
    0x00001042, 0x00030003, 0x00000001, 0x00003050, 0x00003151, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00052002, 0x00001200, 0xc4000000, 
    0x00006004, 0x00002200, 0x00000000, 0x10080001, 0x1f1ff688, 0x00004000, 
    0x10181021, 0x1f1ff688, 0x00004000, 0xbc100200, 0x00000043, 0xc20000ff, 
    0xc8080000, 0x006c1b1b, 0xeb020001, 0x4c170201, 0x02c0c01b, 0xe0010000, 
    0xc8080001, 0x006c1b00, 0xe1020100, 0xc8070000, 0x001bc0c0, 0xeb010100, 
    0xc80f8000, 0x00000000, 0xe2000000, 0x4e4a0000, 0x7fbf491a, 0x98c60639
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsNoDestAlpha.hlsl.h
//    /Vn pBinary_X360_FDrawableCopyPixelsNoDestAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsNoDestAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy


    exec
    tfetch2D r1, r1.xy, tf1
    tfetch2D r0.xyz_, r0.xy, tf0
    alloc colors
    exece
    add r2.xyz, r1.xyz, -r0.xyz
    mad oC0.xyz1, r2.xyz, r1.w, r0.xyz

// PDB hint 4e4a0000-b346a806-be2bf23b

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixelsNoDestAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixelsNoDestAlpha[] =
{
    0x102a1100, 0x00000124, 0x00000054, 0x00000024, 0x000000a0, 0x00000000, 
    0x000000fc, 0x00000000, 0x00000000, 0x50c76f39, 0x00000074, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c734e, 0x6f446573, 
    0x74416c70, 0x68612e68, 0x6c736c2e, 0x75706462, 0x00000058, 0x0000001c, 
    0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 
    0x00000030, 0x00030000, 0x00020000, 0x00000034, 0x00000000, 0x74657800, 
    0x0004000c, 0x00010001, 0x00020000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000054, 0x10000200, 
    0x00000004, 0x00000000, 0x00001042, 0x00030003, 0x00000001, 0x00003050, 
    0x00003151, 0x00052002, 0x00001200, 0xc4000000, 0x00002004, 0x00002200, 
    0x00000000, 0x10181021, 0x1f1ff688, 0x00004000, 0x10080001, 0x1f1ffe88, 
    0x00004000, 0xc8070002, 0x02c0c000, 0xe0010000, 0xc88fc000, 0x00c01bc0, 
    0xeb020100, 0x4e4a0000, 0xb346a806, 0xbe2bf23b
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T vs_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VDrawableCopyPixelsAlpha.hlsl.h
//    /Vn pBinary_X360_VDrawableCopyPixelsAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\VDrawableCopyPixelsAlpha.hlsl
//
//
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[6];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       6
//

// Shader type: vertex 

xvs_3_0
defextern const mvp[0], float, vector, [1, 4], c0
defextern const mvp[1], float, vector, [1, 4], c1
defextern const texgen[0], float, vector, [1, 4], c2
defextern const texgen[1], float, vector, [1, 4], c3
defextern const texgen[2], float, vector, [1, 4], c4
defextern const texgen[3], float, vector, [1, 4], c5
defextern const texgen[4], float, vector, [1, 4], c6
defextern const texgen[5], float, vector, [1, 4], c7
config AutoSerialize=false
config AutoResource=false
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1.xy
dcl_texcoord2 o2.xy


    exec
    vfetch r0, r0.x, position
    alloc position
    exec
    dp4 oPos.x001, r0.wzxy, c0.wzxy
    dp4 oPos.y, r0.wzxy, c1.wzxy
    alloc interpolators
    exece
    dp4 o0.x, r0.wzxy, c2.wzxy
    dp4 o0.y, r0.wzxy, c3.wzxy
    dp4 o1.x, r0.wzxy, c4.wzxy
    dp4 o1.y, r0.wzxy, c5.wzxy
    dp4 o2.x, r0.wzxy, c6.wzxy
    dp4 o2.y, r0.wzxy, c7.wzxy

// PDB hint 4e4a0000-acc703c8-42acde0f

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\VDrawableCopyPixelsAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_VDrawableCopyPixelsAlpha[] =
{
    0x102a1101, 0x00000174, 0x0000009c, 0x00000024, 0x0000009c, 0x00000000, 
    0x00000124, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x56447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c7341, 0x6c706861, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000084, 0x0000001c, 0x00000077, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x00000070, 0x00000044, 
    0x00020000, 0x00020000, 0x00000048, 0x00000000, 0x00000058, 0x00020002, 
    0x00060000, 0x00000060, 0x00000000, 0x6d767000, 0x00010003, 0x00010004, 
    0x00020000, 0x00000000, 0x74657867, 0x656e00ab, 0x00010003, 0x00010004, 
    0x00060000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x31313139, 
    0x2e3000ab, 0x00000000, 0x0000009c, 0x00210000, 0x00000000, 0x00000000, 
    0x00001863, 0x00000001, 0x00000001, 0x00000006, 0x00000290, 0x00000003, 
    0x00003050, 0x00023151, 0x00043252, 0x00000006, 0x00001007, 0x00000008, 
    0x00001009, 0x0000000a, 0x0000100b, 0x10011003, 0x00001200, 0xc2000000, 
    0x00002004, 0x00001200, 0xc4000000, 0x00006006, 0x00002200, 0x00000000, 
    0x05f80000, 0x00000688, 0x00000000, 0xc889c03e, 0x00a7a700, 0xaf000000, 
    0xc802803e, 0x00a7a700, 0xaf000100, 0xc8018000, 0x00a7a700, 0xaf000200, 
    0xc8028000, 0x00a7a700, 0xaf000300, 0xc8018001, 0x00a7a700, 0xaf000400, 
    0xc8028001, 0x00a7a700, 0xaf000500, 0xc8018002, 0x00a7a700, 0xaf000600, 
    0xc8028002, 0x00a7a700, 0xaf000700, 0x4e4a0000, 0xacc703c8, 0x42acde0f
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlpha.hlsl.h
//    /Vn pBinary_X360_FDrawableCopyPixelsAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_texcoord2 r2.xy


    exec
    tfetch2D r1, r1.xy, tf1
    tfetch2D r0.1w__, r2.xy, tf2
    alloc colors
    exece
    mul oC0, r1, r0.xxxy

// PDB hint 4e4a0000-53f40a42-d72b02a7

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixelsAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixelsAlpha[] =
{
    0x102a1100, 0x00000124, 0x00000048, 0x00000024, 0x0000009c, 0x00000000, 
    0x000000f8, 0x00000000, 0x00000000, 0x50c76f39, 0x0000006e, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c7341, 0x6c706861, 
    0x2e686c73, 0x6c2e7570, 0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00030000, 0x00000034, 0x00000000, 0x74657800, 0x0004000c, 
    0x00010001, 0x00030000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000048, 0x10000200, 0x00000004, 
    0x00000000, 0x00001863, 0x00070007, 0x00000001, 0x00003050, 0x00003151, 
    0x00003252, 0x00052002, 0x00001200, 0xc4000000, 0x00001004, 0x00002200, 
    0x00000000, 0x10181021, 0x1f1ff688, 0x00004000, 0x10280041, 0x1f1fffdd, 
    0x00004000, 0xc80f8000, 0x0000ac00, 0xe1010000, 0x4e4a0000, 0x53f40a42, 
    0xd72b02a7
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlphaMergeAlpha.hlsl.h
//    /Vn pBinary_X360_FDrawableCopyPixelsAlphaMergeAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlphaMergeAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_texcoord2 r2.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec
    tfetch2D r3, r0.xy, tf0
    tfetch2D r0.xwyz, r1.xy, tf1
    tfetch2D r1.w___, r2.xy, tf2
    alloc colors
    exec
    mul r0.y, r0.y, r1.x
    subsc r1.x, c255.x, r0.y
    mad r1.w, r1.x, r3.w, r0.y
    add r0.xzw, r0.xzzw, -r3.xyyz
  + rcp r1.x, r1.w
    mul r0.y, r0.y, r1.x
    mad r1.xyz, r0.y, r0.xzw, r3.xyz
    exece
    mov oC0, r1

// PDB hint 4e4a0000-c09c42a2-a22bd720

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixelsAlphaMergeAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixelsAlphaMergeAlpha[] =
{
    0x102a1100, 0x00000154, 0x000000dc, 0x00000024, 0x000000a4, 0x00000100, 
    0x00000128, 0x00000000, 0x00000000, 0x50c76f39, 0x00000078, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c7341, 0x6c706861, 
    0x4d657267, 0x65416c70, 0x68612e68, 0x6c736c2e, 0x75706462, 0x00000058, 
    0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 
    0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 0x00000000, 
    0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 0x70735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x0000009c, 0x10000300, 0x00000004, 
    0x00000000, 0x00001863, 0x00070007, 0x00000001, 0x00003050, 0x00003151, 
    0x00003252, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x00153002, 
    0x00001200, 0xc4000000, 0x00006005, 0x100b1200, 0x22000000, 0x10083001, 
    0x1f1ff688, 0x00004000, 0x10180021, 0x1f1ff458, 0x00004000, 0x10281041, 
    0x1f1ffffb, 0x00004000, 0xc8020000, 0x00b16c00, 0xe1000100, 0xb8100100, 
    0x00000041, 0xc20000ff, 0xc8080001, 0x006c1bb1, 0xeb010300, 0x4c1d0100, 
    0x0204f01b, 0xe0000301, 0xc8020000, 0x00b16c00, 0xe1000100, 0xc8070001, 
    0x00b114c0, 0xeb000003, 0xc80f8000, 0x00000000, 0xe2010100, 0x4e4a0000, 
    0xc09c42a2, 0xa22bd720
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlphaNoDestAlpha.hlsl.h
//    /Vn pBinary_X360_FDrawableCopyPixelsAlphaNoDestAlpha /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCopyPixelsAlphaNoDestAlpha.hlsl
//
//
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
defextern const tex[2], sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy
dcl_texcoord2 r2.xy


    exec
    tfetch2D r0.xyz_, r0.xy, tf0
    tfetch2D r1, r1.xy, tf1
    tfetch2D r0.___w, r2.xy, tf2
    alloc colors
    exece
    mul r0.w, r1.w, r0.w
    add r1.xyz, r1.xyz, -r0.xyz
    mad oC0.xyz1, r0.w, r1.xyz, r0.xyz

// PDB hint 4e4a0000-92561587-c5a13eaa

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCopyPixelsAlphaNoDestAlpha.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCopyPixelsAlphaNoDestAlpha[] =
{
    0x102a1100, 0x00000130, 0x0000006c, 0x00000024, 0x000000a8, 0x00000000, 
    0x00000104, 0x00000000, 0x00000000, 0x50c76f39, 0x00000079, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f70, 0x79506978, 0x656c7341, 0x6c706861, 
    0x4e6f4465, 0x7374416c, 0x7068612e, 0x686c736c, 0x2e757064, 0x62000000, 
    0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 0x0000001c, 
    0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00030000, 0x00000034, 
    0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00030000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x0000006c, 0x10000200, 0x00000004, 0x00000000, 0x00001863, 0x00070007, 
    0x00000001, 0x00003050, 0x00003151, 0x00003252, 0x00153002, 0x00001200, 
    0xc4000000, 0x00003005, 0x00002200, 0x00000000, 0x10080001, 0x1f1ffe88, 
    0x00004000, 0x10181021, 0x1f1ff688, 0x00004000, 0x10280041, 0x1f1ff7ff, 
    0x00004000, 0xc8080000, 0x001b1b00, 0xe1010000, 0xc8070001, 0x02c0c000, 
    0xe0010000, 0xc88fc000, 0x001bc0c0, 0xeb000100, 0x4e4a0000, 0x92561587, 
    0xc5a13eaa
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableMerge.hlsl.h /Vn
//    pBinary_X360_FDrawableMerge /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableMerge.hlsl
//
//
// Parameters:
//
//   float4x4 cxmul;
//   float4x4 cxmul1;
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       4
//   cxmul1       c4       4
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const cxmul, float, matrix_columns, [4, 4], c0-3
defextern const cxmul1, float, matrix_columns, [4, 4], c4-7
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy


    exec
    tfetch2D r2, r1.xy, tf1
    tfetch2D r3, r0.xy, tf0
    alloc colors
    exec
    dp4 r0.x, r3.wzxy, c2.wzxy
    dp4 r0.y, r2.wzxy, c6.wzxy
    dp4 r0.z, r3.wzxy, c3.wzxy
    dp4 r0.w, r2.wzxy, c7.wzxy
    dp4 r1.x, r3.wzxy, c1.wzxy
    dp4 r1.y, r2.wzxy, c5.wzxy
    exece
    dp4 r1.z, r3.wzxy, c0.wzxy
    dp4 r1.w, r2.wzxy, c4.wzxy
    add oC0.xy, r1.zx, r1.wy
    add oC0.zw, r0.xxxz, r0.yyyw

// PDB hint 4e4a0000-50fe67c1-13056dac

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableMerge.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableMerge[] =
{
    0x102a1100, 0x0000015c, 0x000000b4, 0x00000024, 0x00000090, 0x00000000, 
    0x00000134, 0x00000000, 0x00000000, 0x50c76f39, 0x00000064, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x654d6572, 0x67652e68, 0x6c736c2e, 0x75706462, 
    0x000000a0, 0x0000001c, 0x00000093, 0xffff0300, 0x00000003, 0x0000001c, 
    0x00000000, 0x0000008c, 0x00000058, 0x00020000, 0x00040000, 0x00000060, 
    0x00000000, 0x00000070, 0x00020004, 0x00040000, 0x00000060, 0x00000000, 
    0x00000077, 0x00030000, 0x00020000, 0x0000007c, 0x00000000, 0x63786d75, 
    0x6c00abab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 0x63786d75, 
    0x6c310074, 0x657800ab, 0x0004000c, 0x00010001, 0x00020000, 0x00000000, 
    0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 
    0x000000b4, 0x10000300, 0x00000004, 0x00000000, 0x00001042, 0x00030003, 
    0x00000001, 0x00003050, 0x00003151, 0x00052002, 0x00001200, 0xc4000000, 
    0x00006004, 0x400a1200, 0x22000000, 0x10182021, 0x1f1ff688, 0x00004000, 
    0x10083001, 0x1f1ff688, 0x00004000, 0xc8010000, 0x00a7a700, 0xaf030200, 
    0xc8020000, 0x00a7a700, 0xaf020600, 0xc8040000, 0x00a7a700, 0xaf030300, 
    0xc8080000, 0x00a7a700, 0xaf020700, 0xc8010001, 0x00a7a700, 0xaf030100, 
    0xc8020001, 0x00a7a700, 0xaf020500, 0xc8040001, 0x00a7a700, 0xaf030000, 
    0xc8080001, 0x00a7a700, 0xaf020400, 0xc8038000, 0x006eb300, 0xe0010100, 
    0xc80c8000, 0x00ec3100, 0xe0000000, 0x4e4a0000, 0x50fe67c1, 0x13056dac
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCompare.hlsl.h /Vn
//    pBinary_X360_FDrawableCompare /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawableCompare.hlsl
//
//
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

// Shader type: pixel 

xps_3_0
defextern const tex[0], sampler2d, object, [1, 1], s0
defextern const tex[1], sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=4
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -0.996078432, 0.00392156886, 1, -0.25
def c255, 0.011764707, 0, 0, 0


    exec
    tfetch2D r2, r0.xy, tf0
    tfetch2D r0, r1.xy, tf1
    alloc colors
    exec
    add r4, r2, -r0
    add r1.yzw, r4.zzwy, c254.z
  + movs r0.x, r0.x
    sgt r3, r4.wzxy, -r4.wzxy
  + subsc r1.x, c254.z, r0.x
    sgt r0, -r4.wzxy, r4.wzxy
  + movs r0._, r1.x
    add r0, r3.zwyx, -r0.zwyx
  + adds_prev r1.x, r2.x
    mad r2, r0, c254.w, c254.w
    exec
    frc r1, r1.zxyw
    sgt r4, r2.wzxy, -r2.wzxy
  + movs r0.y, r1.z
    sgt r2, -r2.wzxy, r2.wzxy
  + addsc r3.y, c254.x, r0.y
    add r0, r4.xzwy, -r2.xzwy
  + addsc r3.z, c254.y, r1.x
    mad r2.xy, r0.yz, c254.y, c254.x
    dp2add r0.y, r0.yz, c254.y, r1.w
    exec
    mad r0.x, r0.x, c254.y, r3.z
    addsc r2.z, c255.x, r0.y
    add r3.x, r2.z, r1.y
  + subsc r0.z, c254.z, r0.x
    mad r2.zw, r0.w, c254.y, r3.yyyx
    add r0.y, r2.w, r1.z
  + movs r0._, r2.x
    sgt r0.w, r0.y, -r0.y
  + adds_prev r2.x, r1.y
    exece
    sgt r0.y, -r0.y, r0.y
  + movs r0._, r2.y
    add r0.y, r0.w, -r0.y
  + adds_prev r2.y, r1.w
    mad oC0.w, r0.z, r0.y, r0.x
    mad oC0.xyz, r2.xyz, r0.y, c254.z

// PDB hint 4e4a0000-63b33c21-e281ed5c

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawableCompare.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawableCompare[] =
{
    0x102a1100, 0x00000140, 0x00000190, 0x00000024, 0x00000094, 0x000000f0, 
    0x00000118, 0x00000000, 0x00000000, 0x50c76f39, 0x00000066, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x65436f6d, 0x70617265, 0x2e686c73, 0x6c2e7570, 
    0x64620000, 0x00000058, 0x0000001c, 0x0000004b, 0xffff0300, 0x00000001, 
    0x0000001c, 0x00000000, 0x00000044, 0x00000030, 0x00030000, 0x00020000, 
    0x00000034, 0x00000000, 0x74657800, 0x0004000c, 0x00010001, 0x00020000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000150, 
    0x10000400, 0x00000004, 0x00000000, 0x00001042, 0x00030003, 0x00000001, 
    0x00003050, 0x00003151, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xbf7efeff, 0x3b808081, 
    0x3f800000, 0xbe800000, 0x3c40c0c2, 0x00000000, 0x00000000, 0x00000000, 
    0x00052003, 0x00001200, 0xc4000000, 0x00006005, 0x600b1200, 0x12000000, 
    0x00006011, 0x40171200, 0x22000000, 0x10082001, 0x1f1ff688, 0x00004000, 
    0x10180021, 0x1f1ff688, 0x00004000, 0xc80f0004, 0x02000000, 0xe0020000, 
    0x141e0001, 0x0096c66c, 0xa004fe00, 0xb81f0103, 0x02a7a7c0, 0xc50404fe, 
    0x140f0000, 0x04a7a76c, 0xe5040401, 0x041f0100, 0x027a7a6c, 0xe0030002, 
    0xc80f0002, 0x00001b1b, 0x8b00fefe, 0xc80f0001, 0x003e0000, 0xe8010000, 
    0x142f0004, 0x02a7a7c6, 0xe5020201, 0xb02f0302, 0x04a7a741, 0xc50202fe, 
    0xb44f0300, 0x02949480, 0xc00402fe, 0xc8030002, 0x00c5b16c, 0x8b00fefe, 
    0xc8020000, 0x00c5b11b, 0xb100fe01, 0xc8010000, 0x006cb1c6, 0xab00fe03, 
    0xb0400200, 0x00000041, 0xc20000ff, 0xb8410003, 0x00c6b1c0, 0xc00201fe, 
    0xc80c0002, 0x001bb171, 0xab00fe03, 0x14020000, 0x001bc66c, 0xe0020102, 
    0x04180200, 0x02b1b1b1, 0xe5000001, 0x14020000, 0x04b1b1b1, 0xe5000002, 
    0x04220200, 0x021bb11b, 0xe0000001, 0xc8088000, 0x00c6b16c, 0xeb000000, 
    0xc8078000, 0x00c0b1c6, 0xcb0200fe, 0x4e4a0000, 0x63b33c21, 0xe281ed5c
};
#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /nologo /E main /T ps_3_0 /Fh
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawablePaletteMap.hlsl.h /Vn
//    pBinary_X360_FDrawablePaletteMap /XZi
//    ..\..\..\..\..\Src\Render\\X360\Shaders\FDrawablePaletteMap.hlsl
//
//
// Parameters:
//
//   sampler2D srctex;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   srctex       s0       1
//   tex          s1       1
//

// Shader type: pixel 

xps_3_0
defextern const srctex, sampler2d, object, [1, 1], s0
defextern const tex, sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=3
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.125, 0.875, 0, 1
def c255, 0.375, 0.625, 0, 0


    exec
    tfetch2D r0, r0.xy, tf1, FetchValidOnly=false
    serialize
    cndeq r2, c254.zzw, r0.yz, c255.xxxy
    cndeq r3, c254.zzw, r0.xw, c254.xxxy
    tfetch2D r0, r3.yw, tf0
    tfetch2D r1, r2.yw, tf0
    tfetch2D r3, r3.xz, tf0
    exec
    tfetch2D r2, r2.xz, tf0
    alloc colors
    exece
    add r2, r3, r2
    add r1, r2, r1
    add oC0, r1, r0

// PDB hint 4e4a0000-86f42260-9b9e1282

// Debugger Hint:
//  Timestamp: 50c76f39
//  Path: "C:\w\dd31b82c0738da97\Scaleform\Releases\GFx_4.2.22\Src\Render\X360\Shaders\FDrawablePaletteMap.hlsl.updb"
#endif

// This microcode is in native DWORD byte order.

extern const DWORD pBinary_X360_FDrawablePaletteMap[] =
{
    0x102a1100, 0x0000015c, 0x000000dc, 0x00000024, 0x00000098, 0x00000110, 
    0x00000138, 0x00000000, 0x00000000, 0x50c76f39, 0x00000069, 0x433a5c77, 
    0x5c646433, 0x31623832, 0x63303733, 0x38646139, 0x375c5363, 0x616c6566, 
    0x6f726d5c, 0x52656c65, 0x61736573, 0x5c474678, 0x5f342e32, 0x2e32325c, 
    0x5372635c, 0x52656e64, 0x65725c58, 0x3336305c, 0x53686164, 0x6572735c, 
    0x46447261, 0x7761626c, 0x6550616c, 0x65747465, 0x4d61702e, 0x686c736c, 
    0x2e757064, 0x62000000, 0x00000074, 0x0000001c, 0x00000067, 0xffff0300, 
    0x00000002, 0x0000001c, 0x00000000, 0x00000060, 0x00000044, 0x00030000, 
    0x00010000, 0x0000004c, 0x00000000, 0x0000005c, 0x00030001, 0x00010000, 
    0x0000004c, 0x00000000, 0x73726374, 0x657800ab, 0x0004000c, 0x00010001, 
    0x00010000, 0x00000000, 0x74657800, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x31313139, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x0000009c, 0x10000300, 0x00000004, 0x00000000, 0x00000821, 
    0x00010001, 0x00000001, 0x00003050, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3e000000, 
    0x3f600000, 0x00000000, 0x3f800000, 0x3ec00000, 0x3f200000, 0x00000000, 
    0x00000000, 0x05496002, 0x10081200, 0x12000001, 0x00000000, 0x3009c400, 
    0x22000000, 0x10100001, 0x1f1ff688, 0x00004000, 0xc80f0002, 0x0016c5ac, 
    0x4cfe00ff, 0xc80f0003, 0x001618ac, 0x4cfe00fe, 0x74080061, 0x1f1ff688, 
    0x00004000, 0x74081041, 0x1f1ff688, 0x00004000, 0x20083061, 0x1f1ff688, 
    0x00004000, 0x20082041, 0x1f1ff688, 0x00004000, 0xc80f0002, 0x00000000, 
    0xe0030200, 0xc80f0001, 0x00000000, 0xe0020100, 0xc80f8000, 0x00000000, 
    0xe0010000, 0x4e4a0000, 0x86f42260, 0x9b9e1282
};
}}}; // Scaleform::Render::X360


